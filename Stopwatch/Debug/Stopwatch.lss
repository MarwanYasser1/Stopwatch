
Stopwatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000146  00800060  000023e0  00002454  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001b78  00000000  00000000  0000259c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000de4  00000000  00000000  00004114  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  00004ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d1  00000000  00000000  00005078  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002010  00000000  00000000  00005249  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001161  00000000  00000000  00007259  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001003  00000000  00000000  000083ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000093c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002be  00000000  00000000  00009560  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000090e  00000000  00000000  0000981e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a12c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 ee       	ldi	r30, 0xE0	; 224
      68:	f3 e2       	ldi	r31, 0x23	; 35
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 3a       	cpi	r26, 0xA6	; 166
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 88 0c 	call	0x1910	; 0x1910 <main>
      7a:	0c 94 ee 11 	jmp	0x23dc	; 0x23dc <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b7 11 	jmp	0x236e	; 0x236e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a5 e7       	ldi	r26, 0x75	; 117
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d3 11 	jmp	0x23a6	; 0x23a6 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c3 11 	jmp	0x2386	; 0x2386 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 df 11 	jmp	0x23be	; 0x23be <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c3 11 	jmp	0x2386	; 0x2386 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 df 11 	jmp	0x23be	; 0x23be <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b7 11 	jmp	0x236e	; 0x236e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	85 e7       	ldi	r24, 0x75	; 117
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d3 11 	jmp	0x23a6	; 0x23a6 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c3 11 	jmp	0x2386	; 0x2386 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 ef 05 	call	0xbde	; 0xbde <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 df 11 	jmp	0x23be	; 0x23be <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c3 11 	jmp	0x2386	; 0x2386 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 ef 05 	call	0xbde	; 0xbde <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 df 11 	jmp	0x23be	; 0x23be <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c3 11 	jmp	0x2386	; 0x2386 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 ef 05 	call	0xbde	; 0xbde <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 df 11 	jmp	0x23be	; 0x23be <__epilogue_restores__+0x18>

00000742 <__floatsisf>:
     742:	a8 e0       	ldi	r26, 0x08	; 8
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 c0 11 	jmp	0x2380	; 0x2380 <__prologue_saves__+0x12>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	83 e0       	ldi	r24, 0x03	; 3
     754:	89 83       	std	Y+1, r24	; 0x01
     756:	da 01       	movw	r26, r20
     758:	c9 01       	movw	r24, r18
     75a:	88 27       	eor	r24, r24
     75c:	b7 fd       	sbrc	r27, 7
     75e:	83 95       	inc	r24
     760:	99 27       	eor	r25, r25
     762:	aa 27       	eor	r26, r26
     764:	bb 27       	eor	r27, r27
     766:	b8 2e       	mov	r11, r24
     768:	21 15       	cp	r18, r1
     76a:	31 05       	cpc	r19, r1
     76c:	41 05       	cpc	r20, r1
     76e:	51 05       	cpc	r21, r1
     770:	19 f4       	brne	.+6      	; 0x778 <__floatsisf+0x36>
     772:	82 e0       	ldi	r24, 0x02	; 2
     774:	89 83       	std	Y+1, r24	; 0x01
     776:	3a c0       	rjmp	.+116    	; 0x7ec <__floatsisf+0xaa>
     778:	88 23       	and	r24, r24
     77a:	a9 f0       	breq	.+42     	; 0x7a6 <__floatsisf+0x64>
     77c:	20 30       	cpi	r18, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	38 07       	cpc	r19, r24
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	48 07       	cpc	r20, r24
     786:	80 e8       	ldi	r24, 0x80	; 128
     788:	58 07       	cpc	r21, r24
     78a:	29 f4       	brne	.+10     	; 0x796 <__floatsisf+0x54>
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	9f ec       	ldi	r25, 0xCF	; 207
     794:	30 c0       	rjmp	.+96     	; 0x7f6 <__floatsisf+0xb4>
     796:	ee 24       	eor	r14, r14
     798:	ff 24       	eor	r15, r15
     79a:	87 01       	movw	r16, r14
     79c:	e2 1a       	sub	r14, r18
     79e:	f3 0a       	sbc	r15, r19
     7a0:	04 0b       	sbc	r16, r20
     7a2:	15 0b       	sbc	r17, r21
     7a4:	02 c0       	rjmp	.+4      	; 0x7aa <__floatsisf+0x68>
     7a6:	79 01       	movw	r14, r18
     7a8:	8a 01       	movw	r16, r20
     7aa:	8e e1       	ldi	r24, 0x1E	; 30
     7ac:	c8 2e       	mov	r12, r24
     7ae:	d1 2c       	mov	r13, r1
     7b0:	dc 82       	std	Y+4, r13	; 0x04
     7b2:	cb 82       	std	Y+3, r12	; 0x03
     7b4:	ed 82       	std	Y+5, r14	; 0x05
     7b6:	fe 82       	std	Y+6, r15	; 0x06
     7b8:	0f 83       	std	Y+7, r16	; 0x07
     7ba:	18 87       	std	Y+8, r17	; 0x08
     7bc:	c8 01       	movw	r24, r16
     7be:	b7 01       	movw	r22, r14
     7c0:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__clzsi2>
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	18 16       	cp	r1, r24
     7c8:	19 06       	cpc	r1, r25
     7ca:	84 f4       	brge	.+32     	; 0x7ec <__floatsisf+0xaa>
     7cc:	08 2e       	mov	r0, r24
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <__floatsisf+0x96>
     7d0:	ee 0c       	add	r14, r14
     7d2:	ff 1c       	adc	r15, r15
     7d4:	00 1f       	adc	r16, r16
     7d6:	11 1f       	adc	r17, r17
     7d8:	0a 94       	dec	r0
     7da:	d2 f7       	brpl	.-12     	; 0x7d0 <__floatsisf+0x8e>
     7dc:	ed 82       	std	Y+5, r14	; 0x05
     7de:	fe 82       	std	Y+6, r15	; 0x06
     7e0:	0f 83       	std	Y+7, r16	; 0x07
     7e2:	18 87       	std	Y+8, r17	; 0x08
     7e4:	c8 1a       	sub	r12, r24
     7e6:	d9 0a       	sbc	r13, r25
     7e8:	dc 82       	std	Y+4, r13	; 0x04
     7ea:	cb 82       	std	Y+3, r12	; 0x03
     7ec:	ba 82       	std	Y+2, r11	; 0x02
     7ee:	ce 01       	movw	r24, r28
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     7f6:	28 96       	adiw	r28, 0x08	; 8
     7f8:	e9 e0       	ldi	r30, 0x09	; 9
     7fa:	0c 94 dc 11 	jmp	0x23b8	; 0x23b8 <__epilogue_restores__+0x12>

000007fe <__fixsfsi>:
     7fe:	ac e0       	ldi	r26, 0x0C	; 12
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	e5 e0       	ldi	r30, 0x05	; 5
     804:	f4 e0       	ldi	r31, 0x04	; 4
     806:	0c 94 c7 11 	jmp	0x238e	; 0x238e <__prologue_saves__+0x20>
     80a:	69 83       	std	Y+1, r22	; 0x01
     80c:	7a 83       	std	Y+2, r23	; 0x02
     80e:	8b 83       	std	Y+3, r24	; 0x03
     810:	9c 83       	std	Y+4, r25	; 0x04
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	be 01       	movw	r22, r28
     818:	6b 5f       	subi	r22, 0xFB	; 251
     81a:	7f 4f       	sbci	r23, 0xFF	; 255
     81c:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     820:	8d 81       	ldd	r24, Y+5	; 0x05
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	61 f1       	breq	.+88     	; 0x87e <__stack+0x1f>
     826:	82 30       	cpi	r24, 0x02	; 2
     828:	50 f1       	brcs	.+84     	; 0x87e <__stack+0x1f>
     82a:	84 30       	cpi	r24, 0x04	; 4
     82c:	21 f4       	brne	.+8      	; 0x836 <__fixsfsi+0x38>
     82e:	8e 81       	ldd	r24, Y+6	; 0x06
     830:	88 23       	and	r24, r24
     832:	51 f1       	breq	.+84     	; 0x888 <__stack+0x29>
     834:	2e c0       	rjmp	.+92     	; 0x892 <__stack+0x33>
     836:	2f 81       	ldd	r18, Y+7	; 0x07
     838:	38 85       	ldd	r19, Y+8	; 0x08
     83a:	37 fd       	sbrc	r19, 7
     83c:	20 c0       	rjmp	.+64     	; 0x87e <__stack+0x1f>
     83e:	6e 81       	ldd	r22, Y+6	; 0x06
     840:	2f 31       	cpi	r18, 0x1F	; 31
     842:	31 05       	cpc	r19, r1
     844:	1c f0       	brlt	.+6      	; 0x84c <__fixsfsi+0x4e>
     846:	66 23       	and	r22, r22
     848:	f9 f0       	breq	.+62     	; 0x888 <__stack+0x29>
     84a:	23 c0       	rjmp	.+70     	; 0x892 <__stack+0x33>
     84c:	8e e1       	ldi	r24, 0x1E	; 30
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	82 1b       	sub	r24, r18
     852:	93 0b       	sbc	r25, r19
     854:	29 85       	ldd	r18, Y+9	; 0x09
     856:	3a 85       	ldd	r19, Y+10	; 0x0a
     858:	4b 85       	ldd	r20, Y+11	; 0x0b
     85a:	5c 85       	ldd	r21, Y+12	; 0x0c
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	56 95       	lsr	r21
     860:	47 95       	ror	r20
     862:	37 95       	ror	r19
     864:	27 95       	ror	r18
     866:	8a 95       	dec	r24
     868:	d2 f7       	brpl	.-12     	; 0x85e <__fixsfsi+0x60>
     86a:	66 23       	and	r22, r22
     86c:	b1 f0       	breq	.+44     	; 0x89a <__stack+0x3b>
     86e:	50 95       	com	r21
     870:	40 95       	com	r20
     872:	30 95       	com	r19
     874:	21 95       	neg	r18
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	4f 4f       	sbci	r20, 0xFF	; 255
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	0e c0       	rjmp	.+28     	; 0x89a <__stack+0x3b>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	09 c0       	rjmp	.+18     	; 0x89a <__stack+0x3b>
     888:	2f ef       	ldi	r18, 0xFF	; 255
     88a:	3f ef       	ldi	r19, 0xFF	; 255
     88c:	4f ef       	ldi	r20, 0xFF	; 255
     88e:	5f e7       	ldi	r21, 0x7F	; 127
     890:	04 c0       	rjmp	.+8      	; 0x89a <__stack+0x3b>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	50 e8       	ldi	r21, 0x80	; 128
     89a:	b9 01       	movw	r22, r18
     89c:	ca 01       	movw	r24, r20
     89e:	2c 96       	adiw	r28, 0x0c	; 12
     8a0:	e2 e0       	ldi	r30, 0x02	; 2
     8a2:	0c 94 e3 11 	jmp	0x23c6	; 0x23c6 <__epilogue_restores__+0x20>

000008a6 <__clzsi2>:
     8a6:	ef 92       	push	r14
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	7b 01       	movw	r14, r22
     8b0:	8c 01       	movw	r16, r24
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	e8 16       	cp	r14, r24
     8b6:	80 e0       	ldi	r24, 0x00	; 0
     8b8:	f8 06       	cpc	r15, r24
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	08 07       	cpc	r16, r24
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	18 07       	cpc	r17, r24
     8c2:	88 f4       	brcc	.+34     	; 0x8e6 <__clzsi2+0x40>
     8c4:	8f ef       	ldi	r24, 0xFF	; 255
     8c6:	e8 16       	cp	r14, r24
     8c8:	f1 04       	cpc	r15, r1
     8ca:	01 05       	cpc	r16, r1
     8cc:	11 05       	cpc	r17, r1
     8ce:	31 f0       	breq	.+12     	; 0x8dc <__clzsi2+0x36>
     8d0:	28 f0       	brcs	.+10     	; 0x8dc <__clzsi2+0x36>
     8d2:	88 e0       	ldi	r24, 0x08	; 8
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	17 c0       	rjmp	.+46     	; 0x90a <__clzsi2+0x64>
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	a0 e0       	ldi	r26, 0x00	; 0
     8e2:	b0 e0       	ldi	r27, 0x00	; 0
     8e4:	12 c0       	rjmp	.+36     	; 0x90a <__clzsi2+0x64>
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	e8 16       	cp	r14, r24
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	f8 06       	cpc	r15, r24
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	08 07       	cpc	r16, r24
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	18 07       	cpc	r17, r24
     8f6:	28 f0       	brcs	.+10     	; 0x902 <__clzsi2+0x5c>
     8f8:	88 e1       	ldi	r24, 0x18	; 24
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	a0 e0       	ldi	r26, 0x00	; 0
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	04 c0       	rjmp	.+8      	; 0x90a <__clzsi2+0x64>
     902:	80 e1       	ldi	r24, 0x10	; 16
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	a0 e0       	ldi	r26, 0x00	; 0
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	20 e2       	ldi	r18, 0x20	; 32
     90c:	30 e0       	ldi	r19, 0x00	; 0
     90e:	40 e0       	ldi	r20, 0x00	; 0
     910:	50 e0       	ldi	r21, 0x00	; 0
     912:	28 1b       	sub	r18, r24
     914:	39 0b       	sbc	r19, r25
     916:	4a 0b       	sbc	r20, r26
     918:	5b 0b       	sbc	r21, r27
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__clzsi2+0x7e>
     91c:	16 95       	lsr	r17
     91e:	07 95       	ror	r16
     920:	f7 94       	ror	r15
     922:	e7 94       	ror	r14
     924:	8a 95       	dec	r24
     926:	d2 f7       	brpl	.-12     	; 0x91c <__clzsi2+0x76>
     928:	f7 01       	movw	r30, r14
     92a:	e3 58       	subi	r30, 0x83	; 131
     92c:	ff 4f       	sbci	r31, 0xFF	; 255
     92e:	80 81       	ld	r24, Z
     930:	28 1b       	sub	r18, r24
     932:	31 09       	sbc	r19, r1
     934:	41 09       	sbc	r20, r1
     936:	51 09       	sbc	r21, r1
     938:	c9 01       	movw	r24, r18
     93a:	1f 91       	pop	r17
     93c:	0f 91       	pop	r16
     93e:	ff 90       	pop	r15
     940:	ef 90       	pop	r14
     942:	08 95       	ret

00000944 <__pack_f>:
     944:	df 92       	push	r13
     946:	ef 92       	push	r14
     948:	ff 92       	push	r15
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	fc 01       	movw	r30, r24
     950:	e4 80       	ldd	r14, Z+4	; 0x04
     952:	f5 80       	ldd	r15, Z+5	; 0x05
     954:	06 81       	ldd	r16, Z+6	; 0x06
     956:	17 81       	ldd	r17, Z+7	; 0x07
     958:	d1 80       	ldd	r13, Z+1	; 0x01
     95a:	80 81       	ld	r24, Z
     95c:	82 30       	cpi	r24, 0x02	; 2
     95e:	48 f4       	brcc	.+18     	; 0x972 <__pack_f+0x2e>
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	a0 e1       	ldi	r26, 0x10	; 16
     966:	b0 e0       	ldi	r27, 0x00	; 0
     968:	e8 2a       	or	r14, r24
     96a:	f9 2a       	or	r15, r25
     96c:	0a 2b       	or	r16, r26
     96e:	1b 2b       	or	r17, r27
     970:	a5 c0       	rjmp	.+330    	; 0xabc <__pack_f+0x178>
     972:	84 30       	cpi	r24, 0x04	; 4
     974:	09 f4       	brne	.+2      	; 0x978 <__pack_f+0x34>
     976:	9f c0       	rjmp	.+318    	; 0xab6 <__pack_f+0x172>
     978:	82 30       	cpi	r24, 0x02	; 2
     97a:	21 f4       	brne	.+8      	; 0x984 <__pack_f+0x40>
     97c:	ee 24       	eor	r14, r14
     97e:	ff 24       	eor	r15, r15
     980:	87 01       	movw	r16, r14
     982:	05 c0       	rjmp	.+10     	; 0x98e <__pack_f+0x4a>
     984:	e1 14       	cp	r14, r1
     986:	f1 04       	cpc	r15, r1
     988:	01 05       	cpc	r16, r1
     98a:	11 05       	cpc	r17, r1
     98c:	19 f4       	brne	.+6      	; 0x994 <__pack_f+0x50>
     98e:	e0 e0       	ldi	r30, 0x00	; 0
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	96 c0       	rjmp	.+300    	; 0xac0 <__pack_f+0x17c>
     994:	62 81       	ldd	r22, Z+2	; 0x02
     996:	73 81       	ldd	r23, Z+3	; 0x03
     998:	9f ef       	ldi	r25, 0xFF	; 255
     99a:	62 38       	cpi	r22, 0x82	; 130
     99c:	79 07       	cpc	r23, r25
     99e:	0c f0       	brlt	.+2      	; 0x9a2 <__pack_f+0x5e>
     9a0:	5b c0       	rjmp	.+182    	; 0xa58 <__pack_f+0x114>
     9a2:	22 e8       	ldi	r18, 0x82	; 130
     9a4:	3f ef       	ldi	r19, 0xFF	; 255
     9a6:	26 1b       	sub	r18, r22
     9a8:	37 0b       	sbc	r19, r23
     9aa:	2a 31       	cpi	r18, 0x1A	; 26
     9ac:	31 05       	cpc	r19, r1
     9ae:	2c f0       	brlt	.+10     	; 0x9ba <__pack_f+0x76>
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	2a c0       	rjmp	.+84     	; 0xa0e <__pack_f+0xca>
     9ba:	b8 01       	movw	r22, r16
     9bc:	a7 01       	movw	r20, r14
     9be:	02 2e       	mov	r0, r18
     9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__pack_f+0x86>
     9c2:	76 95       	lsr	r23
     9c4:	67 95       	ror	r22
     9c6:	57 95       	ror	r21
     9c8:	47 95       	ror	r20
     9ca:	0a 94       	dec	r0
     9cc:	d2 f7       	brpl	.-12     	; 0x9c2 <__pack_f+0x7e>
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	a0 e0       	ldi	r26, 0x00	; 0
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	04 c0       	rjmp	.+8      	; 0x9e0 <__pack_f+0x9c>
     9d8:	88 0f       	add	r24, r24
     9da:	99 1f       	adc	r25, r25
     9dc:	aa 1f       	adc	r26, r26
     9de:	bb 1f       	adc	r27, r27
     9e0:	2a 95       	dec	r18
     9e2:	d2 f7       	brpl	.-12     	; 0x9d8 <__pack_f+0x94>
     9e4:	01 97       	sbiw	r24, 0x01	; 1
     9e6:	a1 09       	sbc	r26, r1
     9e8:	b1 09       	sbc	r27, r1
     9ea:	8e 21       	and	r24, r14
     9ec:	9f 21       	and	r25, r15
     9ee:	a0 23       	and	r26, r16
     9f0:	b1 23       	and	r27, r17
     9f2:	00 97       	sbiw	r24, 0x00	; 0
     9f4:	a1 05       	cpc	r26, r1
     9f6:	b1 05       	cpc	r27, r1
     9f8:	21 f0       	breq	.+8      	; 0xa02 <__pack_f+0xbe>
     9fa:	81 e0       	ldi	r24, 0x01	; 1
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	a0 e0       	ldi	r26, 0x00	; 0
     a00:	b0 e0       	ldi	r27, 0x00	; 0
     a02:	9a 01       	movw	r18, r20
     a04:	ab 01       	movw	r20, r22
     a06:	28 2b       	or	r18, r24
     a08:	39 2b       	or	r19, r25
     a0a:	4a 2b       	or	r20, r26
     a0c:	5b 2b       	or	r21, r27
     a0e:	da 01       	movw	r26, r20
     a10:	c9 01       	movw	r24, r18
     a12:	8f 77       	andi	r24, 0x7F	; 127
     a14:	90 70       	andi	r25, 0x00	; 0
     a16:	a0 70       	andi	r26, 0x00	; 0
     a18:	b0 70       	andi	r27, 0x00	; 0
     a1a:	80 34       	cpi	r24, 0x40	; 64
     a1c:	91 05       	cpc	r25, r1
     a1e:	a1 05       	cpc	r26, r1
     a20:	b1 05       	cpc	r27, r1
     a22:	39 f4       	brne	.+14     	; 0xa32 <__pack_f+0xee>
     a24:	27 ff       	sbrs	r18, 7
     a26:	09 c0       	rjmp	.+18     	; 0xa3a <__pack_f+0xf6>
     a28:	20 5c       	subi	r18, 0xC0	; 192
     a2a:	3f 4f       	sbci	r19, 0xFF	; 255
     a2c:	4f 4f       	sbci	r20, 0xFF	; 255
     a2e:	5f 4f       	sbci	r21, 0xFF	; 255
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <__pack_f+0xf6>
     a32:	21 5c       	subi	r18, 0xC1	; 193
     a34:	3f 4f       	sbci	r19, 0xFF	; 255
     a36:	4f 4f       	sbci	r20, 0xFF	; 255
     a38:	5f 4f       	sbci	r21, 0xFF	; 255
     a3a:	e0 e0       	ldi	r30, 0x00	; 0
     a3c:	f0 e0       	ldi	r31, 0x00	; 0
     a3e:	20 30       	cpi	r18, 0x00	; 0
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	3a 07       	cpc	r19, r26
     a44:	a0 e0       	ldi	r26, 0x00	; 0
     a46:	4a 07       	cpc	r20, r26
     a48:	a0 e4       	ldi	r26, 0x40	; 64
     a4a:	5a 07       	cpc	r21, r26
     a4c:	10 f0       	brcs	.+4      	; 0xa52 <__pack_f+0x10e>
     a4e:	e1 e0       	ldi	r30, 0x01	; 1
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	79 01       	movw	r14, r18
     a54:	8a 01       	movw	r16, r20
     a56:	27 c0       	rjmp	.+78     	; 0xaa6 <__pack_f+0x162>
     a58:	60 38       	cpi	r22, 0x80	; 128
     a5a:	71 05       	cpc	r23, r1
     a5c:	64 f5       	brge	.+88     	; 0xab6 <__pack_f+0x172>
     a5e:	fb 01       	movw	r30, r22
     a60:	e1 58       	subi	r30, 0x81	; 129
     a62:	ff 4f       	sbci	r31, 0xFF	; 255
     a64:	d8 01       	movw	r26, r16
     a66:	c7 01       	movw	r24, r14
     a68:	8f 77       	andi	r24, 0x7F	; 127
     a6a:	90 70       	andi	r25, 0x00	; 0
     a6c:	a0 70       	andi	r26, 0x00	; 0
     a6e:	b0 70       	andi	r27, 0x00	; 0
     a70:	80 34       	cpi	r24, 0x40	; 64
     a72:	91 05       	cpc	r25, r1
     a74:	a1 05       	cpc	r26, r1
     a76:	b1 05       	cpc	r27, r1
     a78:	39 f4       	brne	.+14     	; 0xa88 <__pack_f+0x144>
     a7a:	e7 fe       	sbrs	r14, 7
     a7c:	0d c0       	rjmp	.+26     	; 0xa98 <__pack_f+0x154>
     a7e:	80 e4       	ldi	r24, 0x40	; 64
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	a0 e0       	ldi	r26, 0x00	; 0
     a84:	b0 e0       	ldi	r27, 0x00	; 0
     a86:	04 c0       	rjmp	.+8      	; 0xa90 <__pack_f+0x14c>
     a88:	8f e3       	ldi	r24, 0x3F	; 63
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	a0 e0       	ldi	r26, 0x00	; 0
     a8e:	b0 e0       	ldi	r27, 0x00	; 0
     a90:	e8 0e       	add	r14, r24
     a92:	f9 1e       	adc	r15, r25
     a94:	0a 1f       	adc	r16, r26
     a96:	1b 1f       	adc	r17, r27
     a98:	17 ff       	sbrs	r17, 7
     a9a:	05 c0       	rjmp	.+10     	; 0xaa6 <__pack_f+0x162>
     a9c:	16 95       	lsr	r17
     a9e:	07 95       	ror	r16
     aa0:	f7 94       	ror	r15
     aa2:	e7 94       	ror	r14
     aa4:	31 96       	adiw	r30, 0x01	; 1
     aa6:	87 e0       	ldi	r24, 0x07	; 7
     aa8:	16 95       	lsr	r17
     aaa:	07 95       	ror	r16
     aac:	f7 94       	ror	r15
     aae:	e7 94       	ror	r14
     ab0:	8a 95       	dec	r24
     ab2:	d1 f7       	brne	.-12     	; 0xaa8 <__pack_f+0x164>
     ab4:	05 c0       	rjmp	.+10     	; 0xac0 <__pack_f+0x17c>
     ab6:	ee 24       	eor	r14, r14
     ab8:	ff 24       	eor	r15, r15
     aba:	87 01       	movw	r16, r14
     abc:	ef ef       	ldi	r30, 0xFF	; 255
     abe:	f0 e0       	ldi	r31, 0x00	; 0
     ac0:	6e 2f       	mov	r22, r30
     ac2:	67 95       	ror	r22
     ac4:	66 27       	eor	r22, r22
     ac6:	67 95       	ror	r22
     ac8:	90 2f       	mov	r25, r16
     aca:	9f 77       	andi	r25, 0x7F	; 127
     acc:	d7 94       	ror	r13
     ace:	dd 24       	eor	r13, r13
     ad0:	d7 94       	ror	r13
     ad2:	8e 2f       	mov	r24, r30
     ad4:	86 95       	lsr	r24
     ad6:	49 2f       	mov	r20, r25
     ad8:	46 2b       	or	r20, r22
     ada:	58 2f       	mov	r21, r24
     adc:	5d 29       	or	r21, r13
     ade:	b7 01       	movw	r22, r14
     ae0:	ca 01       	movw	r24, r20
     ae2:	1f 91       	pop	r17
     ae4:	0f 91       	pop	r16
     ae6:	ff 90       	pop	r15
     ae8:	ef 90       	pop	r14
     aea:	df 90       	pop	r13
     aec:	08 95       	ret

00000aee <__unpack_f>:
     aee:	fc 01       	movw	r30, r24
     af0:	db 01       	movw	r26, r22
     af2:	40 81       	ld	r20, Z
     af4:	51 81       	ldd	r21, Z+1	; 0x01
     af6:	22 81       	ldd	r18, Z+2	; 0x02
     af8:	62 2f       	mov	r22, r18
     afa:	6f 77       	andi	r22, 0x7F	; 127
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	22 1f       	adc	r18, r18
     b00:	22 27       	eor	r18, r18
     b02:	22 1f       	adc	r18, r18
     b04:	93 81       	ldd	r25, Z+3	; 0x03
     b06:	89 2f       	mov	r24, r25
     b08:	88 0f       	add	r24, r24
     b0a:	82 2b       	or	r24, r18
     b0c:	28 2f       	mov	r18, r24
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	99 1f       	adc	r25, r25
     b12:	99 27       	eor	r25, r25
     b14:	99 1f       	adc	r25, r25
     b16:	11 96       	adiw	r26, 0x01	; 1
     b18:	9c 93       	st	X, r25
     b1a:	11 97       	sbiw	r26, 0x01	; 1
     b1c:	21 15       	cp	r18, r1
     b1e:	31 05       	cpc	r19, r1
     b20:	a9 f5       	brne	.+106    	; 0xb8c <__unpack_f+0x9e>
     b22:	41 15       	cp	r20, r1
     b24:	51 05       	cpc	r21, r1
     b26:	61 05       	cpc	r22, r1
     b28:	71 05       	cpc	r23, r1
     b2a:	11 f4       	brne	.+4      	; 0xb30 <__unpack_f+0x42>
     b2c:	82 e0       	ldi	r24, 0x02	; 2
     b2e:	37 c0       	rjmp	.+110    	; 0xb9e <__unpack_f+0xb0>
     b30:	82 e8       	ldi	r24, 0x82	; 130
     b32:	9f ef       	ldi	r25, 0xFF	; 255
     b34:	13 96       	adiw	r26, 0x03	; 3
     b36:	9c 93       	st	X, r25
     b38:	8e 93       	st	-X, r24
     b3a:	12 97       	sbiw	r26, 0x02	; 2
     b3c:	9a 01       	movw	r18, r20
     b3e:	ab 01       	movw	r20, r22
     b40:	67 e0       	ldi	r22, 0x07	; 7
     b42:	22 0f       	add	r18, r18
     b44:	33 1f       	adc	r19, r19
     b46:	44 1f       	adc	r20, r20
     b48:	55 1f       	adc	r21, r21
     b4a:	6a 95       	dec	r22
     b4c:	d1 f7       	brne	.-12     	; 0xb42 <__unpack_f+0x54>
     b4e:	83 e0       	ldi	r24, 0x03	; 3
     b50:	8c 93       	st	X, r24
     b52:	0d c0       	rjmp	.+26     	; 0xb6e <__unpack_f+0x80>
     b54:	22 0f       	add	r18, r18
     b56:	33 1f       	adc	r19, r19
     b58:	44 1f       	adc	r20, r20
     b5a:	55 1f       	adc	r21, r21
     b5c:	12 96       	adiw	r26, 0x02	; 2
     b5e:	8d 91       	ld	r24, X+
     b60:	9c 91       	ld	r25, X
     b62:	13 97       	sbiw	r26, 0x03	; 3
     b64:	01 97       	sbiw	r24, 0x01	; 1
     b66:	13 96       	adiw	r26, 0x03	; 3
     b68:	9c 93       	st	X, r25
     b6a:	8e 93       	st	-X, r24
     b6c:	12 97       	sbiw	r26, 0x02	; 2
     b6e:	20 30       	cpi	r18, 0x00	; 0
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	38 07       	cpc	r19, r24
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	48 07       	cpc	r20, r24
     b78:	80 e4       	ldi	r24, 0x40	; 64
     b7a:	58 07       	cpc	r21, r24
     b7c:	58 f3       	brcs	.-42     	; 0xb54 <__unpack_f+0x66>
     b7e:	14 96       	adiw	r26, 0x04	; 4
     b80:	2d 93       	st	X+, r18
     b82:	3d 93       	st	X+, r19
     b84:	4d 93       	st	X+, r20
     b86:	5c 93       	st	X, r21
     b88:	17 97       	sbiw	r26, 0x07	; 7
     b8a:	08 95       	ret
     b8c:	2f 3f       	cpi	r18, 0xFF	; 255
     b8e:	31 05       	cpc	r19, r1
     b90:	79 f4       	brne	.+30     	; 0xbb0 <__unpack_f+0xc2>
     b92:	41 15       	cp	r20, r1
     b94:	51 05       	cpc	r21, r1
     b96:	61 05       	cpc	r22, r1
     b98:	71 05       	cpc	r23, r1
     b9a:	19 f4       	brne	.+6      	; 0xba2 <__unpack_f+0xb4>
     b9c:	84 e0       	ldi	r24, 0x04	; 4
     b9e:	8c 93       	st	X, r24
     ba0:	08 95       	ret
     ba2:	64 ff       	sbrs	r22, 4
     ba4:	03 c0       	rjmp	.+6      	; 0xbac <__unpack_f+0xbe>
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	8c 93       	st	X, r24
     baa:	12 c0       	rjmp	.+36     	; 0xbd0 <__unpack_f+0xe2>
     bac:	1c 92       	st	X, r1
     bae:	10 c0       	rjmp	.+32     	; 0xbd0 <__unpack_f+0xe2>
     bb0:	2f 57       	subi	r18, 0x7F	; 127
     bb2:	30 40       	sbci	r19, 0x00	; 0
     bb4:	13 96       	adiw	r26, 0x03	; 3
     bb6:	3c 93       	st	X, r19
     bb8:	2e 93       	st	-X, r18
     bba:	12 97       	sbiw	r26, 0x02	; 2
     bbc:	83 e0       	ldi	r24, 0x03	; 3
     bbe:	8c 93       	st	X, r24
     bc0:	87 e0       	ldi	r24, 0x07	; 7
     bc2:	44 0f       	add	r20, r20
     bc4:	55 1f       	adc	r21, r21
     bc6:	66 1f       	adc	r22, r22
     bc8:	77 1f       	adc	r23, r23
     bca:	8a 95       	dec	r24
     bcc:	d1 f7       	brne	.-12     	; 0xbc2 <__unpack_f+0xd4>
     bce:	70 64       	ori	r23, 0x40	; 64
     bd0:	14 96       	adiw	r26, 0x04	; 4
     bd2:	4d 93       	st	X+, r20
     bd4:	5d 93       	st	X+, r21
     bd6:	6d 93       	st	X+, r22
     bd8:	7c 93       	st	X, r23
     bda:	17 97       	sbiw	r26, 0x07	; 7
     bdc:	08 95       	ret

00000bde <__fpcmp_parts_f>:
     bde:	1f 93       	push	r17
     be0:	dc 01       	movw	r26, r24
     be2:	fb 01       	movw	r30, r22
     be4:	9c 91       	ld	r25, X
     be6:	92 30       	cpi	r25, 0x02	; 2
     be8:	08 f4       	brcc	.+2      	; 0xbec <__fpcmp_parts_f+0xe>
     bea:	47 c0       	rjmp	.+142    	; 0xc7a <__fpcmp_parts_f+0x9c>
     bec:	80 81       	ld	r24, Z
     bee:	82 30       	cpi	r24, 0x02	; 2
     bf0:	08 f4       	brcc	.+2      	; 0xbf4 <__fpcmp_parts_f+0x16>
     bf2:	43 c0       	rjmp	.+134    	; 0xc7a <__fpcmp_parts_f+0x9c>
     bf4:	94 30       	cpi	r25, 0x04	; 4
     bf6:	51 f4       	brne	.+20     	; 0xc0c <__fpcmp_parts_f+0x2e>
     bf8:	11 96       	adiw	r26, 0x01	; 1
     bfa:	1c 91       	ld	r17, X
     bfc:	84 30       	cpi	r24, 0x04	; 4
     bfe:	99 f5       	brne	.+102    	; 0xc66 <__fpcmp_parts_f+0x88>
     c00:	81 81       	ldd	r24, Z+1	; 0x01
     c02:	68 2f       	mov	r22, r24
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	61 1b       	sub	r22, r17
     c08:	71 09       	sbc	r23, r1
     c0a:	3f c0       	rjmp	.+126    	; 0xc8a <__fpcmp_parts_f+0xac>
     c0c:	84 30       	cpi	r24, 0x04	; 4
     c0e:	21 f0       	breq	.+8      	; 0xc18 <__fpcmp_parts_f+0x3a>
     c10:	92 30       	cpi	r25, 0x02	; 2
     c12:	31 f4       	brne	.+12     	; 0xc20 <__fpcmp_parts_f+0x42>
     c14:	82 30       	cpi	r24, 0x02	; 2
     c16:	b9 f1       	breq	.+110    	; 0xc86 <__fpcmp_parts_f+0xa8>
     c18:	81 81       	ldd	r24, Z+1	; 0x01
     c1a:	88 23       	and	r24, r24
     c1c:	89 f1       	breq	.+98     	; 0xc80 <__fpcmp_parts_f+0xa2>
     c1e:	2d c0       	rjmp	.+90     	; 0xc7a <__fpcmp_parts_f+0x9c>
     c20:	11 96       	adiw	r26, 0x01	; 1
     c22:	1c 91       	ld	r17, X
     c24:	11 97       	sbiw	r26, 0x01	; 1
     c26:	82 30       	cpi	r24, 0x02	; 2
     c28:	f1 f0       	breq	.+60     	; 0xc66 <__fpcmp_parts_f+0x88>
     c2a:	81 81       	ldd	r24, Z+1	; 0x01
     c2c:	18 17       	cp	r17, r24
     c2e:	d9 f4       	brne	.+54     	; 0xc66 <__fpcmp_parts_f+0x88>
     c30:	12 96       	adiw	r26, 0x02	; 2
     c32:	2d 91       	ld	r18, X+
     c34:	3c 91       	ld	r19, X
     c36:	13 97       	sbiw	r26, 0x03	; 3
     c38:	82 81       	ldd	r24, Z+2	; 0x02
     c3a:	93 81       	ldd	r25, Z+3	; 0x03
     c3c:	82 17       	cp	r24, r18
     c3e:	93 07       	cpc	r25, r19
     c40:	94 f0       	brlt	.+36     	; 0xc66 <__fpcmp_parts_f+0x88>
     c42:	28 17       	cp	r18, r24
     c44:	39 07       	cpc	r19, r25
     c46:	bc f0       	brlt	.+46     	; 0xc76 <__fpcmp_parts_f+0x98>
     c48:	14 96       	adiw	r26, 0x04	; 4
     c4a:	8d 91       	ld	r24, X+
     c4c:	9d 91       	ld	r25, X+
     c4e:	0d 90       	ld	r0, X+
     c50:	bc 91       	ld	r27, X
     c52:	a0 2d       	mov	r26, r0
     c54:	24 81       	ldd	r18, Z+4	; 0x04
     c56:	35 81       	ldd	r19, Z+5	; 0x05
     c58:	46 81       	ldd	r20, Z+6	; 0x06
     c5a:	57 81       	ldd	r21, Z+7	; 0x07
     c5c:	28 17       	cp	r18, r24
     c5e:	39 07       	cpc	r19, r25
     c60:	4a 07       	cpc	r20, r26
     c62:	5b 07       	cpc	r21, r27
     c64:	18 f4       	brcc	.+6      	; 0xc6c <__fpcmp_parts_f+0x8e>
     c66:	11 23       	and	r17, r17
     c68:	41 f0       	breq	.+16     	; 0xc7a <__fpcmp_parts_f+0x9c>
     c6a:	0a c0       	rjmp	.+20     	; 0xc80 <__fpcmp_parts_f+0xa2>
     c6c:	82 17       	cp	r24, r18
     c6e:	93 07       	cpc	r25, r19
     c70:	a4 07       	cpc	r26, r20
     c72:	b5 07       	cpc	r27, r21
     c74:	40 f4       	brcc	.+16     	; 0xc86 <__fpcmp_parts_f+0xa8>
     c76:	11 23       	and	r17, r17
     c78:	19 f0       	breq	.+6      	; 0xc80 <__fpcmp_parts_f+0xa2>
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	05 c0       	rjmp	.+10     	; 0xc8a <__fpcmp_parts_f+0xac>
     c80:	6f ef       	ldi	r22, 0xFF	; 255
     c82:	7f ef       	ldi	r23, 0xFF	; 255
     c84:	02 c0       	rjmp	.+4      	; 0xc8a <__fpcmp_parts_f+0xac>
     c86:	60 e0       	ldi	r22, 0x00	; 0
     c88:	70 e0       	ldi	r23, 0x00	; 0
     c8a:	cb 01       	movw	r24, r22
     c8c:	1f 91       	pop	r17
     c8e:	08 95       	ret

00000c90 <CLCD_voidSendCommand>:
#include "CLCD_interface.h"
#include "CLCD_config.h"
#include "CLCD_private.h"


void CLCD_voidSendCommand(u8 Copy_u8Command){
     c90:	df 93       	push	r29
     c92:	cf 93       	push	r28
     c94:	cd b7       	in	r28, 0x3d	; 61
     c96:	de b7       	in	r29, 0x3e	; 62
     c98:	2f 97       	sbiw	r28, 0x0f	; 15
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	f8 94       	cli
     c9e:	de bf       	out	0x3e, r29	; 62
     ca0:	0f be       	out	0x3f, r0	; 63
     ca2:	cd bf       	out	0x3d, r28	; 61
     ca4:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_LOW);
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	60 e0       	ldi	r22, 0x00	; 0
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>

	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	61 e0       	ldi	r22, 0x01	; 1
     cb4:	40 e0       	ldi	r20, 0x00	; 0
     cb6:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>

	DIO_u8SetPortValue(CLCD_DATA_PORT,Copy_u8Command);
     cba:	83 e0       	ldi	r24, 0x03	; 3
     cbc:	6f 85       	ldd	r22, Y+15	; 0x0f
     cbe:	0e 94 ad 0a 	call	0x155a	; 0x155a <DIO_u8SetPortValue>

	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     cc2:	81 e0       	ldi	r24, 0x01	; 1
     cc4:	62 e0       	ldi	r22, 0x02	; 2
     cc6:	41 e0       	ldi	r20, 0x01	; 1
     cc8:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
     ccc:	80 e0       	ldi	r24, 0x00	; 0
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	a0 e0       	ldi	r26, 0x00	; 0
     cd2:	b0 e4       	ldi	r27, 0x40	; 64
     cd4:	8b 87       	std	Y+11, r24	; 0x0b
     cd6:	9c 87       	std	Y+12, r25	; 0x0c
     cd8:	ad 87       	std	Y+13, r26	; 0x0d
     cda:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cdc:	6b 85       	ldd	r22, Y+11	; 0x0b
     cde:	7c 85       	ldd	r23, Y+12	; 0x0c
     ce0:	8d 85       	ldd	r24, Y+13	; 0x0d
     ce2:	9e 85       	ldd	r25, Y+14	; 0x0e
     ce4:	20 e0       	ldi	r18, 0x00	; 0
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	4a ef       	ldi	r20, 0xFA	; 250
     cea:	54 e4       	ldi	r21, 0x44	; 68
     cec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cf0:	dc 01       	movw	r26, r24
     cf2:	cb 01       	movw	r24, r22
     cf4:	8f 83       	std	Y+7, r24	; 0x07
     cf6:	98 87       	std	Y+8, r25	; 0x08
     cf8:	a9 87       	std	Y+9, r26	; 0x09
     cfa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     cfc:	6f 81       	ldd	r22, Y+7	; 0x07
     cfe:	78 85       	ldd	r23, Y+8	; 0x08
     d00:	89 85       	ldd	r24, Y+9	; 0x09
     d02:	9a 85       	ldd	r25, Y+10	; 0x0a
     d04:	20 e0       	ldi	r18, 0x00	; 0
     d06:	30 e0       	ldi	r19, 0x00	; 0
     d08:	40 e8       	ldi	r20, 0x80	; 128
     d0a:	5f e3       	ldi	r21, 0x3F	; 63
     d0c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d10:	88 23       	and	r24, r24
     d12:	2c f4       	brge	.+10     	; 0xd1e <CLCD_voidSendCommand+0x8e>
		__ticks = 1;
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	9e 83       	std	Y+6, r25	; 0x06
     d1a:	8d 83       	std	Y+5, r24	; 0x05
     d1c:	3f c0       	rjmp	.+126    	; 0xd9c <CLCD_voidSendCommand+0x10c>
	else if (__tmp > 65535)
     d1e:	6f 81       	ldd	r22, Y+7	; 0x07
     d20:	78 85       	ldd	r23, Y+8	; 0x08
     d22:	89 85       	ldd	r24, Y+9	; 0x09
     d24:	9a 85       	ldd	r25, Y+10	; 0x0a
     d26:	20 e0       	ldi	r18, 0x00	; 0
     d28:	3f ef       	ldi	r19, 0xFF	; 255
     d2a:	4f e7       	ldi	r20, 0x7F	; 127
     d2c:	57 e4       	ldi	r21, 0x47	; 71
     d2e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d32:	18 16       	cp	r1, r24
     d34:	4c f5       	brge	.+82     	; 0xd88 <CLCD_voidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d36:	6b 85       	ldd	r22, Y+11	; 0x0b
     d38:	7c 85       	ldd	r23, Y+12	; 0x0c
     d3a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d3c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	40 e2       	ldi	r20, 0x20	; 32
     d44:	51 e4       	ldi	r21, 0x41	; 65
     d46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d4a:	dc 01       	movw	r26, r24
     d4c:	cb 01       	movw	r24, r22
     d4e:	bc 01       	movw	r22, r24
     d50:	cd 01       	movw	r24, r26
     d52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d56:	dc 01       	movw	r26, r24
     d58:	cb 01       	movw	r24, r22
     d5a:	9e 83       	std	Y+6, r25	; 0x06
     d5c:	8d 83       	std	Y+5, r24	; 0x05
     d5e:	0f c0       	rjmp	.+30     	; 0xd7e <CLCD_voidSendCommand+0xee>
     d60:	88 ec       	ldi	r24, 0xC8	; 200
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	9c 83       	std	Y+4, r25	; 0x04
     d66:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d68:	8b 81       	ldd	r24, Y+3	; 0x03
     d6a:	9c 81       	ldd	r25, Y+4	; 0x04
     d6c:	01 97       	sbiw	r24, 0x01	; 1
     d6e:	f1 f7       	brne	.-4      	; 0xd6c <CLCD_voidSendCommand+0xdc>
     d70:	9c 83       	std	Y+4, r25	; 0x04
     d72:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d74:	8d 81       	ldd	r24, Y+5	; 0x05
     d76:	9e 81       	ldd	r25, Y+6	; 0x06
     d78:	01 97       	sbiw	r24, 0x01	; 1
     d7a:	9e 83       	std	Y+6, r25	; 0x06
     d7c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d7e:	8d 81       	ldd	r24, Y+5	; 0x05
     d80:	9e 81       	ldd	r25, Y+6	; 0x06
     d82:	00 97       	sbiw	r24, 0x00	; 0
     d84:	69 f7       	brne	.-38     	; 0xd60 <CLCD_voidSendCommand+0xd0>
     d86:	14 c0       	rjmp	.+40     	; 0xdb0 <CLCD_voidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d88:	6f 81       	ldd	r22, Y+7	; 0x07
     d8a:	78 85       	ldd	r23, Y+8	; 0x08
     d8c:	89 85       	ldd	r24, Y+9	; 0x09
     d8e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d94:	dc 01       	movw	r26, r24
     d96:	cb 01       	movw	r24, r22
     d98:	9e 83       	std	Y+6, r25	; 0x06
     d9a:	8d 83       	std	Y+5, r24	; 0x05
     d9c:	8d 81       	ldd	r24, Y+5	; 0x05
     d9e:	9e 81       	ldd	r25, Y+6	; 0x06
     da0:	9a 83       	std	Y+2, r25	; 0x02
     da2:	89 83       	std	Y+1, r24	; 0x01
     da4:	89 81       	ldd	r24, Y+1	; 0x01
     da6:	9a 81       	ldd	r25, Y+2	; 0x02
     da8:	01 97       	sbiw	r24, 0x01	; 1
     daa:	f1 f7       	brne	.-4      	; 0xda8 <CLCD_voidSendCommand+0x118>
     dac:	9a 83       	std	Y+2, r25	; 0x02
     dae:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	62 e0       	ldi	r22, 0x02	; 2
     db4:	40 e0       	ldi	r20, 0x00	; 0
     db6:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
}
     dba:	2f 96       	adiw	r28, 0x0f	; 15
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	f8 94       	cli
     dc0:	de bf       	out	0x3e, r29	; 62
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	cd bf       	out	0x3d, r28	; 61
     dc6:	cf 91       	pop	r28
     dc8:	df 91       	pop	r29
     dca:	08 95       	ret

00000dcc <CLCD_voidSendData>:

void CLCD_voidSendData(u8 Copy_u8Data){
     dcc:	df 93       	push	r29
     dce:	cf 93       	push	r28
     dd0:	cd b7       	in	r28, 0x3d	; 61
     dd2:	de b7       	in	r29, 0x3e	; 62
     dd4:	2f 97       	sbiw	r28, 0x0f	; 15
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	de bf       	out	0x3e, r29	; 62
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	cd bf       	out	0x3d, r28	; 61
     de0:	8f 87       	std	Y+15, r24	; 0x0f
//	static u8 Local_u8ColCounter=0;
//	if(Local_u8ColCounter>=16){
//		Local_u8ColCounter=0;
//		CLCD_voidGoToXY(1,0);
//	}
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_HIGH);
     de2:	81 e0       	ldi	r24, 0x01	; 1
     de4:	60 e0       	ldi	r22, 0x00	; 0
     de6:	41 e0       	ldi	r20, 0x01	; 1
     de8:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>

	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	61 e0       	ldi	r22, 0x01	; 1
     df0:	40 e0       	ldi	r20, 0x00	; 0
     df2:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
	DIO_u8SetPortValue(CLCD_DATA_PORT,Copy_u8Data);
     df6:	83 e0       	ldi	r24, 0x03	; 3
     df8:	6f 85       	ldd	r22, Y+15	; 0x0f
     dfa:	0e 94 ad 0a 	call	0x155a	; 0x155a <DIO_u8SetPortValue>

	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	62 e0       	ldi	r22, 0x02	; 2
     e02:	41 e0       	ldi	r20, 0x01	; 1
     e04:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
     e08:	80 e0       	ldi	r24, 0x00	; 0
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	a0 e0       	ldi	r26, 0x00	; 0
     e0e:	b0 e4       	ldi	r27, 0x40	; 64
     e10:	8b 87       	std	Y+11, r24	; 0x0b
     e12:	9c 87       	std	Y+12, r25	; 0x0c
     e14:	ad 87       	std	Y+13, r26	; 0x0d
     e16:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e18:	6b 85       	ldd	r22, Y+11	; 0x0b
     e1a:	7c 85       	ldd	r23, Y+12	; 0x0c
     e1c:	8d 85       	ldd	r24, Y+13	; 0x0d
     e1e:	9e 85       	ldd	r25, Y+14	; 0x0e
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	4a ef       	ldi	r20, 0xFA	; 250
     e26:	54 e4       	ldi	r21, 0x44	; 68
     e28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	8f 83       	std	Y+7, r24	; 0x07
     e32:	98 87       	std	Y+8, r25	; 0x08
     e34:	a9 87       	std	Y+9, r26	; 0x09
     e36:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e38:	6f 81       	ldd	r22, Y+7	; 0x07
     e3a:	78 85       	ldd	r23, Y+8	; 0x08
     e3c:	89 85       	ldd	r24, Y+9	; 0x09
     e3e:	9a 85       	ldd	r25, Y+10	; 0x0a
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	40 e8       	ldi	r20, 0x80	; 128
     e46:	5f e3       	ldi	r21, 0x3F	; 63
     e48:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e4c:	88 23       	and	r24, r24
     e4e:	2c f4       	brge	.+10     	; 0xe5a <CLCD_voidSendData+0x8e>
		__ticks = 1;
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	9e 83       	std	Y+6, r25	; 0x06
     e56:	8d 83       	std	Y+5, r24	; 0x05
     e58:	3f c0       	rjmp	.+126    	; 0xed8 <CLCD_voidSendData+0x10c>
	else if (__tmp > 65535)
     e5a:	6f 81       	ldd	r22, Y+7	; 0x07
     e5c:	78 85       	ldd	r23, Y+8	; 0x08
     e5e:	89 85       	ldd	r24, Y+9	; 0x09
     e60:	9a 85       	ldd	r25, Y+10	; 0x0a
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	3f ef       	ldi	r19, 0xFF	; 255
     e66:	4f e7       	ldi	r20, 0x7F	; 127
     e68:	57 e4       	ldi	r21, 0x47	; 71
     e6a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e6e:	18 16       	cp	r1, r24
     e70:	4c f5       	brge	.+82     	; 0xec4 <CLCD_voidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e72:	6b 85       	ldd	r22, Y+11	; 0x0b
     e74:	7c 85       	ldd	r23, Y+12	; 0x0c
     e76:	8d 85       	ldd	r24, Y+13	; 0x0d
     e78:	9e 85       	ldd	r25, Y+14	; 0x0e
     e7a:	20 e0       	ldi	r18, 0x00	; 0
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	40 e2       	ldi	r20, 0x20	; 32
     e80:	51 e4       	ldi	r21, 0x41	; 65
     e82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e86:	dc 01       	movw	r26, r24
     e88:	cb 01       	movw	r24, r22
     e8a:	bc 01       	movw	r22, r24
     e8c:	cd 01       	movw	r24, r26
     e8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e92:	dc 01       	movw	r26, r24
     e94:	cb 01       	movw	r24, r22
     e96:	9e 83       	std	Y+6, r25	; 0x06
     e98:	8d 83       	std	Y+5, r24	; 0x05
     e9a:	0f c0       	rjmp	.+30     	; 0xeba <CLCD_voidSendData+0xee>
     e9c:	88 ec       	ldi	r24, 0xC8	; 200
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	9c 83       	std	Y+4, r25	; 0x04
     ea2:	8b 83       	std	Y+3, r24	; 0x03
     ea4:	8b 81       	ldd	r24, Y+3	; 0x03
     ea6:	9c 81       	ldd	r25, Y+4	; 0x04
     ea8:	01 97       	sbiw	r24, 0x01	; 1
     eaa:	f1 f7       	brne	.-4      	; 0xea8 <CLCD_voidSendData+0xdc>
     eac:	9c 83       	std	Y+4, r25	; 0x04
     eae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     eb0:	8d 81       	ldd	r24, Y+5	; 0x05
     eb2:	9e 81       	ldd	r25, Y+6	; 0x06
     eb4:	01 97       	sbiw	r24, 0x01	; 1
     eb6:	9e 83       	std	Y+6, r25	; 0x06
     eb8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eba:	8d 81       	ldd	r24, Y+5	; 0x05
     ebc:	9e 81       	ldd	r25, Y+6	; 0x06
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	69 f7       	brne	.-38     	; 0xe9c <CLCD_voidSendData+0xd0>
     ec2:	14 c0       	rjmp	.+40     	; 0xeec <CLCD_voidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ec4:	6f 81       	ldd	r22, Y+7	; 0x07
     ec6:	78 85       	ldd	r23, Y+8	; 0x08
     ec8:	89 85       	ldd	r24, Y+9	; 0x09
     eca:	9a 85       	ldd	r25, Y+10	; 0x0a
     ecc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ed0:	dc 01       	movw	r26, r24
     ed2:	cb 01       	movw	r24, r22
     ed4:	9e 83       	std	Y+6, r25	; 0x06
     ed6:	8d 83       	std	Y+5, r24	; 0x05
     ed8:	8d 81       	ldd	r24, Y+5	; 0x05
     eda:	9e 81       	ldd	r25, Y+6	; 0x06
     edc:	9a 83       	std	Y+2, r25	; 0x02
     ede:	89 83       	std	Y+1, r24	; 0x01
     ee0:	89 81       	ldd	r24, Y+1	; 0x01
     ee2:	9a 81       	ldd	r25, Y+2	; 0x02
     ee4:	01 97       	sbiw	r24, 0x01	; 1
     ee6:	f1 f7       	brne	.-4      	; 0xee4 <CLCD_voidSendData+0x118>
     ee8:	9a 83       	std	Y+2, r25	; 0x02
     eea:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	62 e0       	ldi	r22, 0x02	; 2
     ef0:	40 e0       	ldi	r20, 0x00	; 0
     ef2:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
	//Local_u8ColCounter++;
}
     ef6:	2f 96       	adiw	r28, 0x0f	; 15
     ef8:	0f b6       	in	r0, 0x3f	; 63
     efa:	f8 94       	cli
     efc:	de bf       	out	0x3e, r29	; 62
     efe:	0f be       	out	0x3f, r0	; 63
     f00:	cd bf       	out	0x3d, r28	; 61
     f02:	cf 91       	pop	r28
     f04:	df 91       	pop	r29
     f06:	08 95       	ret

00000f08 <CLCD_voidInit>:

void CLCD_voidInit(void){
     f08:	df 93       	push	r29
     f0a:	cf 93       	push	r28
     f0c:	cd b7       	in	r28, 0x3d	; 61
     f0e:	de b7       	in	r29, 0x3e	; 62
     f10:	2e 97       	sbiw	r28, 0x0e	; 14
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	de bf       	out	0x3e, r29	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	cd bf       	out	0x3d, r28	; 61
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	a0 e2       	ldi	r26, 0x20	; 32
     f22:	b2 e4       	ldi	r27, 0x42	; 66
     f24:	8b 87       	std	Y+11, r24	; 0x0b
     f26:	9c 87       	std	Y+12, r25	; 0x0c
     f28:	ad 87       	std	Y+13, r26	; 0x0d
     f2a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f2c:	6b 85       	ldd	r22, Y+11	; 0x0b
     f2e:	7c 85       	ldd	r23, Y+12	; 0x0c
     f30:	8d 85       	ldd	r24, Y+13	; 0x0d
     f32:	9e 85       	ldd	r25, Y+14	; 0x0e
     f34:	20 e0       	ldi	r18, 0x00	; 0
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	4a ef       	ldi	r20, 0xFA	; 250
     f3a:	54 e4       	ldi	r21, 0x44	; 68
     f3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f40:	dc 01       	movw	r26, r24
     f42:	cb 01       	movw	r24, r22
     f44:	8f 83       	std	Y+7, r24	; 0x07
     f46:	98 87       	std	Y+8, r25	; 0x08
     f48:	a9 87       	std	Y+9, r26	; 0x09
     f4a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     f4c:	6f 81       	ldd	r22, Y+7	; 0x07
     f4e:	78 85       	ldd	r23, Y+8	; 0x08
     f50:	89 85       	ldd	r24, Y+9	; 0x09
     f52:	9a 85       	ldd	r25, Y+10	; 0x0a
     f54:	20 e0       	ldi	r18, 0x00	; 0
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	40 e8       	ldi	r20, 0x80	; 128
     f5a:	5f e3       	ldi	r21, 0x3F	; 63
     f5c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f60:	88 23       	and	r24, r24
     f62:	2c f4       	brge	.+10     	; 0xf6e <CLCD_voidInit+0x66>
		__ticks = 1;
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	9e 83       	std	Y+6, r25	; 0x06
     f6a:	8d 83       	std	Y+5, r24	; 0x05
     f6c:	3f c0       	rjmp	.+126    	; 0xfec <CLCD_voidInit+0xe4>
	else if (__tmp > 65535)
     f6e:	6f 81       	ldd	r22, Y+7	; 0x07
     f70:	78 85       	ldd	r23, Y+8	; 0x08
     f72:	89 85       	ldd	r24, Y+9	; 0x09
     f74:	9a 85       	ldd	r25, Y+10	; 0x0a
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	3f ef       	ldi	r19, 0xFF	; 255
     f7a:	4f e7       	ldi	r20, 0x7F	; 127
     f7c:	57 e4       	ldi	r21, 0x47	; 71
     f7e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f82:	18 16       	cp	r1, r24
     f84:	4c f5       	brge	.+82     	; 0xfd8 <CLCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f86:	6b 85       	ldd	r22, Y+11	; 0x0b
     f88:	7c 85       	ldd	r23, Y+12	; 0x0c
     f8a:	8d 85       	ldd	r24, Y+13	; 0x0d
     f8c:	9e 85       	ldd	r25, Y+14	; 0x0e
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	40 e2       	ldi	r20, 0x20	; 32
     f94:	51 e4       	ldi	r21, 0x41	; 65
     f96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f9a:	dc 01       	movw	r26, r24
     f9c:	cb 01       	movw	r24, r22
     f9e:	bc 01       	movw	r22, r24
     fa0:	cd 01       	movw	r24, r26
     fa2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fa6:	dc 01       	movw	r26, r24
     fa8:	cb 01       	movw	r24, r22
     faa:	9e 83       	std	Y+6, r25	; 0x06
     fac:	8d 83       	std	Y+5, r24	; 0x05
     fae:	0f c0       	rjmp	.+30     	; 0xfce <CLCD_voidInit+0xc6>
     fb0:	88 ec       	ldi	r24, 0xC8	; 200
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	9c 83       	std	Y+4, r25	; 0x04
     fb6:	8b 83       	std	Y+3, r24	; 0x03
     fb8:	8b 81       	ldd	r24, Y+3	; 0x03
     fba:	9c 81       	ldd	r25, Y+4	; 0x04
     fbc:	01 97       	sbiw	r24, 0x01	; 1
     fbe:	f1 f7       	brne	.-4      	; 0xfbc <CLCD_voidInit+0xb4>
     fc0:	9c 83       	std	Y+4, r25	; 0x04
     fc2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fc4:	8d 81       	ldd	r24, Y+5	; 0x05
     fc6:	9e 81       	ldd	r25, Y+6	; 0x06
     fc8:	01 97       	sbiw	r24, 0x01	; 1
     fca:	9e 83       	std	Y+6, r25	; 0x06
     fcc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fce:	8d 81       	ldd	r24, Y+5	; 0x05
     fd0:	9e 81       	ldd	r25, Y+6	; 0x06
     fd2:	00 97       	sbiw	r24, 0x00	; 0
     fd4:	69 f7       	brne	.-38     	; 0xfb0 <CLCD_voidInit+0xa8>
     fd6:	14 c0       	rjmp	.+40     	; 0x1000 <CLCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fd8:	6f 81       	ldd	r22, Y+7	; 0x07
     fda:	78 85       	ldd	r23, Y+8	; 0x08
     fdc:	89 85       	ldd	r24, Y+9	; 0x09
     fde:	9a 85       	ldd	r25, Y+10	; 0x0a
     fe0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fe4:	dc 01       	movw	r26, r24
     fe6:	cb 01       	movw	r24, r22
     fe8:	9e 83       	std	Y+6, r25	; 0x06
     fea:	8d 83       	std	Y+5, r24	; 0x05
     fec:	8d 81       	ldd	r24, Y+5	; 0x05
     fee:	9e 81       	ldd	r25, Y+6	; 0x06
     ff0:	9a 83       	std	Y+2, r25	; 0x02
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	89 81       	ldd	r24, Y+1	; 0x01
     ff6:	9a 81       	ldd	r25, Y+2	; 0x02
     ff8:	01 97       	sbiw	r24, 0x01	; 1
     ffa:	f1 f7       	brne	.-4      	; 0xff8 <CLCD_voidInit+0xf0>
     ffc:	9a 83       	std	Y+2, r25	; 0x02
     ffe:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
	CLCD_voidSendCommand(0b00111000);
    1000:	88 e3       	ldi	r24, 0x38	; 56
    1002:	0e 94 48 06 	call	0xc90	; 0xc90 <CLCD_voidSendCommand>
	CLCD_voidSendCommand(0b00001100);
    1006:	8c e0       	ldi	r24, 0x0C	; 12
    1008:	0e 94 48 06 	call	0xc90	; 0xc90 <CLCD_voidSendCommand>
	CLCD_voidSendCommand(1);
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	0e 94 48 06 	call	0xc90	; 0xc90 <CLCD_voidSendCommand>
}
    1012:	2e 96       	adiw	r28, 0x0e	; 14
    1014:	0f b6       	in	r0, 0x3f	; 63
    1016:	f8 94       	cli
    1018:	de bf       	out	0x3e, r29	; 62
    101a:	0f be       	out	0x3f, r0	; 63
    101c:	cd bf       	out	0x3d, r28	; 61
    101e:	cf 91       	pop	r28
    1020:	df 91       	pop	r29
    1022:	08 95       	ret

00001024 <CLCD_voidSendString>:

void CLCD_voidSendString(const char *Copy_pcString){
    1024:	df 93       	push	r29
    1026:	cf 93       	push	r28
    1028:	00 d0       	rcall	.+0      	; 0x102a <CLCD_voidSendString+0x6>
    102a:	0f 92       	push	r0
    102c:	cd b7       	in	r28, 0x3d	; 61
    102e:	de b7       	in	r29, 0x3e	; 62
    1030:	9b 83       	std	Y+3, r25	; 0x03
    1032:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Counter=0;
    1034:	19 82       	std	Y+1, r1	; 0x01
    1036:	0e c0       	rjmp	.+28     	; 0x1054 <CLCD_voidSendString+0x30>
	while (Copy_pcString[Local_u8Counter]!='\0'){
		CLCD_voidSendData(Copy_pcString[Local_u8Counter]);
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	28 2f       	mov	r18, r24
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	8a 81       	ldd	r24, Y+2	; 0x02
    1040:	9b 81       	ldd	r25, Y+3	; 0x03
    1042:	fc 01       	movw	r30, r24
    1044:	e2 0f       	add	r30, r18
    1046:	f3 1f       	adc	r31, r19
    1048:	80 81       	ld	r24, Z
    104a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <CLCD_voidSendData>
		Local_u8Counter++;
    104e:	89 81       	ldd	r24, Y+1	; 0x01
    1050:	8f 5f       	subi	r24, 0xFF	; 255
    1052:	89 83       	std	Y+1, r24	; 0x01
	CLCD_voidSendCommand(1);
}

void CLCD_voidSendString(const char *Copy_pcString){
	u8 Local_u8Counter=0;
	while (Copy_pcString[Local_u8Counter]!='\0'){
    1054:	89 81       	ldd	r24, Y+1	; 0x01
    1056:	28 2f       	mov	r18, r24
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	8a 81       	ldd	r24, Y+2	; 0x02
    105c:	9b 81       	ldd	r25, Y+3	; 0x03
    105e:	fc 01       	movw	r30, r24
    1060:	e2 0f       	add	r30, r18
    1062:	f3 1f       	adc	r31, r19
    1064:	80 81       	ld	r24, Z
    1066:	88 23       	and	r24, r24
    1068:	39 f7       	brne	.-50     	; 0x1038 <CLCD_voidSendString+0x14>
//	u8 *ptr=Copy_pcString;
//	while(*ptr!='\0'){
//		CLCD_voidSendData(*ptr);
//		ptr++;
//	}
}
    106a:	0f 90       	pop	r0
    106c:	0f 90       	pop	r0
    106e:	0f 90       	pop	r0
    1070:	cf 91       	pop	r28
    1072:	df 91       	pop	r29
    1074:	08 95       	ret

00001076 <CLCD_voidGoToXY>:

void CLCD_voidGoToXY(u8 Copy_u8XPos,u8 Copy_u8YPos){
    1076:	df 93       	push	r29
    1078:	cf 93       	push	r28
    107a:	00 d0       	rcall	.+0      	; 0x107c <CLCD_voidGoToXY+0x6>
    107c:	0f 92       	push	r0
    107e:	cd b7       	in	r28, 0x3d	; 61
    1080:	de b7       	in	r29, 0x3e	; 62
    1082:	8a 83       	std	Y+2, r24	; 0x02
    1084:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Address=0;
    1086:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8XPos==0){
    1088:	8a 81       	ldd	r24, Y+2	; 0x02
    108a:	88 23       	and	r24, r24
    108c:	19 f4       	brne	.+6      	; 0x1094 <CLCD_voidGoToXY+0x1e>
		Local_u8Address=Copy_u8YPos;
    108e:	8b 81       	ldd	r24, Y+3	; 0x03
    1090:	89 83       	std	Y+1, r24	; 0x01
    1092:	06 c0       	rjmp	.+12     	; 0x10a0 <CLCD_voidGoToXY+0x2a>
	}
	else if(Copy_u8XPos==1){
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	81 30       	cpi	r24, 0x01	; 1
    1098:	19 f4       	brne	.+6      	; 0x10a0 <CLCD_voidGoToXY+0x2a>
		Local_u8Address=Copy_u8YPos+0x40;
    109a:	8b 81       	ldd	r24, Y+3	; 0x03
    109c:	80 5c       	subi	r24, 0xC0	; 192
    109e:	89 83       	std	Y+1, r24	; 0x01
	}
	CLCD_voidSendCommand(Local_u8Address+128);
    10a0:	89 81       	ldd	r24, Y+1	; 0x01
    10a2:	80 58       	subi	r24, 0x80	; 128
    10a4:	0e 94 48 06 	call	0xc90	; 0xc90 <CLCD_voidSendCommand>
}
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	cf 91       	pop	r28
    10b0:	df 91       	pop	r29
    10b2:	08 95       	ret

000010b4 <CLCD_voidWriteSpecialCharacter>:

void CLCD_voidWriteSpecialCharacter(u8 * Copy_pu8Pattern, u8 Copy_u8PatternNum,u8 Copy_u8XPos,u8 Copy_u8YPos){
    10b4:	df 93       	push	r29
    10b6:	cf 93       	push	r28
    10b8:	cd b7       	in	r28, 0x3d	; 61
    10ba:	de b7       	in	r29, 0x3e	; 62
    10bc:	27 97       	sbiw	r28, 0x07	; 7
    10be:	0f b6       	in	r0, 0x3f	; 63
    10c0:	f8 94       	cli
    10c2:	de bf       	out	0x3e, r29	; 62
    10c4:	0f be       	out	0x3f, r0	; 63
    10c6:	cd bf       	out	0x3d, r28	; 61
    10c8:	9c 83       	std	Y+4, r25	; 0x04
    10ca:	8b 83       	std	Y+3, r24	; 0x03
    10cc:	6d 83       	std	Y+5, r22	; 0x05
    10ce:	4e 83       	std	Y+6, r20	; 0x06
    10d0:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8CGRAMAddress=Copy_u8PatternNum*8;
    10d2:	8d 81       	ldd	r24, Y+5	; 0x05
    10d4:	88 2f       	mov	r24, r24
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	88 0f       	add	r24, r24
    10da:	99 1f       	adc	r25, r25
    10dc:	88 0f       	add	r24, r24
    10de:	99 1f       	adc	r25, r25
    10e0:	88 0f       	add	r24, r24
    10e2:	99 1f       	adc	r25, r25
    10e4:	8a 83       	std	Y+2, r24	; 0x02
	CLCD_voidSendCommand(Local_u8CGRAMAddress+64);
    10e6:	8a 81       	ldd	r24, Y+2	; 0x02
    10e8:	80 5c       	subi	r24, 0xC0	; 192
    10ea:	0e 94 48 06 	call	0xc90	; 0xc90 <CLCD_voidSendCommand>
	u8 Local_u8Iterator=0;
    10ee:	19 82       	std	Y+1, r1	; 0x01
	for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++){
    10f0:	19 82       	std	Y+1, r1	; 0x01
    10f2:	0e c0       	rjmp	.+28     	; 0x1110 <CLCD_voidWriteSpecialCharacter+0x5c>
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8Iterator]);
    10f4:	89 81       	ldd	r24, Y+1	; 0x01
    10f6:	28 2f       	mov	r18, r24
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	8b 81       	ldd	r24, Y+3	; 0x03
    10fc:	9c 81       	ldd	r25, Y+4	; 0x04
    10fe:	fc 01       	movw	r30, r24
    1100:	e2 0f       	add	r30, r18
    1102:	f3 1f       	adc	r31, r19
    1104:	80 81       	ld	r24, Z
    1106:	0e 94 e6 06 	call	0xdcc	; 0xdcc <CLCD_voidSendData>

void CLCD_voidWriteSpecialCharacter(u8 * Copy_pu8Pattern, u8 Copy_u8PatternNum,u8 Copy_u8XPos,u8 Copy_u8YPos){
	u8 Local_u8CGRAMAddress=Copy_u8PatternNum*8;
	CLCD_voidSendCommand(Local_u8CGRAMAddress+64);
	u8 Local_u8Iterator=0;
	for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++){
    110a:	89 81       	ldd	r24, Y+1	; 0x01
    110c:	8f 5f       	subi	r24, 0xFF	; 255
    110e:	89 83       	std	Y+1, r24	; 0x01
    1110:	89 81       	ldd	r24, Y+1	; 0x01
    1112:	88 30       	cpi	r24, 0x08	; 8
    1114:	78 f3       	brcs	.-34     	; 0x10f4 <CLCD_voidWriteSpecialCharacter+0x40>
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8Iterator]);
	}
	CLCD_voidGoToXY(Copy_u8XPos,Copy_u8YPos);
    1116:	8e 81       	ldd	r24, Y+6	; 0x06
    1118:	6f 81       	ldd	r22, Y+7	; 0x07
    111a:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
	CLCD_voidSendData(Copy_u8PatternNum);
    111e:	8d 81       	ldd	r24, Y+5	; 0x05
    1120:	0e 94 e6 06 	call	0xdcc	; 0xdcc <CLCD_voidSendData>
}
    1124:	27 96       	adiw	r28, 0x07	; 7
    1126:	0f b6       	in	r0, 0x3f	; 63
    1128:	f8 94       	cli
    112a:	de bf       	out	0x3e, r29	; 62
    112c:	0f be       	out	0x3f, r0	; 63
    112e:	cd bf       	out	0x3d, r28	; 61
    1130:	cf 91       	pop	r28
    1132:	df 91       	pop	r29
    1134:	08 95       	ret

00001136 <CLCD_voidWriteNumber>:

void CLCD_voidWriteNumber(u32 Copy_u32Number){
    1136:	df 93       	push	r29
    1138:	cf 93       	push	r28
    113a:	cd b7       	in	r28, 0x3d	; 61
    113c:	de b7       	in	r29, 0x3e	; 62
    113e:	2b 97       	sbiw	r28, 0x0b	; 11
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	de bf       	out	0x3e, r29	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	cd bf       	out	0x3d, r28	; 61
    114a:	68 87       	std	Y+8, r22	; 0x08
    114c:	79 87       	std	Y+9, r23	; 0x09
    114e:	8a 87       	std	Y+10, r24	; 0x0a
    1150:	9b 87       	std	Y+11, r25	; 0x0b
	if(Copy_u32Number==0){
    1152:	88 85       	ldd	r24, Y+8	; 0x08
    1154:	99 85       	ldd	r25, Y+9	; 0x09
    1156:	aa 85       	ldd	r26, Y+10	; 0x0a
    1158:	bb 85       	ldd	r27, Y+11	; 0x0b
    115a:	00 97       	sbiw	r24, 0x00	; 0
    115c:	a1 05       	cpc	r26, r1
    115e:	b1 05       	cpc	r27, r1
    1160:	21 f4       	brne	.+8      	; 0x116a <CLCD_voidWriteNumber+0x34>
		CLCD_voidSendData('0');
    1162:	80 e3       	ldi	r24, 0x30	; 48
    1164:	0e 94 e6 06 	call	0xdcc	; 0xdcc <CLCD_voidSendData>
    1168:	7c c0       	rjmp	.+248    	; 0x1262 <CLCD_voidWriteNumber+0x12c>
		return;
	}
	u32 Local_u8Reverse=0;
    116a:	1c 82       	std	Y+4, r1	; 0x04
    116c:	1d 82       	std	Y+5, r1	; 0x05
    116e:	1e 82       	std	Y+6, r1	; 0x06
    1170:	1f 82       	std	Y+7, r1	; 0x07
	u8 Local_u8NumOfDigits=0;
    1172:	1b 82       	std	Y+3, r1	; 0x03
	u8 Local_u8Remainder=0,Local_u8Send=0;
    1174:	1a 82       	std	Y+2, r1	; 0x02
    1176:	19 82       	std	Y+1, r1	; 0x01
    1178:	3f c0       	rjmp	.+126    	; 0x11f8 <CLCD_voidWriteNumber+0xc2>
	while (Copy_u32Number != 0) {
		Local_u8Remainder = Copy_u32Number % 10;
    117a:	88 85       	ldd	r24, Y+8	; 0x08
    117c:	99 85       	ldd	r25, Y+9	; 0x09
    117e:	aa 85       	ldd	r26, Y+10	; 0x0a
    1180:	bb 85       	ldd	r27, Y+11	; 0x0b
    1182:	2a e0       	ldi	r18, 0x0A	; 10
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	40 e0       	ldi	r20, 0x00	; 0
    1188:	50 e0       	ldi	r21, 0x00	; 0
    118a:	bc 01       	movw	r22, r24
    118c:	cd 01       	movw	r24, r26
    118e:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    1192:	dc 01       	movw	r26, r24
    1194:	cb 01       	movw	r24, r22
    1196:	8a 83       	std	Y+2, r24	; 0x02
		Local_u8Reverse = Local_u8Reverse * 10 + Local_u8Remainder;
    1198:	8c 81       	ldd	r24, Y+4	; 0x04
    119a:	9d 81       	ldd	r25, Y+5	; 0x05
    119c:	ae 81       	ldd	r26, Y+6	; 0x06
    119e:	bf 81       	ldd	r27, Y+7	; 0x07
    11a0:	2a e0       	ldi	r18, 0x0A	; 10
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	50 e0       	ldi	r21, 0x00	; 0
    11a8:	bc 01       	movw	r22, r24
    11aa:	cd 01       	movw	r24, r26
    11ac:	0e 94 76 11 	call	0x22ec	; 0x22ec <__mulsi3>
    11b0:	9b 01       	movw	r18, r22
    11b2:	ac 01       	movw	r20, r24
    11b4:	8a 81       	ldd	r24, Y+2	; 0x02
    11b6:	88 2f       	mov	r24, r24
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	a0 e0       	ldi	r26, 0x00	; 0
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	82 0f       	add	r24, r18
    11c0:	93 1f       	adc	r25, r19
    11c2:	a4 1f       	adc	r26, r20
    11c4:	b5 1f       	adc	r27, r21
    11c6:	8c 83       	std	Y+4, r24	; 0x04
    11c8:	9d 83       	std	Y+5, r25	; 0x05
    11ca:	ae 83       	std	Y+6, r26	; 0x06
    11cc:	bf 83       	std	Y+7, r27	; 0x07
		Copy_u32Number /= 10;
    11ce:	88 85       	ldd	r24, Y+8	; 0x08
    11d0:	99 85       	ldd	r25, Y+9	; 0x09
    11d2:	aa 85       	ldd	r26, Y+10	; 0x0a
    11d4:	bb 85       	ldd	r27, Y+11	; 0x0b
    11d6:	2a e0       	ldi	r18, 0x0A	; 10
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	40 e0       	ldi	r20, 0x00	; 0
    11dc:	50 e0       	ldi	r21, 0x00	; 0
    11de:	bc 01       	movw	r22, r24
    11e0:	cd 01       	movw	r24, r26
    11e2:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    11e6:	da 01       	movw	r26, r20
    11e8:	c9 01       	movw	r24, r18
    11ea:	88 87       	std	Y+8, r24	; 0x08
    11ec:	99 87       	std	Y+9, r25	; 0x09
    11ee:	aa 87       	std	Y+10, r26	; 0x0a
    11f0:	bb 87       	std	Y+11, r27	; 0x0b
		Local_u8NumOfDigits++;
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	8f 5f       	subi	r24, 0xFF	; 255
    11f6:	8b 83       	std	Y+3, r24	; 0x03
		return;
	}
	u32 Local_u8Reverse=0;
	u8 Local_u8NumOfDigits=0;
	u8 Local_u8Remainder=0,Local_u8Send=0;
	while (Copy_u32Number != 0) {
    11f8:	88 85       	ldd	r24, Y+8	; 0x08
    11fa:	99 85       	ldd	r25, Y+9	; 0x09
    11fc:	aa 85       	ldd	r26, Y+10	; 0x0a
    11fe:	bb 85       	ldd	r27, Y+11	; 0x0b
    1200:	00 97       	sbiw	r24, 0x00	; 0
    1202:	a1 05       	cpc	r26, r1
    1204:	b1 05       	cpc	r27, r1
    1206:	09 f0       	breq	.+2      	; 0x120a <CLCD_voidWriteNumber+0xd4>
    1208:	b8 cf       	rjmp	.-144    	; 0x117a <CLCD_voidWriteNumber+0x44>
    120a:	28 c0       	rjmp	.+80     	; 0x125c <CLCD_voidWriteNumber+0x126>
		Local_u8Reverse = Local_u8Reverse * 10 + Local_u8Remainder;
		Copy_u32Number /= 10;
		Local_u8NumOfDigits++;
	  }
	while(Local_u8NumOfDigits!=0){
		Local_u8Send=(Local_u8Reverse%10)+48;
    120c:	8c 81       	ldd	r24, Y+4	; 0x04
    120e:	9d 81       	ldd	r25, Y+5	; 0x05
    1210:	ae 81       	ldd	r26, Y+6	; 0x06
    1212:	bf 81       	ldd	r27, Y+7	; 0x07
    1214:	2a e0       	ldi	r18, 0x0A	; 10
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	40 e0       	ldi	r20, 0x00	; 0
    121a:	50 e0       	ldi	r21, 0x00	; 0
    121c:	bc 01       	movw	r22, r24
    121e:	cd 01       	movw	r24, r26
    1220:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    1224:	dc 01       	movw	r26, r24
    1226:	cb 01       	movw	r24, r22
    1228:	80 5d       	subi	r24, 0xD0	; 208
    122a:	89 83       	std	Y+1, r24	; 0x01
		CLCD_voidSendData(Local_u8Send);
    122c:	89 81       	ldd	r24, Y+1	; 0x01
    122e:	0e 94 e6 06 	call	0xdcc	; 0xdcc <CLCD_voidSendData>
		Local_u8Reverse/=10;
    1232:	8c 81       	ldd	r24, Y+4	; 0x04
    1234:	9d 81       	ldd	r25, Y+5	; 0x05
    1236:	ae 81       	ldd	r26, Y+6	; 0x06
    1238:	bf 81       	ldd	r27, Y+7	; 0x07
    123a:	2a e0       	ldi	r18, 0x0A	; 10
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	40 e0       	ldi	r20, 0x00	; 0
    1240:	50 e0       	ldi	r21, 0x00	; 0
    1242:	bc 01       	movw	r22, r24
    1244:	cd 01       	movw	r24, r26
    1246:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    124a:	da 01       	movw	r26, r20
    124c:	c9 01       	movw	r24, r18
    124e:	8c 83       	std	Y+4, r24	; 0x04
    1250:	9d 83       	std	Y+5, r25	; 0x05
    1252:	ae 83       	std	Y+6, r26	; 0x06
    1254:	bf 83       	std	Y+7, r27	; 0x07
		Local_u8NumOfDigits--;
    1256:	8b 81       	ldd	r24, Y+3	; 0x03
    1258:	81 50       	subi	r24, 0x01	; 1
    125a:	8b 83       	std	Y+3, r24	; 0x03
		Local_u8Remainder = Copy_u32Number % 10;
		Local_u8Reverse = Local_u8Reverse * 10 + Local_u8Remainder;
		Copy_u32Number /= 10;
		Local_u8NumOfDigits++;
	  }
	while(Local_u8NumOfDigits!=0){
    125c:	8b 81       	ldd	r24, Y+3	; 0x03
    125e:	88 23       	and	r24, r24
    1260:	a9 f6       	brne	.-86     	; 0x120c <CLCD_voidWriteNumber+0xd6>
		Local_u8Send=(Local_u8Reverse%10)+48;
		CLCD_voidSendData(Local_u8Send);
		Local_u8Reverse/=10;
		Local_u8NumOfDigits--;
	}
}
    1262:	2b 96       	adiw	r28, 0x0b	; 11
    1264:	0f b6       	in	r0, 0x3f	; 63
    1266:	f8 94       	cli
    1268:	de bf       	out	0x3e, r29	; 62
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	cd bf       	out	0x3d, r28	; 61
    126e:	cf 91       	pop	r28
    1270:	df 91       	pop	r29
    1272:	08 95       	ret

00001274 <CLCD_voidWriteFloatNum>:
void CLCD_voidWriteFloatNum(f32 Copy_f32Num){
    1274:	df 93       	push	r29
    1276:	cf 93       	push	r28
    1278:	cd b7       	in	r28, 0x3d	; 61
    127a:	de b7       	in	r29, 0x3e	; 62
    127c:	29 97       	sbiw	r28, 0x09	; 9
    127e:	0f b6       	in	r0, 0x3f	; 63
    1280:	f8 94       	cli
    1282:	de bf       	out	0x3e, r29	; 62
    1284:	0f be       	out	0x3f, r0	; 63
    1286:	cd bf       	out	0x3d, r28	; 61
    1288:	6e 83       	std	Y+6, r22	; 0x06
    128a:	7f 83       	std	Y+7, r23	; 0x07
    128c:	88 87       	std	Y+8, r24	; 0x08
    128e:	99 87       	std	Y+9, r25	; 0x09
	u8 Local_u8NumInt=(int)Copy_f32Num;
    1290:	6e 81       	ldd	r22, Y+6	; 0x06
    1292:	7f 81       	ldd	r23, Y+7	; 0x07
    1294:	88 85       	ldd	r24, Y+8	; 0x08
    1296:	99 85       	ldd	r25, Y+9	; 0x09
    1298:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
    129c:	dc 01       	movw	r26, r24
    129e:	cb 01       	movw	r24, r22
    12a0:	8d 83       	std	Y+5, r24	; 0x05
	CLCD_voidWriteNumber(Local_u8NumInt);
    12a2:	8d 81       	ldd	r24, Y+5	; 0x05
    12a4:	88 2f       	mov	r24, r24
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	a0 e0       	ldi	r26, 0x00	; 0
    12aa:	b0 e0       	ldi	r27, 0x00	; 0
    12ac:	bc 01       	movw	r22, r24
    12ae:	cd 01       	movw	r24, r26
    12b0:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
	CLCD_voidSendData('.');
    12b4:	8e e2       	ldi	r24, 0x2E	; 46
    12b6:	0e 94 e6 06 	call	0xdcc	; 0xdcc <CLCD_voidSendData>
	f32 Local_f32FloatNum=Copy_f32Num-Local_u8NumInt;
    12ba:	8d 81       	ldd	r24, Y+5	; 0x05
    12bc:	88 2f       	mov	r24, r24
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	aa 27       	eor	r26, r26
    12c2:	97 fd       	sbrc	r25, 7
    12c4:	a0 95       	com	r26
    12c6:	ba 2f       	mov	r27, r26
    12c8:	bc 01       	movw	r22, r24
    12ca:	cd 01       	movw	r24, r26
    12cc:	0e 94 a1 03 	call	0x742	; 0x742 <__floatsisf>
    12d0:	9b 01       	movw	r18, r22
    12d2:	ac 01       	movw	r20, r24
    12d4:	6e 81       	ldd	r22, Y+6	; 0x06
    12d6:	7f 81       	ldd	r23, Y+7	; 0x07
    12d8:	88 85       	ldd	r24, Y+8	; 0x08
    12da:	99 85       	ldd	r25, Y+9	; 0x09
    12dc:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    12e0:	dc 01       	movw	r26, r24
    12e2:	cb 01       	movw	r24, r22
    12e4:	89 83       	std	Y+1, r24	; 0x01
    12e6:	9a 83       	std	Y+2, r25	; 0x02
    12e8:	ab 83       	std	Y+3, r26	; 0x03
    12ea:	bc 83       	std	Y+4, r27	; 0x04
	Local_f32FloatNum*=100000;
    12ec:	69 81       	ldd	r22, Y+1	; 0x01
    12ee:	7a 81       	ldd	r23, Y+2	; 0x02
    12f0:	8b 81       	ldd	r24, Y+3	; 0x03
    12f2:	9c 81       	ldd	r25, Y+4	; 0x04
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	30 e5       	ldi	r19, 0x50	; 80
    12f8:	43 ec       	ldi	r20, 0xC3	; 195
    12fa:	57 e4       	ldi	r21, 0x47	; 71
    12fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1300:	dc 01       	movw	r26, r24
    1302:	cb 01       	movw	r24, r22
    1304:	89 83       	std	Y+1, r24	; 0x01
    1306:	9a 83       	std	Y+2, r25	; 0x02
    1308:	ab 83       	std	Y+3, r26	; 0x03
    130a:	bc 83       	std	Y+4, r27	; 0x04
	CLCD_voidWriteNumber(Local_f32FloatNum);
    130c:	69 81       	ldd	r22, Y+1	; 0x01
    130e:	7a 81       	ldd	r23, Y+2	; 0x02
    1310:	8b 81       	ldd	r24, Y+3	; 0x03
    1312:	9c 81       	ldd	r25, Y+4	; 0x04
    1314:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1318:	dc 01       	movw	r26, r24
    131a:	cb 01       	movw	r24, r22
    131c:	bc 01       	movw	r22, r24
    131e:	cd 01       	movw	r24, r26
    1320:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
}
    1324:	29 96       	adiw	r28, 0x09	; 9
    1326:	0f b6       	in	r0, 0x3f	; 63
    1328:	f8 94       	cli
    132a:	de bf       	out	0x3e, r29	; 62
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	cd bf       	out	0x3d, r28	; 61
    1330:	cf 91       	pop	r28
    1332:	df 91       	pop	r29
    1334:	08 95       	ret

00001336 <DIO_u8SetPinValue>:
#include "DIO_interface.h"
#include "DIO_register.h"
#include "DIO_config.h"
#include "DIO_private.h"

u8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin,u8 Copy_u8Value){
    1336:	df 93       	push	r29
    1338:	cf 93       	push	r28
    133a:	cd b7       	in	r28, 0x3d	; 61
    133c:	de b7       	in	r29, 0x3e	; 62
    133e:	28 97       	sbiw	r28, 0x08	; 8
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	f8 94       	cli
    1344:	de bf       	out	0x3e, r29	; 62
    1346:	0f be       	out	0x3f, r0	; 63
    1348:	cd bf       	out	0x3d, r28	; 61
    134a:	8a 83       	std	Y+2, r24	; 0x02
    134c:	6b 83       	std	Y+3, r22	; 0x03
    134e:	4c 83       	std	Y+4, r20	; 0x04

	u8 Local_u8ErrorState=0;
    1350:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Pin<=DIO_u8PIN7){
    1352:	8b 81       	ldd	r24, Y+3	; 0x03
    1354:	88 30       	cpi	r24, 0x08	; 8
    1356:	08 f0       	brcs	.+2      	; 0x135a <DIO_u8SetPinValue+0x24>
    1358:	f4 c0       	rjmp	.+488    	; 0x1542 <DIO_u8SetPinValue+0x20c>
		if(Copy_u8Value==DIO_u8PIN_LOW){
    135a:	8c 81       	ldd	r24, Y+4	; 0x04
    135c:	88 23       	and	r24, r24
    135e:	09 f0       	breq	.+2      	; 0x1362 <DIO_u8SetPinValue+0x2c>
    1360:	77 c0       	rjmp	.+238    	; 0x1450 <DIO_u8SetPinValue+0x11a>
			switch(Copy_u8Port){
    1362:	8a 81       	ldd	r24, Y+2	; 0x02
    1364:	28 2f       	mov	r18, r24
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	38 87       	std	Y+8, r19	; 0x08
    136a:	2f 83       	std	Y+7, r18	; 0x07
    136c:	8f 81       	ldd	r24, Y+7	; 0x07
    136e:	98 85       	ldd	r25, Y+8	; 0x08
    1370:	81 30       	cpi	r24, 0x01	; 1
    1372:	91 05       	cpc	r25, r1
    1374:	59 f1       	breq	.+86     	; 0x13cc <DIO_u8SetPinValue+0x96>
    1376:	2f 81       	ldd	r18, Y+7	; 0x07
    1378:	38 85       	ldd	r19, Y+8	; 0x08
    137a:	22 30       	cpi	r18, 0x02	; 2
    137c:	31 05       	cpc	r19, r1
    137e:	2c f4       	brge	.+10     	; 0x138a <DIO_u8SetPinValue+0x54>
    1380:	8f 81       	ldd	r24, Y+7	; 0x07
    1382:	98 85       	ldd	r25, Y+8	; 0x08
    1384:	00 97       	sbiw	r24, 0x00	; 0
    1386:	69 f0       	breq	.+26     	; 0x13a2 <DIO_u8SetPinValue+0x6c>
    1388:	60 c0       	rjmp	.+192    	; 0x144a <DIO_u8SetPinValue+0x114>
    138a:	2f 81       	ldd	r18, Y+7	; 0x07
    138c:	38 85       	ldd	r19, Y+8	; 0x08
    138e:	22 30       	cpi	r18, 0x02	; 2
    1390:	31 05       	cpc	r19, r1
    1392:	89 f1       	breq	.+98     	; 0x13f6 <DIO_u8SetPinValue+0xc0>
    1394:	8f 81       	ldd	r24, Y+7	; 0x07
    1396:	98 85       	ldd	r25, Y+8	; 0x08
    1398:	83 30       	cpi	r24, 0x03	; 3
    139a:	91 05       	cpc	r25, r1
    139c:	09 f4       	brne	.+2      	; 0x13a0 <DIO_u8SetPinValue+0x6a>
    139e:	40 c0       	rjmp	.+128    	; 0x1420 <DIO_u8SetPinValue+0xea>
    13a0:	54 c0       	rjmp	.+168    	; 0x144a <DIO_u8SetPinValue+0x114>
			case DIO_u8PORTA:
				CLR_BIT(PORTA,Copy_u8Pin);
    13a2:	ab e3       	ldi	r26, 0x3B	; 59
    13a4:	b0 e0       	ldi	r27, 0x00	; 0
    13a6:	eb e3       	ldi	r30, 0x3B	; 59
    13a8:	f0 e0       	ldi	r31, 0x00	; 0
    13aa:	80 81       	ld	r24, Z
    13ac:	48 2f       	mov	r20, r24
    13ae:	8b 81       	ldd	r24, Y+3	; 0x03
    13b0:	28 2f       	mov	r18, r24
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	02 2e       	mov	r0, r18
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <DIO_u8SetPinValue+0x8a>
    13bc:	88 0f       	add	r24, r24
    13be:	99 1f       	adc	r25, r25
    13c0:	0a 94       	dec	r0
    13c2:	e2 f7       	brpl	.-8      	; 0x13bc <DIO_u8SetPinValue+0x86>
    13c4:	80 95       	com	r24
    13c6:	84 23       	and	r24, r20
    13c8:	8c 93       	st	X, r24
    13ca:	bd c0       	rjmp	.+378    	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			case DIO_u8PORTB:
				CLR_BIT(PORTB,Copy_u8Pin);
    13cc:	a8 e3       	ldi	r26, 0x38	; 56
    13ce:	b0 e0       	ldi	r27, 0x00	; 0
    13d0:	e8 e3       	ldi	r30, 0x38	; 56
    13d2:	f0 e0       	ldi	r31, 0x00	; 0
    13d4:	80 81       	ld	r24, Z
    13d6:	48 2f       	mov	r20, r24
    13d8:	8b 81       	ldd	r24, Y+3	; 0x03
    13da:	28 2f       	mov	r18, r24
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	81 e0       	ldi	r24, 0x01	; 1
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	02 2e       	mov	r0, r18
    13e4:	02 c0       	rjmp	.+4      	; 0x13ea <DIO_u8SetPinValue+0xb4>
    13e6:	88 0f       	add	r24, r24
    13e8:	99 1f       	adc	r25, r25
    13ea:	0a 94       	dec	r0
    13ec:	e2 f7       	brpl	.-8      	; 0x13e6 <DIO_u8SetPinValue+0xb0>
    13ee:	80 95       	com	r24
    13f0:	84 23       	and	r24, r20
    13f2:	8c 93       	st	X, r24
    13f4:	a8 c0       	rjmp	.+336    	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			case DIO_u8PORTC:
				CLR_BIT(PORTC,Copy_u8Pin);
    13f6:	a5 e3       	ldi	r26, 0x35	; 53
    13f8:	b0 e0       	ldi	r27, 0x00	; 0
    13fa:	e5 e3       	ldi	r30, 0x35	; 53
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	80 81       	ld	r24, Z
    1400:	48 2f       	mov	r20, r24
    1402:	8b 81       	ldd	r24, Y+3	; 0x03
    1404:	28 2f       	mov	r18, r24
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	81 e0       	ldi	r24, 0x01	; 1
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	02 2e       	mov	r0, r18
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <DIO_u8SetPinValue+0xde>
    1410:	88 0f       	add	r24, r24
    1412:	99 1f       	adc	r25, r25
    1414:	0a 94       	dec	r0
    1416:	e2 f7       	brpl	.-8      	; 0x1410 <DIO_u8SetPinValue+0xda>
    1418:	80 95       	com	r24
    141a:	84 23       	and	r24, r20
    141c:	8c 93       	st	X, r24
    141e:	93 c0       	rjmp	.+294    	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			case DIO_u8PORTD:
				CLR_BIT(PORTD,Copy_u8Pin);
    1420:	a2 e3       	ldi	r26, 0x32	; 50
    1422:	b0 e0       	ldi	r27, 0x00	; 0
    1424:	e2 e3       	ldi	r30, 0x32	; 50
    1426:	f0 e0       	ldi	r31, 0x00	; 0
    1428:	80 81       	ld	r24, Z
    142a:	48 2f       	mov	r20, r24
    142c:	8b 81       	ldd	r24, Y+3	; 0x03
    142e:	28 2f       	mov	r18, r24
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	02 2e       	mov	r0, r18
    1438:	02 c0       	rjmp	.+4      	; 0x143e <DIO_u8SetPinValue+0x108>
    143a:	88 0f       	add	r24, r24
    143c:	99 1f       	adc	r25, r25
    143e:	0a 94       	dec	r0
    1440:	e2 f7       	brpl	.-8      	; 0x143a <DIO_u8SetPinValue+0x104>
    1442:	80 95       	com	r24
    1444:	84 23       	and	r24, r20
    1446:	8c 93       	st	X, r24
    1448:	7e c0       	rjmp	.+252    	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			default:
				Local_u8ErrorState=1;
    144a:	81 e0       	ldi	r24, 0x01	; 1
    144c:	89 83       	std	Y+1, r24	; 0x01
    144e:	7b c0       	rjmp	.+246    	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;
			}
		}
		else if (Copy_u8Value==DIO_u8PIN_HIGH){
    1450:	8c 81       	ldd	r24, Y+4	; 0x04
    1452:	81 30       	cpi	r24, 0x01	; 1
    1454:	09 f0       	breq	.+2      	; 0x1458 <DIO_u8SetPinValue+0x122>
    1456:	72 c0       	rjmp	.+228    	; 0x153c <DIO_u8SetPinValue+0x206>
			switch(Copy_u8Port){
    1458:	8a 81       	ldd	r24, Y+2	; 0x02
    145a:	28 2f       	mov	r18, r24
    145c:	30 e0       	ldi	r19, 0x00	; 0
    145e:	3e 83       	std	Y+6, r19	; 0x06
    1460:	2d 83       	std	Y+5, r18	; 0x05
    1462:	8d 81       	ldd	r24, Y+5	; 0x05
    1464:	9e 81       	ldd	r25, Y+6	; 0x06
    1466:	81 30       	cpi	r24, 0x01	; 1
    1468:	91 05       	cpc	r25, r1
    146a:	49 f1       	breq	.+82     	; 0x14be <DIO_u8SetPinValue+0x188>
    146c:	2d 81       	ldd	r18, Y+5	; 0x05
    146e:	3e 81       	ldd	r19, Y+6	; 0x06
    1470:	22 30       	cpi	r18, 0x02	; 2
    1472:	31 05       	cpc	r19, r1
    1474:	2c f4       	brge	.+10     	; 0x1480 <DIO_u8SetPinValue+0x14a>
    1476:	8d 81       	ldd	r24, Y+5	; 0x05
    1478:	9e 81       	ldd	r25, Y+6	; 0x06
    147a:	00 97       	sbiw	r24, 0x00	; 0
    147c:	61 f0       	breq	.+24     	; 0x1496 <DIO_u8SetPinValue+0x160>
    147e:	5b c0       	rjmp	.+182    	; 0x1536 <DIO_u8SetPinValue+0x200>
    1480:	2d 81       	ldd	r18, Y+5	; 0x05
    1482:	3e 81       	ldd	r19, Y+6	; 0x06
    1484:	22 30       	cpi	r18, 0x02	; 2
    1486:	31 05       	cpc	r19, r1
    1488:	71 f1       	breq	.+92     	; 0x14e6 <DIO_u8SetPinValue+0x1b0>
    148a:	8d 81       	ldd	r24, Y+5	; 0x05
    148c:	9e 81       	ldd	r25, Y+6	; 0x06
    148e:	83 30       	cpi	r24, 0x03	; 3
    1490:	91 05       	cpc	r25, r1
    1492:	e9 f1       	breq	.+122    	; 0x150e <DIO_u8SetPinValue+0x1d8>
    1494:	50 c0       	rjmp	.+160    	; 0x1536 <DIO_u8SetPinValue+0x200>
			case DIO_u8PORTA:
				SET_BIT(PORTA,Copy_u8Pin);
    1496:	ab e3       	ldi	r26, 0x3B	; 59
    1498:	b0 e0       	ldi	r27, 0x00	; 0
    149a:	eb e3       	ldi	r30, 0x3B	; 59
    149c:	f0 e0       	ldi	r31, 0x00	; 0
    149e:	80 81       	ld	r24, Z
    14a0:	48 2f       	mov	r20, r24
    14a2:	8b 81       	ldd	r24, Y+3	; 0x03
    14a4:	28 2f       	mov	r18, r24
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	02 2e       	mov	r0, r18
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <DIO_u8SetPinValue+0x17e>
    14b0:	88 0f       	add	r24, r24
    14b2:	99 1f       	adc	r25, r25
    14b4:	0a 94       	dec	r0
    14b6:	e2 f7       	brpl	.-8      	; 0x14b0 <DIO_u8SetPinValue+0x17a>
    14b8:	84 2b       	or	r24, r20
    14ba:	8c 93       	st	X, r24
    14bc:	44 c0       	rjmp	.+136    	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			case DIO_u8PORTB:
				SET_BIT(PORTB,Copy_u8Pin);
    14be:	a8 e3       	ldi	r26, 0x38	; 56
    14c0:	b0 e0       	ldi	r27, 0x00	; 0
    14c2:	e8 e3       	ldi	r30, 0x38	; 56
    14c4:	f0 e0       	ldi	r31, 0x00	; 0
    14c6:	80 81       	ld	r24, Z
    14c8:	48 2f       	mov	r20, r24
    14ca:	8b 81       	ldd	r24, Y+3	; 0x03
    14cc:	28 2f       	mov	r18, r24
    14ce:	30 e0       	ldi	r19, 0x00	; 0
    14d0:	81 e0       	ldi	r24, 0x01	; 1
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	02 2e       	mov	r0, r18
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <DIO_u8SetPinValue+0x1a6>
    14d8:	88 0f       	add	r24, r24
    14da:	99 1f       	adc	r25, r25
    14dc:	0a 94       	dec	r0
    14de:	e2 f7       	brpl	.-8      	; 0x14d8 <DIO_u8SetPinValue+0x1a2>
    14e0:	84 2b       	or	r24, r20
    14e2:	8c 93       	st	X, r24
    14e4:	30 c0       	rjmp	.+96     	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			case DIO_u8PORTC:
				SET_BIT(PORTC,Copy_u8Pin);
    14e6:	a5 e3       	ldi	r26, 0x35	; 53
    14e8:	b0 e0       	ldi	r27, 0x00	; 0
    14ea:	e5 e3       	ldi	r30, 0x35	; 53
    14ec:	f0 e0       	ldi	r31, 0x00	; 0
    14ee:	80 81       	ld	r24, Z
    14f0:	48 2f       	mov	r20, r24
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	28 2f       	mov	r18, r24
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	81 e0       	ldi	r24, 0x01	; 1
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	02 2e       	mov	r0, r18
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <DIO_u8SetPinValue+0x1ce>
    1500:	88 0f       	add	r24, r24
    1502:	99 1f       	adc	r25, r25
    1504:	0a 94       	dec	r0
    1506:	e2 f7       	brpl	.-8      	; 0x1500 <DIO_u8SetPinValue+0x1ca>
    1508:	84 2b       	or	r24, r20
    150a:	8c 93       	st	X, r24
    150c:	1c c0       	rjmp	.+56     	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			case DIO_u8PORTD:
				SET_BIT(PORTD,Copy_u8Pin);
    150e:	a2 e3       	ldi	r26, 0x32	; 50
    1510:	b0 e0       	ldi	r27, 0x00	; 0
    1512:	e2 e3       	ldi	r30, 0x32	; 50
    1514:	f0 e0       	ldi	r31, 0x00	; 0
    1516:	80 81       	ld	r24, Z
    1518:	48 2f       	mov	r20, r24
    151a:	8b 81       	ldd	r24, Y+3	; 0x03
    151c:	28 2f       	mov	r18, r24
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	02 2e       	mov	r0, r18
    1526:	02 c0       	rjmp	.+4      	; 0x152c <DIO_u8SetPinValue+0x1f6>
    1528:	88 0f       	add	r24, r24
    152a:	99 1f       	adc	r25, r25
    152c:	0a 94       	dec	r0
    152e:	e2 f7       	brpl	.-8      	; 0x1528 <DIO_u8SetPinValue+0x1f2>
    1530:	84 2b       	or	r24, r20
    1532:	8c 93       	st	X, r24
    1534:	08 c0       	rjmp	.+16     	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;

			default:
				Local_u8ErrorState=1;
    1536:	81 e0       	ldi	r24, 0x01	; 1
    1538:	89 83       	std	Y+1, r24	; 0x01
    153a:	05 c0       	rjmp	.+10     	; 0x1546 <DIO_u8SetPinValue+0x210>
				break;
			}
		}
		else{
			Local_u8ErrorState=1;
    153c:	81 e0       	ldi	r24, 0x01	; 1
    153e:	89 83       	std	Y+1, r24	; 0x01
    1540:	02 c0       	rjmp	.+4      	; 0x1546 <DIO_u8SetPinValue+0x210>
		}
	}
	else {
		Local_u8ErrorState=1;
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1546:	89 81       	ldd	r24, Y+1	; 0x01
}
    1548:	28 96       	adiw	r28, 0x08	; 8
    154a:	0f b6       	in	r0, 0x3f	; 63
    154c:	f8 94       	cli
    154e:	de bf       	out	0x3e, r29	; 62
    1550:	0f be       	out	0x3f, r0	; 63
    1552:	cd bf       	out	0x3d, r28	; 61
    1554:	cf 91       	pop	r28
    1556:	df 91       	pop	r29
    1558:	08 95       	ret

0000155a <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8Port,u8 Copy_u8Value){
    155a:	df 93       	push	r29
    155c:	cf 93       	push	r28
    155e:	00 d0       	rcall	.+0      	; 0x1560 <DIO_u8SetPortValue+0x6>
    1560:	00 d0       	rcall	.+0      	; 0x1562 <DIO_u8SetPortValue+0x8>
    1562:	0f 92       	push	r0
    1564:	cd b7       	in	r28, 0x3d	; 61
    1566:	de b7       	in	r29, 0x3e	; 62
    1568:	8a 83       	std	Y+2, r24	; 0x02
    156a:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8ErrorState=0;
    156c:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port){
    156e:	8a 81       	ldd	r24, Y+2	; 0x02
    1570:	28 2f       	mov	r18, r24
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	3d 83       	std	Y+5, r19	; 0x05
    1576:	2c 83       	std	Y+4, r18	; 0x04
    1578:	8c 81       	ldd	r24, Y+4	; 0x04
    157a:	9d 81       	ldd	r25, Y+5	; 0x05
    157c:	81 30       	cpi	r24, 0x01	; 1
    157e:	91 05       	cpc	r25, r1
    1580:	d1 f0       	breq	.+52     	; 0x15b6 <DIO_u8SetPortValue+0x5c>
    1582:	2c 81       	ldd	r18, Y+4	; 0x04
    1584:	3d 81       	ldd	r19, Y+5	; 0x05
    1586:	22 30       	cpi	r18, 0x02	; 2
    1588:	31 05       	cpc	r19, r1
    158a:	2c f4       	brge	.+10     	; 0x1596 <DIO_u8SetPortValue+0x3c>
    158c:	8c 81       	ldd	r24, Y+4	; 0x04
    158e:	9d 81       	ldd	r25, Y+5	; 0x05
    1590:	00 97       	sbiw	r24, 0x00	; 0
    1592:	61 f0       	breq	.+24     	; 0x15ac <DIO_u8SetPortValue+0x52>
    1594:	1f c0       	rjmp	.+62     	; 0x15d4 <DIO_u8SetPortValue+0x7a>
    1596:	2c 81       	ldd	r18, Y+4	; 0x04
    1598:	3d 81       	ldd	r19, Y+5	; 0x05
    159a:	22 30       	cpi	r18, 0x02	; 2
    159c:	31 05       	cpc	r19, r1
    159e:	81 f0       	breq	.+32     	; 0x15c0 <DIO_u8SetPortValue+0x66>
    15a0:	8c 81       	ldd	r24, Y+4	; 0x04
    15a2:	9d 81       	ldd	r25, Y+5	; 0x05
    15a4:	83 30       	cpi	r24, 0x03	; 3
    15a6:	91 05       	cpc	r25, r1
    15a8:	81 f0       	breq	.+32     	; 0x15ca <DIO_u8SetPortValue+0x70>
    15aa:	14 c0       	rjmp	.+40     	; 0x15d4 <DIO_u8SetPortValue+0x7a>
	case DIO_u8PORTA:
		PORTA=Copy_u8Value;
    15ac:	eb e3       	ldi	r30, 0x3B	; 59
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	8b 81       	ldd	r24, Y+3	; 0x03
    15b2:	80 83       	st	Z, r24
    15b4:	11 c0       	rjmp	.+34     	; 0x15d8 <DIO_u8SetPortValue+0x7e>
		break;

	case DIO_u8PORTB:
		PORTB=Copy_u8Value;
    15b6:	e8 e3       	ldi	r30, 0x38	; 56
    15b8:	f0 e0       	ldi	r31, 0x00	; 0
    15ba:	8b 81       	ldd	r24, Y+3	; 0x03
    15bc:	80 83       	st	Z, r24
    15be:	0c c0       	rjmp	.+24     	; 0x15d8 <DIO_u8SetPortValue+0x7e>
		break;

	case DIO_u8PORTC:
		PORTC=Copy_u8Value;
    15c0:	e5 e3       	ldi	r30, 0x35	; 53
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	8b 81       	ldd	r24, Y+3	; 0x03
    15c6:	80 83       	st	Z, r24
    15c8:	07 c0       	rjmp	.+14     	; 0x15d8 <DIO_u8SetPortValue+0x7e>
		break;

	case DIO_u8PORTD:
		PORTD=Copy_u8Value;
    15ca:	e2 e3       	ldi	r30, 0x32	; 50
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	8b 81       	ldd	r24, Y+3	; 0x03
    15d0:	80 83       	st	Z, r24
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <DIO_u8SetPortValue+0x7e>
		break;

	default:
		Local_u8ErrorState=1;
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return Local_u8ErrorState;
    15d8:	89 81       	ldd	r24, Y+1	; 0x01
}
    15da:	0f 90       	pop	r0
    15dc:	0f 90       	pop	r0
    15de:	0f 90       	pop	r0
    15e0:	0f 90       	pop	r0
    15e2:	0f 90       	pop	r0
    15e4:	cf 91       	pop	r28
    15e6:	df 91       	pop	r29
    15e8:	08 95       	ret

000015ea <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin,u8* Copy_pu8Value){
    15ea:	df 93       	push	r29
    15ec:	cf 93       	push	r28
    15ee:	cd b7       	in	r28, 0x3d	; 61
    15f0:	de b7       	in	r29, 0x3e	; 62
    15f2:	27 97       	sbiw	r28, 0x07	; 7
    15f4:	0f b6       	in	r0, 0x3f	; 63
    15f6:	f8 94       	cli
    15f8:	de bf       	out	0x3e, r29	; 62
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	cd bf       	out	0x3d, r28	; 61
    15fe:	8a 83       	std	Y+2, r24	; 0x02
    1600:	6b 83       	std	Y+3, r22	; 0x03
    1602:	5d 83       	std	Y+5, r21	; 0x05
    1604:	4c 83       	std	Y+4, r20	; 0x04

	u8 Local_u8ErrorState=0;
    1606:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_pu8Value!=NULL){
    1608:	8c 81       	ldd	r24, Y+4	; 0x04
    160a:	9d 81       	ldd	r25, Y+5	; 0x05
    160c:	00 97       	sbiw	r24, 0x00	; 0
    160e:	09 f4       	brne	.+2      	; 0x1612 <DIO_u8GetPinValue+0x28>
    1610:	7b c0       	rjmp	.+246    	; 0x1708 <DIO_u8GetPinValue+0x11e>
		if(Copy_u8Pin<=DIO_u8PIN7){
    1612:	8b 81       	ldd	r24, Y+3	; 0x03
    1614:	88 30       	cpi	r24, 0x08	; 8
    1616:	08 f0       	brcs	.+2      	; 0x161a <DIO_u8GetPinValue+0x30>
    1618:	74 c0       	rjmp	.+232    	; 0x1702 <DIO_u8GetPinValue+0x118>
			switch(Copy_u8Port){
    161a:	8a 81       	ldd	r24, Y+2	; 0x02
    161c:	28 2f       	mov	r18, r24
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	3f 83       	std	Y+7, r19	; 0x07
    1622:	2e 83       	std	Y+6, r18	; 0x06
    1624:	4e 81       	ldd	r20, Y+6	; 0x06
    1626:	5f 81       	ldd	r21, Y+7	; 0x07
    1628:	41 30       	cpi	r20, 0x01	; 1
    162a:	51 05       	cpc	r21, r1
    162c:	59 f1       	breq	.+86     	; 0x1684 <DIO_u8GetPinValue+0x9a>
    162e:	8e 81       	ldd	r24, Y+6	; 0x06
    1630:	9f 81       	ldd	r25, Y+7	; 0x07
    1632:	82 30       	cpi	r24, 0x02	; 2
    1634:	91 05       	cpc	r25, r1
    1636:	34 f4       	brge	.+12     	; 0x1644 <DIO_u8GetPinValue+0x5a>
    1638:	2e 81       	ldd	r18, Y+6	; 0x06
    163a:	3f 81       	ldd	r19, Y+7	; 0x07
    163c:	21 15       	cp	r18, r1
    163e:	31 05       	cpc	r19, r1
    1640:	69 f0       	breq	.+26     	; 0x165c <DIO_u8GetPinValue+0x72>
    1642:	5c c0       	rjmp	.+184    	; 0x16fc <DIO_u8GetPinValue+0x112>
    1644:	4e 81       	ldd	r20, Y+6	; 0x06
    1646:	5f 81       	ldd	r21, Y+7	; 0x07
    1648:	42 30       	cpi	r20, 0x02	; 2
    164a:	51 05       	cpc	r21, r1
    164c:	79 f1       	breq	.+94     	; 0x16ac <DIO_u8GetPinValue+0xc2>
    164e:	8e 81       	ldd	r24, Y+6	; 0x06
    1650:	9f 81       	ldd	r25, Y+7	; 0x07
    1652:	83 30       	cpi	r24, 0x03	; 3
    1654:	91 05       	cpc	r25, r1
    1656:	09 f4       	brne	.+2      	; 0x165a <DIO_u8GetPinValue+0x70>
    1658:	3d c0       	rjmp	.+122    	; 0x16d4 <DIO_u8GetPinValue+0xea>
    165a:	50 c0       	rjmp	.+160    	; 0x16fc <DIO_u8GetPinValue+0x112>
			case DIO_u8PORTA:
				*Copy_pu8Value=GET_BIT(PINA,Copy_u8Pin);
    165c:	e9 e3       	ldi	r30, 0x39	; 57
    165e:	f0 e0       	ldi	r31, 0x00	; 0
    1660:	80 81       	ld	r24, Z
    1662:	28 2f       	mov	r18, r24
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	88 2f       	mov	r24, r24
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	a9 01       	movw	r20, r18
    166e:	02 c0       	rjmp	.+4      	; 0x1674 <DIO_u8GetPinValue+0x8a>
    1670:	55 95       	asr	r21
    1672:	47 95       	ror	r20
    1674:	8a 95       	dec	r24
    1676:	e2 f7       	brpl	.-8      	; 0x1670 <DIO_u8GetPinValue+0x86>
    1678:	ca 01       	movw	r24, r20
    167a:	81 70       	andi	r24, 0x01	; 1
    167c:	ec 81       	ldd	r30, Y+4	; 0x04
    167e:	fd 81       	ldd	r31, Y+5	; 0x05
    1680:	80 83       	st	Z, r24
    1682:	44 c0       	rjmp	.+136    	; 0x170c <DIO_u8GetPinValue+0x122>
				break;

			case DIO_u8PORTB:
				*Copy_pu8Value=GET_BIT(PINB,Copy_u8Pin);
    1684:	e6 e3       	ldi	r30, 0x36	; 54
    1686:	f0 e0       	ldi	r31, 0x00	; 0
    1688:	80 81       	ld	r24, Z
    168a:	28 2f       	mov	r18, r24
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	8b 81       	ldd	r24, Y+3	; 0x03
    1690:	88 2f       	mov	r24, r24
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	a9 01       	movw	r20, r18
    1696:	02 c0       	rjmp	.+4      	; 0x169c <DIO_u8GetPinValue+0xb2>
    1698:	55 95       	asr	r21
    169a:	47 95       	ror	r20
    169c:	8a 95       	dec	r24
    169e:	e2 f7       	brpl	.-8      	; 0x1698 <DIO_u8GetPinValue+0xae>
    16a0:	ca 01       	movw	r24, r20
    16a2:	81 70       	andi	r24, 0x01	; 1
    16a4:	ec 81       	ldd	r30, Y+4	; 0x04
    16a6:	fd 81       	ldd	r31, Y+5	; 0x05
    16a8:	80 83       	st	Z, r24
    16aa:	30 c0       	rjmp	.+96     	; 0x170c <DIO_u8GetPinValue+0x122>
				break;

			case DIO_u8PORTC:
				*Copy_pu8Value=GET_BIT(PINC,Copy_u8Pin);
    16ac:	e3 e3       	ldi	r30, 0x33	; 51
    16ae:	f0 e0       	ldi	r31, 0x00	; 0
    16b0:	80 81       	ld	r24, Z
    16b2:	28 2f       	mov	r18, r24
    16b4:	30 e0       	ldi	r19, 0x00	; 0
    16b6:	8b 81       	ldd	r24, Y+3	; 0x03
    16b8:	88 2f       	mov	r24, r24
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	a9 01       	movw	r20, r18
    16be:	02 c0       	rjmp	.+4      	; 0x16c4 <DIO_u8GetPinValue+0xda>
    16c0:	55 95       	asr	r21
    16c2:	47 95       	ror	r20
    16c4:	8a 95       	dec	r24
    16c6:	e2 f7       	brpl	.-8      	; 0x16c0 <DIO_u8GetPinValue+0xd6>
    16c8:	ca 01       	movw	r24, r20
    16ca:	81 70       	andi	r24, 0x01	; 1
    16cc:	ec 81       	ldd	r30, Y+4	; 0x04
    16ce:	fd 81       	ldd	r31, Y+5	; 0x05
    16d0:	80 83       	st	Z, r24
    16d2:	1c c0       	rjmp	.+56     	; 0x170c <DIO_u8GetPinValue+0x122>
				break;

			case DIO_u8PORTD:
				*Copy_pu8Value=GET_BIT(PIND,Copy_u8Pin);
    16d4:	e0 e3       	ldi	r30, 0x30	; 48
    16d6:	f0 e0       	ldi	r31, 0x00	; 0
    16d8:	80 81       	ld	r24, Z
    16da:	28 2f       	mov	r18, r24
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	8b 81       	ldd	r24, Y+3	; 0x03
    16e0:	88 2f       	mov	r24, r24
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	a9 01       	movw	r20, r18
    16e6:	02 c0       	rjmp	.+4      	; 0x16ec <DIO_u8GetPinValue+0x102>
    16e8:	55 95       	asr	r21
    16ea:	47 95       	ror	r20
    16ec:	8a 95       	dec	r24
    16ee:	e2 f7       	brpl	.-8      	; 0x16e8 <DIO_u8GetPinValue+0xfe>
    16f0:	ca 01       	movw	r24, r20
    16f2:	81 70       	andi	r24, 0x01	; 1
    16f4:	ec 81       	ldd	r30, Y+4	; 0x04
    16f6:	fd 81       	ldd	r31, Y+5	; 0x05
    16f8:	80 83       	st	Z, r24
    16fa:	08 c0       	rjmp	.+16     	; 0x170c <DIO_u8GetPinValue+0x122>
				break;

			default:
				Local_u8ErrorState=1;
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	89 83       	std	Y+1, r24	; 0x01
    1700:	05 c0       	rjmp	.+10     	; 0x170c <DIO_u8GetPinValue+0x122>
				break;
			}
		}
		else{
			Local_u8ErrorState=1;
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	89 83       	std	Y+1, r24	; 0x01
    1706:	02 c0       	rjmp	.+4      	; 0x170c <DIO_u8GetPinValue+0x122>
		}
	}
	else{
		Local_u8ErrorState=1;
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    170c:	89 81       	ldd	r24, Y+1	; 0x01
}
    170e:	27 96       	adiw	r28, 0x07	; 7
    1710:	0f b6       	in	r0, 0x3f	; 63
    1712:	f8 94       	cli
    1714:	de bf       	out	0x3e, r29	; 62
    1716:	0f be       	out	0x3f, r0	; 63
    1718:	cd bf       	out	0x3d, r28	; 61
    171a:	cf 91       	pop	r28
    171c:	df 91       	pop	r29
    171e:	08 95       	ret

00001720 <DIO_u8GetPortValue>:
u8 DIO_u8GetPortValue(u8 Copy_u8Port,u8* Copy_pu8Value){
    1720:	df 93       	push	r29
    1722:	cf 93       	push	r28
    1724:	00 d0       	rcall	.+0      	; 0x1726 <DIO_u8GetPortValue+0x6>
    1726:	00 d0       	rcall	.+0      	; 0x1728 <DIO_u8GetPortValue+0x8>
    1728:	00 d0       	rcall	.+0      	; 0x172a <DIO_u8GetPortValue+0xa>
    172a:	cd b7       	in	r28, 0x3d	; 61
    172c:	de b7       	in	r29, 0x3e	; 62
    172e:	8a 83       	std	Y+2, r24	; 0x02
    1730:	7c 83       	std	Y+4, r23	; 0x04
    1732:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
    1734:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_pu8Value!=NULL){
    1736:	8b 81       	ldd	r24, Y+3	; 0x03
    1738:	9c 81       	ldd	r25, Y+4	; 0x04
    173a:	00 97       	sbiw	r24, 0x00	; 0
    173c:	09 f4       	brne	.+2      	; 0x1740 <DIO_u8GetPortValue+0x20>
    173e:	3e c0       	rjmp	.+124    	; 0x17bc <DIO_u8GetPortValue+0x9c>

			switch(Copy_u8Port){
    1740:	8a 81       	ldd	r24, Y+2	; 0x02
    1742:	28 2f       	mov	r18, r24
    1744:	30 e0       	ldi	r19, 0x00	; 0
    1746:	3e 83       	std	Y+6, r19	; 0x06
    1748:	2d 83       	std	Y+5, r18	; 0x05
    174a:	8d 81       	ldd	r24, Y+5	; 0x05
    174c:	9e 81       	ldd	r25, Y+6	; 0x06
    174e:	81 30       	cpi	r24, 0x01	; 1
    1750:	91 05       	cpc	r25, r1
    1752:	e1 f0       	breq	.+56     	; 0x178c <DIO_u8GetPortValue+0x6c>
    1754:	2d 81       	ldd	r18, Y+5	; 0x05
    1756:	3e 81       	ldd	r19, Y+6	; 0x06
    1758:	22 30       	cpi	r18, 0x02	; 2
    175a:	31 05       	cpc	r19, r1
    175c:	2c f4       	brge	.+10     	; 0x1768 <DIO_u8GetPortValue+0x48>
    175e:	8d 81       	ldd	r24, Y+5	; 0x05
    1760:	9e 81       	ldd	r25, Y+6	; 0x06
    1762:	00 97       	sbiw	r24, 0x00	; 0
    1764:	61 f0       	breq	.+24     	; 0x177e <DIO_u8GetPortValue+0x5e>
    1766:	27 c0       	rjmp	.+78     	; 0x17b6 <DIO_u8GetPortValue+0x96>
    1768:	2d 81       	ldd	r18, Y+5	; 0x05
    176a:	3e 81       	ldd	r19, Y+6	; 0x06
    176c:	22 30       	cpi	r18, 0x02	; 2
    176e:	31 05       	cpc	r19, r1
    1770:	a1 f0       	breq	.+40     	; 0x179a <DIO_u8GetPortValue+0x7a>
    1772:	8d 81       	ldd	r24, Y+5	; 0x05
    1774:	9e 81       	ldd	r25, Y+6	; 0x06
    1776:	83 30       	cpi	r24, 0x03	; 3
    1778:	91 05       	cpc	r25, r1
    177a:	b1 f0       	breq	.+44     	; 0x17a8 <DIO_u8GetPortValue+0x88>
    177c:	1c c0       	rjmp	.+56     	; 0x17b6 <DIO_u8GetPortValue+0x96>
			case DIO_u8PORTA:
				*Copy_pu8Value=PINA;
    177e:	e9 e3       	ldi	r30, 0x39	; 57
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	80 81       	ld	r24, Z
    1784:	eb 81       	ldd	r30, Y+3	; 0x03
    1786:	fc 81       	ldd	r31, Y+4	; 0x04
    1788:	80 83       	st	Z, r24
    178a:	1a c0       	rjmp	.+52     	; 0x17c0 <DIO_u8GetPortValue+0xa0>
				break;

			case DIO_u8PORTB:
				*Copy_pu8Value=PINB;
    178c:	e6 e3       	ldi	r30, 0x36	; 54
    178e:	f0 e0       	ldi	r31, 0x00	; 0
    1790:	80 81       	ld	r24, Z
    1792:	eb 81       	ldd	r30, Y+3	; 0x03
    1794:	fc 81       	ldd	r31, Y+4	; 0x04
    1796:	80 83       	st	Z, r24
    1798:	13 c0       	rjmp	.+38     	; 0x17c0 <DIO_u8GetPortValue+0xa0>
				break;

			case DIO_u8PORTC:
				*Copy_pu8Value=PINC;
    179a:	e3 e3       	ldi	r30, 0x33	; 51
    179c:	f0 e0       	ldi	r31, 0x00	; 0
    179e:	80 81       	ld	r24, Z
    17a0:	eb 81       	ldd	r30, Y+3	; 0x03
    17a2:	fc 81       	ldd	r31, Y+4	; 0x04
    17a4:	80 83       	st	Z, r24
    17a6:	0c c0       	rjmp	.+24     	; 0x17c0 <DIO_u8GetPortValue+0xa0>
				break;

			case DIO_u8PORTD:
				*Copy_pu8Value=PIND;
    17a8:	e0 e3       	ldi	r30, 0x30	; 48
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	80 81       	ld	r24, Z
    17ae:	eb 81       	ldd	r30, Y+3	; 0x03
    17b0:	fc 81       	ldd	r31, Y+4	; 0x04
    17b2:	80 83       	st	Z, r24
    17b4:	05 c0       	rjmp	.+10     	; 0x17c0 <DIO_u8GetPortValue+0xa0>
				break;

			default:
				Local_u8ErrorState=1;
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	89 83       	std	Y+1, r24	; 0x01
    17ba:	02 c0       	rjmp	.+4      	; 0x17c0 <DIO_u8GetPortValue+0xa0>
				break;
			}
		}
		else{
			Local_u8ErrorState=1;
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	89 83       	std	Y+1, r24	; 0x01
		}
	return Local_u8ErrorState;
    17c0:	89 81       	ldd	r24, Y+1	; 0x01
}
    17c2:	26 96       	adiw	r28, 0x06	; 6
    17c4:	0f b6       	in	r0, 0x3f	; 63
    17c6:	f8 94       	cli
    17c8:	de bf       	out	0x3e, r29	; 62
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	cd bf       	out	0x3d, r28	; 61
    17ce:	cf 91       	pop	r28
    17d0:	df 91       	pop	r29
    17d2:	08 95       	ret

000017d4 <KPD_u8GetPressedKey>:
#include "KEYPAD_config.h"
#include "KEYPAD_private.h"
#include "KEYPAD_interface.h"


u8 KPD_u8GetPressedKey(void){
    17d4:	df 93       	push	r29
    17d6:	cf 93       	push	r28
    17d8:	00 d0       	rcall	.+0      	; 0x17da <KPD_u8GetPressedKey+0x6>
    17da:	00 d0       	rcall	.+0      	; 0x17dc <KPD_u8GetPressedKey+0x8>
    17dc:	0f 92       	push	r0
    17de:	cd b7       	in	r28, 0x3d	; 61
    17e0:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8PressedKey=KPD_NO_PRESSED_KEY;
    17e2:	8f ef       	ldi	r24, 0xFF	; 255
    17e4:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8ColIdx=0,Local_u8RowIdx=0,Local_u8PinState=0;
    17e6:	1a 82       	std	Y+2, r1	; 0x02
    17e8:	19 82       	std	Y+1, r1	; 0x01
    17ea:	1c 82       	std	Y+4, r1	; 0x04
	static u8 Local_u8KPDArr[ROW_NUM][COLUMN_NUM]=KPD_ARR_VAL;
	static u8 Local_u8KPDColumnArr[COLUMN_NUM]={KPD_COLUMN0_PIN,KPD_COLUMN1_PIN,KPD_COLUMN2_PIN,KPD_COLUMN3_PIN};
	static u8 Local_u8KPDRowArr[ROW_NUM]={KPD_ROW0_PIN,KPD_ROW1_PIN,KPD_ROW2_PIN,KPD_ROW3_PIN};

	for(Local_u8ColIdx=0;Local_u8ColIdx<COLUMN_NUM;Local_u8ColIdx++){
    17ec:	1a 82       	std	Y+2, r1	; 0x02
    17ee:	5e c0       	rjmp	.+188    	; 0x18ac <KPD_u8GetPressedKey+0xd8>
		//activate current column
		DIO_u8SetPinValue(KPD_PORT,Local_u8KPDColumnArr[Local_u8ColIdx],DIO_u8PIN_LOW);
    17f0:	8a 81       	ldd	r24, Y+2	; 0x02
    17f2:	88 2f       	mov	r24, r24
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	fc 01       	movw	r30, r24
    17f8:	ef 57       	subi	r30, 0x7F	; 127
    17fa:	fe 4f       	sbci	r31, 0xFE	; 254
    17fc:	90 81       	ld	r25, Z
    17fe:	80 e0       	ldi	r24, 0x00	; 0
    1800:	69 2f       	mov	r22, r25
    1802:	40 e0       	ldi	r20, 0x00	; 0
    1804:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
		for(Local_u8RowIdx=0;Local_u8RowIdx<ROW_NUM;Local_u8RowIdx++){
    1808:	19 82       	std	Y+1, r1	; 0x01
    180a:	3d c0       	rjmp	.+122    	; 0x1886 <KPD_u8GetPressedKey+0xb2>
			//read current row
			DIO_u8GetPinValue(KPD_PORT,Local_u8KPDRowArr[Local_u8RowIdx],&Local_u8PinState);
    180c:	89 81       	ldd	r24, Y+1	; 0x01
    180e:	88 2f       	mov	r24, r24
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	fc 01       	movw	r30, r24
    1814:	e3 58       	subi	r30, 0x83	; 131
    1816:	fe 4f       	sbci	r31, 0xFE	; 254
    1818:	90 81       	ld	r25, Z
    181a:	9e 01       	movw	r18, r28
    181c:	2c 5f       	subi	r18, 0xFC	; 252
    181e:	3f 4f       	sbci	r19, 0xFF	; 255
    1820:	80 e0       	ldi	r24, 0x00	; 0
    1822:	69 2f       	mov	r22, r25
    1824:	a9 01       	movw	r20, r18
    1826:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <DIO_u8GetPinValue>

			//check if pressed
			if(Local_u8PinState==DIO_u8PIN_LOW){
    182a:	8c 81       	ldd	r24, Y+4	; 0x04
    182c:	88 23       	and	r24, r24
    182e:	41 f5       	brne	.+80     	; 0x1880 <KPD_u8GetPressedKey+0xac>
				Local_u8PressedKey=Local_u8KPDArr[Local_u8RowIdx][Local_u8ColIdx];
    1830:	89 81       	ldd	r24, Y+1	; 0x01
    1832:	48 2f       	mov	r20, r24
    1834:	50 e0       	ldi	r21, 0x00	; 0
    1836:	8a 81       	ldd	r24, Y+2	; 0x02
    1838:	28 2f       	mov	r18, r24
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	ca 01       	movw	r24, r20
    183e:	88 0f       	add	r24, r24
    1840:	99 1f       	adc	r25, r25
    1842:	88 0f       	add	r24, r24
    1844:	99 1f       	adc	r25, r25
    1846:	82 0f       	add	r24, r18
    1848:	93 1f       	adc	r25, r19
    184a:	fc 01       	movw	r30, r24
    184c:	eb 57       	subi	r30, 0x7B	; 123
    184e:	fe 4f       	sbci	r31, 0xFE	; 254
    1850:	80 81       	ld	r24, Z
    1852:	8b 83       	std	Y+3, r24	; 0x03
    1854:	0f c0       	rjmp	.+30     	; 0x1874 <KPD_u8GetPressedKey+0xa0>
				while(Local_u8PinState==DIO_u8PIN_LOW){
					DIO_u8GetPinValue(KPD_PORT,Local_u8KPDRowArr[Local_u8RowIdx],&Local_u8PinState);
    1856:	89 81       	ldd	r24, Y+1	; 0x01
    1858:	88 2f       	mov	r24, r24
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	fc 01       	movw	r30, r24
    185e:	e3 58       	subi	r30, 0x83	; 131
    1860:	fe 4f       	sbci	r31, 0xFE	; 254
    1862:	90 81       	ld	r25, Z
    1864:	9e 01       	movw	r18, r28
    1866:	2c 5f       	subi	r18, 0xFC	; 252
    1868:	3f 4f       	sbci	r19, 0xFF	; 255
    186a:	80 e0       	ldi	r24, 0x00	; 0
    186c:	69 2f       	mov	r22, r25
    186e:	a9 01       	movw	r20, r18
    1870:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <DIO_u8GetPinValue>
			DIO_u8GetPinValue(KPD_PORT,Local_u8KPDRowArr[Local_u8RowIdx],&Local_u8PinState);

			//check if pressed
			if(Local_u8PinState==DIO_u8PIN_LOW){
				Local_u8PressedKey=Local_u8KPDArr[Local_u8RowIdx][Local_u8ColIdx];
				while(Local_u8PinState==DIO_u8PIN_LOW){
    1874:	8c 81       	ldd	r24, Y+4	; 0x04
    1876:	88 23       	and	r24, r24
    1878:	71 f3       	breq	.-36     	; 0x1856 <KPD_u8GetPressedKey+0x82>
					DIO_u8GetPinValue(KPD_PORT,Local_u8KPDRowArr[Local_u8RowIdx],&Local_u8PinState);
				}
				return Local_u8PressedKey;
    187a:	8b 81       	ldd	r24, Y+3	; 0x03
    187c:	8d 83       	std	Y+5, r24	; 0x05
    187e:	1c c0       	rjmp	.+56     	; 0x18b8 <KPD_u8GetPressedKey+0xe4>
	static u8 Local_u8KPDRowArr[ROW_NUM]={KPD_ROW0_PIN,KPD_ROW1_PIN,KPD_ROW2_PIN,KPD_ROW3_PIN};

	for(Local_u8ColIdx=0;Local_u8ColIdx<COLUMN_NUM;Local_u8ColIdx++){
		//activate current column
		DIO_u8SetPinValue(KPD_PORT,Local_u8KPDColumnArr[Local_u8ColIdx],DIO_u8PIN_LOW);
		for(Local_u8RowIdx=0;Local_u8RowIdx<ROW_NUM;Local_u8RowIdx++){
    1880:	89 81       	ldd	r24, Y+1	; 0x01
    1882:	8f 5f       	subi	r24, 0xFF	; 255
    1884:	89 83       	std	Y+1, r24	; 0x01
    1886:	89 81       	ldd	r24, Y+1	; 0x01
    1888:	84 30       	cpi	r24, 0x04	; 4
    188a:	08 f4       	brcc	.+2      	; 0x188e <KPD_u8GetPressedKey+0xba>
    188c:	bf cf       	rjmp	.-130    	; 0x180c <KPD_u8GetPressedKey+0x38>
				}
				return Local_u8PressedKey;
			}
		}
		//deactivate column
		DIO_u8SetPinValue(KPD_PORT,Local_u8KPDColumnArr[Local_u8ColIdx],DIO_u8PIN_HIGH);
    188e:	8a 81       	ldd	r24, Y+2	; 0x02
    1890:	88 2f       	mov	r24, r24
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	fc 01       	movw	r30, r24
    1896:	ef 57       	subi	r30, 0x7F	; 127
    1898:	fe 4f       	sbci	r31, 0xFE	; 254
    189a:	90 81       	ld	r25, Z
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	69 2f       	mov	r22, r25
    18a0:	41 e0       	ldi	r20, 0x01	; 1
    18a2:	0e 94 9b 09 	call	0x1336	; 0x1336 <DIO_u8SetPinValue>
	u8 Local_u8ColIdx=0,Local_u8RowIdx=0,Local_u8PinState=0;
	static u8 Local_u8KPDArr[ROW_NUM][COLUMN_NUM]=KPD_ARR_VAL;
	static u8 Local_u8KPDColumnArr[COLUMN_NUM]={KPD_COLUMN0_PIN,KPD_COLUMN1_PIN,KPD_COLUMN2_PIN,KPD_COLUMN3_PIN};
	static u8 Local_u8KPDRowArr[ROW_NUM]={KPD_ROW0_PIN,KPD_ROW1_PIN,KPD_ROW2_PIN,KPD_ROW3_PIN};

	for(Local_u8ColIdx=0;Local_u8ColIdx<COLUMN_NUM;Local_u8ColIdx++){
    18a6:	8a 81       	ldd	r24, Y+2	; 0x02
    18a8:	8f 5f       	subi	r24, 0xFF	; 255
    18aa:	8a 83       	std	Y+2, r24	; 0x02
    18ac:	8a 81       	ldd	r24, Y+2	; 0x02
    18ae:	84 30       	cpi	r24, 0x04	; 4
    18b0:	08 f4       	brcc	.+2      	; 0x18b4 <KPD_u8GetPressedKey+0xe0>
    18b2:	9e cf       	rjmp	.-196    	; 0x17f0 <KPD_u8GetPressedKey+0x1c>
		//deactivate column
		DIO_u8SetPinValue(KPD_PORT,Local_u8KPDColumnArr[Local_u8ColIdx],DIO_u8PIN_HIGH);
	}


	return Local_u8PressedKey;
    18b4:	8b 81       	ldd	r24, Y+3	; 0x03
    18b6:	8d 83       	std	Y+5, r24	; 0x05
    18b8:	8d 81       	ldd	r24, Y+5	; 0x05
}
    18ba:	0f 90       	pop	r0
    18bc:	0f 90       	pop	r0
    18be:	0f 90       	pop	r0
    18c0:	0f 90       	pop	r0
    18c2:	0f 90       	pop	r0
    18c4:	cf 91       	pop	r28
    18c6:	df 91       	pop	r29
    18c8:	08 95       	ret

000018ca <PORT_voidInit>:
#include "PORT_config.h"
#include "PORT_private.h"
#include "PORT_interface.h"
#include "PORT_register.h"

void PORT_voidInit(void){
    18ca:	df 93       	push	r29
    18cc:	cf 93       	push	r28
    18ce:	cd b7       	in	r28, 0x3d	; 61
    18d0:	de b7       	in	r29, 0x3e	; 62
	DDRA=PORTA_DIR;
    18d2:	ea e3       	ldi	r30, 0x3A	; 58
    18d4:	f0 e0       	ldi	r31, 0x00	; 0
    18d6:	8f e0       	ldi	r24, 0x0F	; 15
    18d8:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
    18da:	e7 e3       	ldi	r30, 0x37	; 55
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	87 e0       	ldi	r24, 0x07	; 7
    18e0:	80 83       	st	Z, r24
	DDRC=PORTC_DIR;
    18e2:	e4 e3       	ldi	r30, 0x34	; 52
    18e4:	f0 e0       	ldi	r31, 0x00	; 0
    18e6:	10 82       	st	Z, r1
	DDRD=PORTD_DIR;
    18e8:	e1 e3       	ldi	r30, 0x31	; 49
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	8f ef       	ldi	r24, 0xFF	; 255
    18ee:	80 83       	st	Z, r24

	PORTA=PORTA_INIT;
    18f0:	eb e3       	ldi	r30, 0x3B	; 59
    18f2:	f0 e0       	ldi	r31, 0x00	; 0
    18f4:	8f ef       	ldi	r24, 0xFF	; 255
    18f6:	80 83       	st	Z, r24
	PORTB=PORTB_INIT;
    18f8:	e8 e3       	ldi	r30, 0x38	; 56
    18fa:	f0 e0       	ldi	r31, 0x00	; 0
    18fc:	10 82       	st	Z, r1
	PORTC=PORTC_INIT;
    18fe:	e5 e3       	ldi	r30, 0x35	; 53
    1900:	f0 e0       	ldi	r31, 0x00	; 0
    1902:	10 82       	st	Z, r1
	PORTD=PORTD_INIT;
    1904:	e2 e3       	ldi	r30, 0x32	; 50
    1906:	f0 e0       	ldi	r31, 0x00	; 0
    1908:	10 82       	st	Z, r1
}
    190a:	cf 91       	pop	r28
    190c:	df 91       	pop	r29
    190e:	08 95       	ret

00001910 <main>:
#include "PORT_interface.h"
#include "CLCD_interface.h"
#include "KEYPAD_interface.h"
#include <util/delay.h>

void main(){
    1910:	df 93       	push	r29
    1912:	cf 93       	push	r28
    1914:	cd b7       	in	r28, 0x3d	; 61
    1916:	de b7       	in	r29, 0x3e	; 62
    1918:	cf 55       	subi	r28, 0x5F	; 95
    191a:	d0 40       	sbci	r29, 0x00	; 0
    191c:	0f b6       	in	r0, 0x3f	; 63
    191e:	f8 94       	cli
    1920:	de bf       	out	0x3e, r29	; 62
    1922:	0f be       	out	0x3f, r0	; 63
    1924:	cd bf       	out	0x3d, r28	; 61
	PORT_voidInit();
    1926:	0e 94 65 0c 	call	0x18ca	; 0x18ca <PORT_voidInit>
	CLCD_voidInit();
    192a:	0e 94 84 07 	call	0xf08	; 0xf08 <CLCD_voidInit>
	s8 Local_u8PressedVal=0,Local_u8Col=0,Local_u8Hour1=0,Local_u8Hour2=0,Local_u8Min1=0;
    192e:	fe 01       	movw	r30, r28
    1930:	ef 5b       	subi	r30, 0xBF	; 191
    1932:	ff 4f       	sbci	r31, 0xFF	; 255
    1934:	10 82       	st	Z, r1
    1936:	fe 01       	movw	r30, r28
    1938:	e0 5c       	subi	r30, 0xC0	; 192
    193a:	ff 4f       	sbci	r31, 0xFF	; 255
    193c:	10 82       	st	Z, r1
    193e:	1f ae       	std	Y+63, r1	; 0x3f
    1940:	1e ae       	std	Y+62, r1	; 0x3e
    1942:	1d ae       	std	Y+61, r1	; 0x3d
	s8 Local_u8Sec1=0,Local_u8Sec2=0,Local_u8Min2=0,Local_u8LastNum=0;
    1944:	1c ae       	std	Y+60, r1	; 0x3c
    1946:	1b ae       	std	Y+59, r1	; 0x3b
    1948:	1a ae       	std	Y+58, r1	; 0x3a
    194a:	19 ae       	std	Y+57, r1	; 0x39
	u8 Local_u8HamokshaUp[]={0b00001110,0b00010001,0b00001110,0b00010101
			,0b00001110,0b00000100,0b00001110,0b00010001};
    194c:	ce 01       	movw	r24, r28
    194e:	8e 5b       	subi	r24, 0xBE	; 190
    1950:	9f 4f       	sbci	r25, 0xFF	; 255
    1952:	68 96       	adiw	r28, 0x18	; 24
    1954:	9f af       	std	Y+63, r25	; 0x3f
    1956:	8e af       	std	Y+62, r24	; 0x3e
    1958:	68 97       	sbiw	r28, 0x18	; 24
    195a:	2d e9       	ldi	r18, 0x9D	; 157
    195c:	31 e0       	ldi	r19, 0x01	; 1
    195e:	6a 96       	adiw	r28, 0x1a	; 26
    1960:	3f af       	std	Y+63, r19	; 0x3f
    1962:	2e af       	std	Y+62, r18	; 0x3e
    1964:	6a 97       	sbiw	r28, 0x1a	; 26
    1966:	38 e0       	ldi	r19, 0x08	; 8
    1968:	6b 96       	adiw	r28, 0x1b	; 27
    196a:	3f af       	std	Y+63, r19	; 0x3f
    196c:	6b 97       	sbiw	r28, 0x1b	; 27
    196e:	6a 96       	adiw	r28, 0x1a	; 26
    1970:	ee ad       	ldd	r30, Y+62	; 0x3e
    1972:	ff ad       	ldd	r31, Y+63	; 0x3f
    1974:	6a 97       	sbiw	r28, 0x1a	; 26
    1976:	00 80       	ld	r0, Z
    1978:	6a 96       	adiw	r28, 0x1a	; 26
    197a:	2e ad       	ldd	r18, Y+62	; 0x3e
    197c:	3f ad       	ldd	r19, Y+63	; 0x3f
    197e:	6a 97       	sbiw	r28, 0x1a	; 26
    1980:	2f 5f       	subi	r18, 0xFF	; 255
    1982:	3f 4f       	sbci	r19, 0xFF	; 255
    1984:	6a 96       	adiw	r28, 0x1a	; 26
    1986:	3f af       	std	Y+63, r19	; 0x3f
    1988:	2e af       	std	Y+62, r18	; 0x3e
    198a:	6a 97       	sbiw	r28, 0x1a	; 26
    198c:	68 96       	adiw	r28, 0x18	; 24
    198e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1990:	ff ad       	ldd	r31, Y+63	; 0x3f
    1992:	68 97       	sbiw	r28, 0x18	; 24
    1994:	00 82       	st	Z, r0
    1996:	68 96       	adiw	r28, 0x18	; 24
    1998:	2e ad       	ldd	r18, Y+62	; 0x3e
    199a:	3f ad       	ldd	r19, Y+63	; 0x3f
    199c:	68 97       	sbiw	r28, 0x18	; 24
    199e:	2f 5f       	subi	r18, 0xFF	; 255
    19a0:	3f 4f       	sbci	r19, 0xFF	; 255
    19a2:	68 96       	adiw	r28, 0x18	; 24
    19a4:	3f af       	std	Y+63, r19	; 0x3f
    19a6:	2e af       	std	Y+62, r18	; 0x3e
    19a8:	68 97       	sbiw	r28, 0x18	; 24
    19aa:	6b 96       	adiw	r28, 0x1b	; 27
    19ac:	3f ad       	ldd	r19, Y+63	; 0x3f
    19ae:	6b 97       	sbiw	r28, 0x1b	; 27
    19b0:	31 50       	subi	r19, 0x01	; 1
    19b2:	6b 96       	adiw	r28, 0x1b	; 27
    19b4:	3f af       	std	Y+63, r19	; 0x3f
    19b6:	6b 97       	sbiw	r28, 0x1b	; 27
    19b8:	6b 96       	adiw	r28, 0x1b	; 27
    19ba:	8f ad       	ldd	r24, Y+63	; 0x3f
    19bc:	6b 97       	sbiw	r28, 0x1b	; 27
    19be:	88 23       	and	r24, r24
    19c0:	b1 f6       	brne	.-84     	; 0x196e <main+0x5e>
	u8 Local_u8HamokshaLow[]={0b00001110,0b00010001,0b00001110,0b00000100
				,0b00001110,0b00010101,0b00001110,0b00010001};
    19c2:	ce 01       	movw	r24, r28
    19c4:	86 5b       	subi	r24, 0xB6	; 182
    19c6:	9f 4f       	sbci	r25, 0xFF	; 255
    19c8:	6d 96       	adiw	r28, 0x1d	; 29
    19ca:	9f af       	std	Y+63, r25	; 0x3f
    19cc:	8e af       	std	Y+62, r24	; 0x3e
    19ce:	6d 97       	sbiw	r28, 0x1d	; 29
    19d0:	e5 e9       	ldi	r30, 0x95	; 149
    19d2:	f1 e0       	ldi	r31, 0x01	; 1
    19d4:	6f 96       	adiw	r28, 0x1f	; 31
    19d6:	ff af       	std	Y+63, r31	; 0x3f
    19d8:	ee af       	std	Y+62, r30	; 0x3e
    19da:	6f 97       	sbiw	r28, 0x1f	; 31
    19dc:	f8 e0       	ldi	r31, 0x08	; 8
    19de:	a0 96       	adiw	r28, 0x20	; 32
    19e0:	ff af       	std	Y+63, r31	; 0x3f
    19e2:	a0 97       	sbiw	r28, 0x20	; 32
    19e4:	6f 96       	adiw	r28, 0x1f	; 31
    19e6:	ee ad       	ldd	r30, Y+62	; 0x3e
    19e8:	ff ad       	ldd	r31, Y+63	; 0x3f
    19ea:	6f 97       	sbiw	r28, 0x1f	; 31
    19ec:	00 80       	ld	r0, Z
    19ee:	6f 96       	adiw	r28, 0x1f	; 31
    19f0:	2e ad       	ldd	r18, Y+62	; 0x3e
    19f2:	3f ad       	ldd	r19, Y+63	; 0x3f
    19f4:	6f 97       	sbiw	r28, 0x1f	; 31
    19f6:	2f 5f       	subi	r18, 0xFF	; 255
    19f8:	3f 4f       	sbci	r19, 0xFF	; 255
    19fa:	6f 96       	adiw	r28, 0x1f	; 31
    19fc:	3f af       	std	Y+63, r19	; 0x3f
    19fe:	2e af       	std	Y+62, r18	; 0x3e
    1a00:	6f 97       	sbiw	r28, 0x1f	; 31
    1a02:	6d 96       	adiw	r28, 0x1d	; 29
    1a04:	ee ad       	ldd	r30, Y+62	; 0x3e
    1a06:	ff ad       	ldd	r31, Y+63	; 0x3f
    1a08:	6d 97       	sbiw	r28, 0x1d	; 29
    1a0a:	00 82       	st	Z, r0
    1a0c:	6d 96       	adiw	r28, 0x1d	; 29
    1a0e:	2e ad       	ldd	r18, Y+62	; 0x3e
    1a10:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a12:	6d 97       	sbiw	r28, 0x1d	; 29
    1a14:	2f 5f       	subi	r18, 0xFF	; 255
    1a16:	3f 4f       	sbci	r19, 0xFF	; 255
    1a18:	6d 96       	adiw	r28, 0x1d	; 29
    1a1a:	3f af       	std	Y+63, r19	; 0x3f
    1a1c:	2e af       	std	Y+62, r18	; 0x3e
    1a1e:	6d 97       	sbiw	r28, 0x1d	; 29
    1a20:	a0 96       	adiw	r28, 0x20	; 32
    1a22:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a24:	a0 97       	sbiw	r28, 0x20	; 32
    1a26:	31 50       	subi	r19, 0x01	; 1
    1a28:	a0 96       	adiw	r28, 0x20	; 32
    1a2a:	3f af       	std	Y+63, r19	; 0x3f
    1a2c:	a0 97       	sbiw	r28, 0x20	; 32
    1a2e:	a0 96       	adiw	r28, 0x20	; 32
    1a30:	8f ad       	ldd	r24, Y+63	; 0x3f
    1a32:	a0 97       	sbiw	r28, 0x20	; 32
    1a34:	88 23       	and	r24, r24
    1a36:	b1 f6       	brne	.-84     	; 0x19e4 <main+0xd4>
	CLCD_voidSendString("00:00:00");
    1a38:	80 e6       	ldi	r24, 0x60	; 96
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	0e 94 12 08 	call	0x1024	; 0x1024 <CLCD_voidSendString>
	CLCD_voidGoToXY(0,0);
    1a40:	80 e0       	ldi	r24, 0x00	; 0
    1a42:	60 e0       	ldi	r22, 0x00	; 0
    1a44:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
	while(1){
		do{
			Local_u8PressedVal=KPD_u8GetPressedKey();
    1a48:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <KPD_u8GetPressedKey>
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	ef 5b       	subi	r30, 0xBF	; 191
    1a50:	ff 4f       	sbci	r31, 0xFF	; 255
    1a52:	80 83       	st	Z, r24
		}while(Local_u8PressedVal==0xff);
		switch(Local_u8PressedVal){
    1a54:	fe 01       	movw	r30, r28
    1a56:	ef 5b       	subi	r30, 0xBF	; 191
    1a58:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5a:	80 81       	ld	r24, Z
    1a5c:	e8 2f       	mov	r30, r24
    1a5e:	ff 27       	eor	r31, r31
    1a60:	e7 fd       	sbrc	r30, 7
    1a62:	f0 95       	com	r31
    1a64:	66 96       	adiw	r28, 0x16	; 22
    1a66:	ff af       	std	Y+63, r31	; 0x3f
    1a68:	ee af       	std	Y+62, r30	; 0x3e
    1a6a:	66 97       	sbiw	r28, 0x16	; 22
    1a6c:	66 96       	adiw	r28, 0x16	; 22
    1a6e:	2e ad       	ldd	r18, Y+62	; 0x3e
    1a70:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a72:	66 97       	sbiw	r28, 0x16	; 22
    1a74:	2c 34       	cpi	r18, 0x4C	; 76
    1a76:	31 05       	cpc	r19, r1
    1a78:	09 f4       	brne	.+2      	; 0x1a7c <main+0x16c>
    1a7a:	c4 c3       	rjmp	.+1928   	; 0x2204 <main+0x8f4>
    1a7c:	66 96       	adiw	r28, 0x16	; 22
    1a7e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1a80:	9f ad       	ldd	r25, Y+63	; 0x3f
    1a82:	66 97       	sbiw	r28, 0x16	; 22
    1a84:	8d 34       	cpi	r24, 0x4D	; 77
    1a86:	91 05       	cpc	r25, r1
    1a88:	bc f4       	brge	.+46     	; 0x1ab8 <main+0x1a8>
    1a8a:	66 96       	adiw	r28, 0x16	; 22
    1a8c:	ee ad       	ldd	r30, Y+62	; 0x3e
    1a8e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1a90:	66 97       	sbiw	r28, 0x16	; 22
    1a92:	ff 23       	and	r31, r31
    1a94:	cc f2       	brlt	.-78     	; 0x1a48 <main+0x138>
    1a96:	66 96       	adiw	r28, 0x16	; 22
    1a98:	2e ad       	ldd	r18, Y+62	; 0x3e
    1a9a:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a9c:	66 97       	sbiw	r28, 0x16	; 22
    1a9e:	2a 30       	cpi	r18, 0x0A	; 10
    1aa0:	31 05       	cpc	r19, r1
    1aa2:	0c f4       	brge	.+2      	; 0x1aa6 <main+0x196>
    1aa4:	f3 c3       	rjmp	.+2022   	; 0x228c <main+0x97c>
    1aa6:	66 96       	adiw	r28, 0x16	; 22
    1aa8:	8e ad       	ldd	r24, Y+62	; 0x3e
    1aaa:	9f ad       	ldd	r25, Y+63	; 0x3f
    1aac:	66 97       	sbiw	r28, 0x16	; 22
    1aae:	85 34       	cpi	r24, 0x45	; 69
    1ab0:	91 05       	cpc	r25, r1
    1ab2:	09 f4       	brne	.+2      	; 0x1ab6 <main+0x1a6>
    1ab4:	ce c2       	rjmp	.+1436   	; 0x2052 <main+0x742>
    1ab6:	c8 cf       	rjmp	.-112    	; 0x1a48 <main+0x138>
    1ab8:	66 96       	adiw	r28, 0x16	; 22
    1aba:	ee ad       	ldd	r30, Y+62	; 0x3e
    1abc:	ff ad       	ldd	r31, Y+63	; 0x3f
    1abe:	66 97       	sbiw	r28, 0x16	; 22
    1ac0:	e3 35       	cpi	r30, 0x53	; 83
    1ac2:	f1 05       	cpc	r31, r1
    1ac4:	09 f4       	brne	.+2      	; 0x1ac8 <main+0x1b8>
    1ac6:	2c c1       	rjmp	.+600    	; 0x1d20 <main+0x410>
    1ac8:	66 96       	adiw	r28, 0x16	; 22
    1aca:	2e ad       	ldd	r18, Y+62	; 0x3e
    1acc:	3f ad       	ldd	r19, Y+63	; 0x3f
    1ace:	66 97       	sbiw	r28, 0x16	; 22
    1ad0:	24 35       	cpi	r18, 0x54	; 84
    1ad2:	31 05       	cpc	r19, r1
    1ad4:	09 f4       	brne	.+2      	; 0x1ad8 <main+0x1c8>
    1ad6:	f5 c3       	rjmp	.+2026   	; 0x22c2 <main+0x9b2>
    1ad8:	66 96       	adiw	r28, 0x16	; 22
    1ada:	8e ad       	ldd	r24, Y+62	; 0x3e
    1adc:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ade:	66 97       	sbiw	r28, 0x16	; 22
    1ae0:	82 35       	cpi	r24, 0x52	; 82
    1ae2:	91 05       	cpc	r25, r1
    1ae4:	09 f4       	brne	.+2      	; 0x1ae8 <main+0x1d8>
    1ae6:	49 c3       	rjmp	.+1682   	; 0x217a <main+0x86a>
    1ae8:	af cf       	rjmp	.-162    	; 0x1a48 <main+0x138>
		case KPD_START:
			while(Local_u8Sec2>0 || Local_u8Sec1>0 || Local_u8Min1>0 || Local_u8Min2>0
					|| Local_u8Hour2>0 || Local_u8Hour1>0){

				Local_u8Sec2--;
    1aea:	8b ad       	ldd	r24, Y+59	; 0x3b
    1aec:	81 50       	subi	r24, 0x01	; 1
    1aee:	8b af       	std	Y+59, r24	; 0x3b
				if(Local_u8Sec2<0 && (Local_u8Sec1>0 || Local_u8Min2>0 || Local_u8Min1>0 || Local_u8Hour2>0 ||Local_u8Hour1>0)){
    1af0:	8b ad       	ldd	r24, Y+59	; 0x3b
    1af2:	88 23       	and	r24, r24
    1af4:	a4 f4       	brge	.+40     	; 0x1b1e <main+0x20e>
    1af6:	8c ad       	ldd	r24, Y+60	; 0x3c
    1af8:	18 16       	cp	r1, r24
    1afa:	64 f0       	brlt	.+24     	; 0x1b14 <main+0x204>
    1afc:	8a ad       	ldd	r24, Y+58	; 0x3a
    1afe:	18 16       	cp	r1, r24
    1b00:	4c f0       	brlt	.+18     	; 0x1b14 <main+0x204>
    1b02:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b04:	18 16       	cp	r1, r24
    1b06:	34 f0       	brlt	.+12     	; 0x1b14 <main+0x204>
    1b08:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b0a:	18 16       	cp	r1, r24
    1b0c:	1c f0       	brlt	.+6      	; 0x1b14 <main+0x204>
    1b0e:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b10:	18 16       	cp	r1, r24
    1b12:	2c f4       	brge	.+10     	; 0x1b1e <main+0x20e>
					Local_u8Sec2=9;
    1b14:	89 e0       	ldi	r24, 0x09	; 9
    1b16:	8b af       	std	Y+59, r24	; 0x3b
					Local_u8Sec1--;
    1b18:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b1a:	81 50       	subi	r24, 0x01	; 1
    1b1c:	8c af       	std	Y+60, r24	; 0x3c
				}
				if(Local_u8Sec1<0 && (Local_u8Min2>0|| Local_u8Min1>0 || Local_u8Hour2>0 ||Local_u8Hour1>0)){
    1b1e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b20:	88 23       	and	r24, r24
    1b22:	8c f4       	brge	.+34     	; 0x1b46 <main+0x236>
    1b24:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b26:	18 16       	cp	r1, r24
    1b28:	4c f0       	brlt	.+18     	; 0x1b3c <main+0x22c>
    1b2a:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b2c:	18 16       	cp	r1, r24
    1b2e:	34 f0       	brlt	.+12     	; 0x1b3c <main+0x22c>
    1b30:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b32:	18 16       	cp	r1, r24
    1b34:	1c f0       	brlt	.+6      	; 0x1b3c <main+0x22c>
    1b36:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b38:	18 16       	cp	r1, r24
    1b3a:	2c f4       	brge	.+10     	; 0x1b46 <main+0x236>
					Local_u8Sec1=5;
    1b3c:	85 e0       	ldi	r24, 0x05	; 5
    1b3e:	8c af       	std	Y+60, r24	; 0x3c
					Local_u8Min2--;
    1b40:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b42:	81 50       	subi	r24, 0x01	; 1
    1b44:	8a af       	std	Y+58, r24	; 0x3a
				}
				if(Local_u8Min2<0 && (Local_u8Min1>0|| Local_u8Hour2>0 ||Local_u8Hour1>0)){
    1b46:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b48:	88 23       	and	r24, r24
    1b4a:	74 f4       	brge	.+28     	; 0x1b68 <main+0x258>
    1b4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b4e:	18 16       	cp	r1, r24
    1b50:	34 f0       	brlt	.+12     	; 0x1b5e <main+0x24e>
    1b52:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b54:	18 16       	cp	r1, r24
    1b56:	1c f0       	brlt	.+6      	; 0x1b5e <main+0x24e>
    1b58:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b5a:	18 16       	cp	r1, r24
    1b5c:	2c f4       	brge	.+10     	; 0x1b68 <main+0x258>
					Local_u8Min2=9;
    1b5e:	89 e0       	ldi	r24, 0x09	; 9
    1b60:	8a af       	std	Y+58, r24	; 0x3a
					Local_u8Min1--;
    1b62:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b64:	81 50       	subi	r24, 0x01	; 1
    1b66:	8d af       	std	Y+61, r24	; 0x3d
				}
				if(Local_u8Min1<0 && (Local_u8Hour2>0||Local_u8Hour1>0)){
    1b68:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b6a:	88 23       	and	r24, r24
    1b6c:	5c f4       	brge	.+22     	; 0x1b84 <main+0x274>
    1b6e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b70:	18 16       	cp	r1, r24
    1b72:	1c f0       	brlt	.+6      	; 0x1b7a <main+0x26a>
    1b74:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b76:	18 16       	cp	r1, r24
    1b78:	2c f4       	brge	.+10     	; 0x1b84 <main+0x274>
					Local_u8Min1=5;
    1b7a:	85 e0       	ldi	r24, 0x05	; 5
    1b7c:	8d af       	std	Y+61, r24	; 0x3d
					Local_u8Hour2--;
    1b7e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b80:	81 50       	subi	r24, 0x01	; 1
    1b82:	8e af       	std	Y+62, r24	; 0x3e
				}
				if(Local_u8Hour2<0 && Local_u8Hour1>0){
    1b84:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b86:	88 23       	and	r24, r24
    1b88:	4c f4       	brge	.+18     	; 0x1b9c <main+0x28c>
    1b8a:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b8c:	18 16       	cp	r1, r24
    1b8e:	34 f4       	brge	.+12     	; 0x1b9c <main+0x28c>
					Local_u8Hour2=3;
    1b90:	83 e0       	ldi	r24, 0x03	; 3
    1b92:	8e af       	std	Y+62, r24	; 0x3e
					Local_u8Hour1--;
    1b94:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b96:	81 50       	subi	r24, 0x01	; 1
    1b98:	8f af       	std	Y+63, r24	; 0x3f
    1b9a:	04 c0       	rjmp	.+8      	; 0x1ba4 <main+0x294>
				}
				else if(Local_u8Hour2<0){
    1b9c:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b9e:	88 23       	and	r24, r24
    1ba0:	0c f4       	brge	.+2      	; 0x1ba4 <main+0x294>
					Local_u8Hour2=0;
    1ba2:	1e ae       	std	Y+62, r1	; 0x3e
				}
				if(Local_u8Hour1<0){
    1ba4:	8f ad       	ldd	r24, Y+63	; 0x3f
    1ba6:	88 23       	and	r24, r24
    1ba8:	0c f4       	brge	.+2      	; 0x1bac <main+0x29c>
					Local_u8Hour1=0;
    1baa:	1f ae       	std	Y+63, r1	; 0x3f
				}
				CLCD_voidGoToXY(0,0);
    1bac:	80 e0       	ldi	r24, 0x00	; 0
    1bae:	60 e0       	ldi	r22, 0x00	; 0
    1bb0:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
				CLCD_voidWriteNumber(Local_u8Hour1);
    1bb4:	8f ad       	ldd	r24, Y+63	; 0x3f
    1bb6:	99 27       	eor	r25, r25
    1bb8:	87 fd       	sbrc	r24, 7
    1bba:	90 95       	com	r25
    1bbc:	a9 2f       	mov	r26, r25
    1bbe:	b9 2f       	mov	r27, r25
    1bc0:	bc 01       	movw	r22, r24
    1bc2:	cd 01       	movw	r24, r26
    1bc4:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
				CLCD_voidWriteNumber(Local_u8Hour2);
    1bc8:	8e ad       	ldd	r24, Y+62	; 0x3e
    1bca:	99 27       	eor	r25, r25
    1bcc:	87 fd       	sbrc	r24, 7
    1bce:	90 95       	com	r25
    1bd0:	a9 2f       	mov	r26, r25
    1bd2:	b9 2f       	mov	r27, r25
    1bd4:	bc 01       	movw	r22, r24
    1bd6:	cd 01       	movw	r24, r26
    1bd8:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>

				CLCD_voidGoToXY(0,3);
    1bdc:	80 e0       	ldi	r24, 0x00	; 0
    1bde:	63 e0       	ldi	r22, 0x03	; 3
    1be0:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
				CLCD_voidWriteNumber(Local_u8Min1);
    1be4:	8d ad       	ldd	r24, Y+61	; 0x3d
    1be6:	99 27       	eor	r25, r25
    1be8:	87 fd       	sbrc	r24, 7
    1bea:	90 95       	com	r25
    1bec:	a9 2f       	mov	r26, r25
    1bee:	b9 2f       	mov	r27, r25
    1bf0:	bc 01       	movw	r22, r24
    1bf2:	cd 01       	movw	r24, r26
    1bf4:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
				CLCD_voidWriteNumber(Local_u8Min2);
    1bf8:	8a ad       	ldd	r24, Y+58	; 0x3a
    1bfa:	99 27       	eor	r25, r25
    1bfc:	87 fd       	sbrc	r24, 7
    1bfe:	90 95       	com	r25
    1c00:	a9 2f       	mov	r26, r25
    1c02:	b9 2f       	mov	r27, r25
    1c04:	bc 01       	movw	r22, r24
    1c06:	cd 01       	movw	r24, r26
    1c08:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>

				CLCD_voidGoToXY(0,6);
    1c0c:	80 e0       	ldi	r24, 0x00	; 0
    1c0e:	66 e0       	ldi	r22, 0x06	; 6
    1c10:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
				CLCD_voidWriteNumber(Local_u8Sec1);
    1c14:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c16:	99 27       	eor	r25, r25
    1c18:	87 fd       	sbrc	r24, 7
    1c1a:	90 95       	com	r25
    1c1c:	a9 2f       	mov	r26, r25
    1c1e:	b9 2f       	mov	r27, r25
    1c20:	bc 01       	movw	r22, r24
    1c22:	cd 01       	movw	r24, r26
    1c24:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
				CLCD_voidWriteNumber(Local_u8Sec2);
    1c28:	8b ad       	ldd	r24, Y+59	; 0x3b
    1c2a:	99 27       	eor	r25, r25
    1c2c:	87 fd       	sbrc	r24, 7
    1c2e:	90 95       	com	r25
    1c30:	a9 2f       	mov	r26, r25
    1c32:	b9 2f       	mov	r27, r25
    1c34:	bc 01       	movw	r22, r24
    1c36:	cd 01       	movw	r24, r26
    1c38:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	90 e0       	ldi	r25, 0x00	; 0
    1c40:	aa e7       	ldi	r26, 0x7A	; 122
    1c42:	b4 e4       	ldi	r27, 0x44	; 68
    1c44:	8d ab       	std	Y+53, r24	; 0x35
    1c46:	9e ab       	std	Y+54, r25	; 0x36
    1c48:	af ab       	std	Y+55, r26	; 0x37
    1c4a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c4c:	6d a9       	ldd	r22, Y+53	; 0x35
    1c4e:	7e a9       	ldd	r23, Y+54	; 0x36
    1c50:	8f a9       	ldd	r24, Y+55	; 0x37
    1c52:	98 ad       	ldd	r25, Y+56	; 0x38
    1c54:	20 e0       	ldi	r18, 0x00	; 0
    1c56:	30 e0       	ldi	r19, 0x00	; 0
    1c58:	4a ef       	ldi	r20, 0xFA	; 250
    1c5a:	54 e4       	ldi	r21, 0x44	; 68
    1c5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c60:	dc 01       	movw	r26, r24
    1c62:	cb 01       	movw	r24, r22
    1c64:	89 ab       	std	Y+49, r24	; 0x31
    1c66:	9a ab       	std	Y+50, r25	; 0x32
    1c68:	ab ab       	std	Y+51, r26	; 0x33
    1c6a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1c6c:	69 a9       	ldd	r22, Y+49	; 0x31
    1c6e:	7a a9       	ldd	r23, Y+50	; 0x32
    1c70:	8b a9       	ldd	r24, Y+51	; 0x33
    1c72:	9c a9       	ldd	r25, Y+52	; 0x34
    1c74:	20 e0       	ldi	r18, 0x00	; 0
    1c76:	30 e0       	ldi	r19, 0x00	; 0
    1c78:	40 e8       	ldi	r20, 0x80	; 128
    1c7a:	5f e3       	ldi	r21, 0x3F	; 63
    1c7c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c80:	88 23       	and	r24, r24
    1c82:	2c f4       	brge	.+10     	; 0x1c8e <main+0x37e>
		__ticks = 1;
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	98 ab       	std	Y+48, r25	; 0x30
    1c8a:	8f a7       	std	Y+47, r24	; 0x2f
    1c8c:	3f c0       	rjmp	.+126    	; 0x1d0c <main+0x3fc>
	else if (__tmp > 65535)
    1c8e:	69 a9       	ldd	r22, Y+49	; 0x31
    1c90:	7a a9       	ldd	r23, Y+50	; 0x32
    1c92:	8b a9       	ldd	r24, Y+51	; 0x33
    1c94:	9c a9       	ldd	r25, Y+52	; 0x34
    1c96:	20 e0       	ldi	r18, 0x00	; 0
    1c98:	3f ef       	ldi	r19, 0xFF	; 255
    1c9a:	4f e7       	ldi	r20, 0x7F	; 127
    1c9c:	57 e4       	ldi	r21, 0x47	; 71
    1c9e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ca2:	18 16       	cp	r1, r24
    1ca4:	4c f5       	brge	.+82     	; 0x1cf8 <main+0x3e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ca6:	6d a9       	ldd	r22, Y+53	; 0x35
    1ca8:	7e a9       	ldd	r23, Y+54	; 0x36
    1caa:	8f a9       	ldd	r24, Y+55	; 0x37
    1cac:	98 ad       	ldd	r25, Y+56	; 0x38
    1cae:	20 e0       	ldi	r18, 0x00	; 0
    1cb0:	30 e0       	ldi	r19, 0x00	; 0
    1cb2:	40 e2       	ldi	r20, 0x20	; 32
    1cb4:	51 e4       	ldi	r21, 0x41	; 65
    1cb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cba:	dc 01       	movw	r26, r24
    1cbc:	cb 01       	movw	r24, r22
    1cbe:	bc 01       	movw	r22, r24
    1cc0:	cd 01       	movw	r24, r26
    1cc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cc6:	dc 01       	movw	r26, r24
    1cc8:	cb 01       	movw	r24, r22
    1cca:	98 ab       	std	Y+48, r25	; 0x30
    1ccc:	8f a7       	std	Y+47, r24	; 0x2f
    1cce:	0f c0       	rjmp	.+30     	; 0x1cee <main+0x3de>
    1cd0:	88 ec       	ldi	r24, 0xC8	; 200
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	9e a7       	std	Y+46, r25	; 0x2e
    1cd6:	8d a7       	std	Y+45, r24	; 0x2d
    1cd8:	8d a5       	ldd	r24, Y+45	; 0x2d
    1cda:	9e a5       	ldd	r25, Y+46	; 0x2e
    1cdc:	01 97       	sbiw	r24, 0x01	; 1
    1cde:	f1 f7       	brne	.-4      	; 0x1cdc <main+0x3cc>
    1ce0:	9e a7       	std	Y+46, r25	; 0x2e
    1ce2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ce4:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ce6:	98 a9       	ldd	r25, Y+48	; 0x30
    1ce8:	01 97       	sbiw	r24, 0x01	; 1
    1cea:	98 ab       	std	Y+48, r25	; 0x30
    1cec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cee:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cf0:	98 a9       	ldd	r25, Y+48	; 0x30
    1cf2:	00 97       	sbiw	r24, 0x00	; 0
    1cf4:	69 f7       	brne	.-38     	; 0x1cd0 <main+0x3c0>
    1cf6:	14 c0       	rjmp	.+40     	; 0x1d20 <main+0x410>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cf8:	69 a9       	ldd	r22, Y+49	; 0x31
    1cfa:	7a a9       	ldd	r23, Y+50	; 0x32
    1cfc:	8b a9       	ldd	r24, Y+51	; 0x33
    1cfe:	9c a9       	ldd	r25, Y+52	; 0x34
    1d00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d04:	dc 01       	movw	r26, r24
    1d06:	cb 01       	movw	r24, r22
    1d08:	98 ab       	std	Y+48, r25	; 0x30
    1d0a:	8f a7       	std	Y+47, r24	; 0x2f
    1d0c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d0e:	98 a9       	ldd	r25, Y+48	; 0x30
    1d10:	9c a7       	std	Y+44, r25	; 0x2c
    1d12:	8b a7       	std	Y+43, r24	; 0x2b
    1d14:	8b a5       	ldd	r24, Y+43	; 0x2b
    1d16:	9c a5       	ldd	r25, Y+44	; 0x2c
    1d18:	01 97       	sbiw	r24, 0x01	; 1
    1d1a:	f1 f7       	brne	.-4      	; 0x1d18 <main+0x408>
    1d1c:	9c a7       	std	Y+44, r25	; 0x2c
    1d1e:	8b a7       	std	Y+43, r24	; 0x2b
		do{
			Local_u8PressedVal=KPD_u8GetPressedKey();
		}while(Local_u8PressedVal==0xff);
		switch(Local_u8PressedVal){
		case KPD_START:
			while(Local_u8Sec2>0 || Local_u8Sec1>0 || Local_u8Min1>0 || Local_u8Min2>0
    1d20:	8b ad       	ldd	r24, Y+59	; 0x3b
    1d22:	18 16       	cp	r1, r24
    1d24:	0c f4       	brge	.+2      	; 0x1d28 <main+0x418>
    1d26:	e1 ce       	rjmp	.-574    	; 0x1aea <main+0x1da>
    1d28:	8c ad       	ldd	r24, Y+60	; 0x3c
    1d2a:	18 16       	cp	r1, r24
    1d2c:	0c f4       	brge	.+2      	; 0x1d30 <main+0x420>
    1d2e:	dd ce       	rjmp	.-582    	; 0x1aea <main+0x1da>
    1d30:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d32:	18 16       	cp	r1, r24
    1d34:	0c f4       	brge	.+2      	; 0x1d38 <main+0x428>
    1d36:	d9 ce       	rjmp	.-590    	; 0x1aea <main+0x1da>
    1d38:	8a ad       	ldd	r24, Y+58	; 0x3a
    1d3a:	18 16       	cp	r1, r24
    1d3c:	0c f4       	brge	.+2      	; 0x1d40 <main+0x430>
    1d3e:	d5 ce       	rjmp	.-598    	; 0x1aea <main+0x1da>
    1d40:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d42:	18 16       	cp	r1, r24
    1d44:	0c f4       	brge	.+2      	; 0x1d48 <main+0x438>
    1d46:	d1 ce       	rjmp	.-606    	; 0x1aea <main+0x1da>
    1d48:	8f ad       	ldd	r24, Y+63	; 0x3f
    1d4a:	18 16       	cp	r1, r24
    1d4c:	0c f4       	brge	.+2      	; 0x1d50 <main+0x440>
    1d4e:	cd ce       	rjmp	.-614    	; 0x1aea <main+0x1da>
				CLCD_voidGoToXY(0,6);
				CLCD_voidWriteNumber(Local_u8Sec1);
				CLCD_voidWriteNumber(Local_u8Sec2);
				_delay_ms(1000);
			}
			CLCD_voidInit();
    1d50:	0e 94 84 07 	call	0xf08	; 0xf08 <CLCD_voidInit>
			CLCD_voidSendString("It's Time!!");
    1d54:	89 e6       	ldi	r24, 0x69	; 105
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	0e 94 12 08 	call	0x1024	; 0x1024 <CLCD_voidSendString>
			CLCD_voidWriteSpecialCharacter(Local_u8HamokshaUp,0,0,13);
    1d5c:	ce 01       	movw	r24, r28
    1d5e:	8e 5b       	subi	r24, 0xBE	; 190
    1d60:	9f 4f       	sbci	r25, 0xFF	; 255
    1d62:	60 e0       	ldi	r22, 0x00	; 0
    1d64:	40 e0       	ldi	r20, 0x00	; 0
    1d66:	2d e0       	ldi	r18, 0x0D	; 13
    1d68:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <CLCD_voidWriteSpecialCharacter>
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	aa e7       	ldi	r26, 0x7A	; 122
    1d72:	b4 e4       	ldi	r27, 0x44	; 68
    1d74:	8f a3       	std	Y+39, r24	; 0x27
    1d76:	98 a7       	std	Y+40, r25	; 0x28
    1d78:	a9 a7       	std	Y+41, r26	; 0x29
    1d7a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d7c:	6f a1       	ldd	r22, Y+39	; 0x27
    1d7e:	78 a5       	ldd	r23, Y+40	; 0x28
    1d80:	89 a5       	ldd	r24, Y+41	; 0x29
    1d82:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d84:	20 e0       	ldi	r18, 0x00	; 0
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	4a ef       	ldi	r20, 0xFA	; 250
    1d8a:	54 e4       	ldi	r21, 0x44	; 68
    1d8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d90:	dc 01       	movw	r26, r24
    1d92:	cb 01       	movw	r24, r22
    1d94:	8b a3       	std	Y+35, r24	; 0x23
    1d96:	9c a3       	std	Y+36, r25	; 0x24
    1d98:	ad a3       	std	Y+37, r26	; 0x25
    1d9a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1d9c:	6b a1       	ldd	r22, Y+35	; 0x23
    1d9e:	7c a1       	ldd	r23, Y+36	; 0x24
    1da0:	8d a1       	ldd	r24, Y+37	; 0x25
    1da2:	9e a1       	ldd	r25, Y+38	; 0x26
    1da4:	20 e0       	ldi	r18, 0x00	; 0
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	40 e8       	ldi	r20, 0x80	; 128
    1daa:	5f e3       	ldi	r21, 0x3F	; 63
    1dac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1db0:	88 23       	and	r24, r24
    1db2:	2c f4       	brge	.+10     	; 0x1dbe <main+0x4ae>
		__ticks = 1;
    1db4:	81 e0       	ldi	r24, 0x01	; 1
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	9a a3       	std	Y+34, r25	; 0x22
    1dba:	89 a3       	std	Y+33, r24	; 0x21
    1dbc:	3f c0       	rjmp	.+126    	; 0x1e3c <main+0x52c>
	else if (__tmp > 65535)
    1dbe:	6b a1       	ldd	r22, Y+35	; 0x23
    1dc0:	7c a1       	ldd	r23, Y+36	; 0x24
    1dc2:	8d a1       	ldd	r24, Y+37	; 0x25
    1dc4:	9e a1       	ldd	r25, Y+38	; 0x26
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	3f ef       	ldi	r19, 0xFF	; 255
    1dca:	4f e7       	ldi	r20, 0x7F	; 127
    1dcc:	57 e4       	ldi	r21, 0x47	; 71
    1dce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dd2:	18 16       	cp	r1, r24
    1dd4:	4c f5       	brge	.+82     	; 0x1e28 <main+0x518>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dd6:	6f a1       	ldd	r22, Y+39	; 0x27
    1dd8:	78 a5       	ldd	r23, Y+40	; 0x28
    1dda:	89 a5       	ldd	r24, Y+41	; 0x29
    1ddc:	9a a5       	ldd	r25, Y+42	; 0x2a
    1dde:	20 e0       	ldi	r18, 0x00	; 0
    1de0:	30 e0       	ldi	r19, 0x00	; 0
    1de2:	40 e2       	ldi	r20, 0x20	; 32
    1de4:	51 e4       	ldi	r21, 0x41	; 65
    1de6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dea:	dc 01       	movw	r26, r24
    1dec:	cb 01       	movw	r24, r22
    1dee:	bc 01       	movw	r22, r24
    1df0:	cd 01       	movw	r24, r26
    1df2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1df6:	dc 01       	movw	r26, r24
    1df8:	cb 01       	movw	r24, r22
    1dfa:	9a a3       	std	Y+34, r25	; 0x22
    1dfc:	89 a3       	std	Y+33, r24	; 0x21
    1dfe:	0f c0       	rjmp	.+30     	; 0x1e1e <main+0x50e>
    1e00:	88 ec       	ldi	r24, 0xC8	; 200
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	98 a3       	std	Y+32, r25	; 0x20
    1e06:	8f 8f       	std	Y+31, r24	; 0x1f
    1e08:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e0a:	98 a1       	ldd	r25, Y+32	; 0x20
    1e0c:	01 97       	sbiw	r24, 0x01	; 1
    1e0e:	f1 f7       	brne	.-4      	; 0x1e0c <main+0x4fc>
    1e10:	98 a3       	std	Y+32, r25	; 0x20
    1e12:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e14:	89 a1       	ldd	r24, Y+33	; 0x21
    1e16:	9a a1       	ldd	r25, Y+34	; 0x22
    1e18:	01 97       	sbiw	r24, 0x01	; 1
    1e1a:	9a a3       	std	Y+34, r25	; 0x22
    1e1c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e1e:	89 a1       	ldd	r24, Y+33	; 0x21
    1e20:	9a a1       	ldd	r25, Y+34	; 0x22
    1e22:	00 97       	sbiw	r24, 0x00	; 0
    1e24:	69 f7       	brne	.-38     	; 0x1e00 <main+0x4f0>
    1e26:	14 c0       	rjmp	.+40     	; 0x1e50 <main+0x540>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e28:	6b a1       	ldd	r22, Y+35	; 0x23
    1e2a:	7c a1       	ldd	r23, Y+36	; 0x24
    1e2c:	8d a1       	ldd	r24, Y+37	; 0x25
    1e2e:	9e a1       	ldd	r25, Y+38	; 0x26
    1e30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e34:	dc 01       	movw	r26, r24
    1e36:	cb 01       	movw	r24, r22
    1e38:	9a a3       	std	Y+34, r25	; 0x22
    1e3a:	89 a3       	std	Y+33, r24	; 0x21
    1e3c:	89 a1       	ldd	r24, Y+33	; 0x21
    1e3e:	9a a1       	ldd	r25, Y+34	; 0x22
    1e40:	9e 8f       	std	Y+30, r25	; 0x1e
    1e42:	8d 8f       	std	Y+29, r24	; 0x1d
    1e44:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e46:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e48:	01 97       	sbiw	r24, 0x01	; 1
    1e4a:	f1 f7       	brne	.-4      	; 0x1e48 <main+0x538>
    1e4c:	9e 8f       	std	Y+30, r25	; 0x1e
    1e4e:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(1000);
			CLCD_voidInit();
    1e50:	0e 94 84 07 	call	0xf08	; 0xf08 <CLCD_voidInit>
			CLCD_voidSendString("It's Time!!");
    1e54:	89 e6       	ldi	r24, 0x69	; 105
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	0e 94 12 08 	call	0x1024	; 0x1024 <CLCD_voidSendString>
			CLCD_voidWriteSpecialCharacter(Local_u8HamokshaLow,1,0,13);
    1e5c:	ce 01       	movw	r24, r28
    1e5e:	86 5b       	subi	r24, 0xB6	; 182
    1e60:	9f 4f       	sbci	r25, 0xFF	; 255
    1e62:	61 e0       	ldi	r22, 0x01	; 1
    1e64:	40 e0       	ldi	r20, 0x00	; 0
    1e66:	2d e0       	ldi	r18, 0x0D	; 13
    1e68:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <CLCD_voidWriteSpecialCharacter>
    1e6c:	80 e0       	ldi	r24, 0x00	; 0
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	aa e7       	ldi	r26, 0x7A	; 122
    1e72:	b4 e4       	ldi	r27, 0x44	; 68
    1e74:	89 8f       	std	Y+25, r24	; 0x19
    1e76:	9a 8f       	std	Y+26, r25	; 0x1a
    1e78:	ab 8f       	std	Y+27, r26	; 0x1b
    1e7a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e7c:	69 8d       	ldd	r22, Y+25	; 0x19
    1e7e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e80:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e82:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e84:	20 e0       	ldi	r18, 0x00	; 0
    1e86:	30 e0       	ldi	r19, 0x00	; 0
    1e88:	4a ef       	ldi	r20, 0xFA	; 250
    1e8a:	54 e4       	ldi	r21, 0x44	; 68
    1e8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e90:	dc 01       	movw	r26, r24
    1e92:	cb 01       	movw	r24, r22
    1e94:	8d 8b       	std	Y+21, r24	; 0x15
    1e96:	9e 8b       	std	Y+22, r25	; 0x16
    1e98:	af 8b       	std	Y+23, r26	; 0x17
    1e9a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e9c:	6d 89       	ldd	r22, Y+21	; 0x15
    1e9e:	7e 89       	ldd	r23, Y+22	; 0x16
    1ea0:	8f 89       	ldd	r24, Y+23	; 0x17
    1ea2:	98 8d       	ldd	r25, Y+24	; 0x18
    1ea4:	20 e0       	ldi	r18, 0x00	; 0
    1ea6:	30 e0       	ldi	r19, 0x00	; 0
    1ea8:	40 e8       	ldi	r20, 0x80	; 128
    1eaa:	5f e3       	ldi	r21, 0x3F	; 63
    1eac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eb0:	88 23       	and	r24, r24
    1eb2:	2c f4       	brge	.+10     	; 0x1ebe <main+0x5ae>
		__ticks = 1;
    1eb4:	81 e0       	ldi	r24, 0x01	; 1
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	9c 8b       	std	Y+20, r25	; 0x14
    1eba:	8b 8b       	std	Y+19, r24	; 0x13
    1ebc:	3f c0       	rjmp	.+126    	; 0x1f3c <main+0x62c>
	else if (__tmp > 65535)
    1ebe:	6d 89       	ldd	r22, Y+21	; 0x15
    1ec0:	7e 89       	ldd	r23, Y+22	; 0x16
    1ec2:	8f 89       	ldd	r24, Y+23	; 0x17
    1ec4:	98 8d       	ldd	r25, Y+24	; 0x18
    1ec6:	20 e0       	ldi	r18, 0x00	; 0
    1ec8:	3f ef       	ldi	r19, 0xFF	; 255
    1eca:	4f e7       	ldi	r20, 0x7F	; 127
    1ecc:	57 e4       	ldi	r21, 0x47	; 71
    1ece:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ed2:	18 16       	cp	r1, r24
    1ed4:	4c f5       	brge	.+82     	; 0x1f28 <main+0x618>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ed6:	69 8d       	ldd	r22, Y+25	; 0x19
    1ed8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1eda:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1edc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ede:	20 e0       	ldi	r18, 0x00	; 0
    1ee0:	30 e0       	ldi	r19, 0x00	; 0
    1ee2:	40 e2       	ldi	r20, 0x20	; 32
    1ee4:	51 e4       	ldi	r21, 0x41	; 65
    1ee6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eea:	dc 01       	movw	r26, r24
    1eec:	cb 01       	movw	r24, r22
    1eee:	bc 01       	movw	r22, r24
    1ef0:	cd 01       	movw	r24, r26
    1ef2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ef6:	dc 01       	movw	r26, r24
    1ef8:	cb 01       	movw	r24, r22
    1efa:	9c 8b       	std	Y+20, r25	; 0x14
    1efc:	8b 8b       	std	Y+19, r24	; 0x13
    1efe:	0f c0       	rjmp	.+30     	; 0x1f1e <main+0x60e>
    1f00:	88 ec       	ldi	r24, 0xC8	; 200
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	9a 8b       	std	Y+18, r25	; 0x12
    1f06:	89 8b       	std	Y+17, r24	; 0x11
    1f08:	89 89       	ldd	r24, Y+17	; 0x11
    1f0a:	9a 89       	ldd	r25, Y+18	; 0x12
    1f0c:	01 97       	sbiw	r24, 0x01	; 1
    1f0e:	f1 f7       	brne	.-4      	; 0x1f0c <main+0x5fc>
    1f10:	9a 8b       	std	Y+18, r25	; 0x12
    1f12:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f14:	8b 89       	ldd	r24, Y+19	; 0x13
    1f16:	9c 89       	ldd	r25, Y+20	; 0x14
    1f18:	01 97       	sbiw	r24, 0x01	; 1
    1f1a:	9c 8b       	std	Y+20, r25	; 0x14
    1f1c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f1e:	8b 89       	ldd	r24, Y+19	; 0x13
    1f20:	9c 89       	ldd	r25, Y+20	; 0x14
    1f22:	00 97       	sbiw	r24, 0x00	; 0
    1f24:	69 f7       	brne	.-38     	; 0x1f00 <main+0x5f0>
    1f26:	14 c0       	rjmp	.+40     	; 0x1f50 <main+0x640>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f28:	6d 89       	ldd	r22, Y+21	; 0x15
    1f2a:	7e 89       	ldd	r23, Y+22	; 0x16
    1f2c:	8f 89       	ldd	r24, Y+23	; 0x17
    1f2e:	98 8d       	ldd	r25, Y+24	; 0x18
    1f30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f34:	dc 01       	movw	r26, r24
    1f36:	cb 01       	movw	r24, r22
    1f38:	9c 8b       	std	Y+20, r25	; 0x14
    1f3a:	8b 8b       	std	Y+19, r24	; 0x13
    1f3c:	8b 89       	ldd	r24, Y+19	; 0x13
    1f3e:	9c 89       	ldd	r25, Y+20	; 0x14
    1f40:	98 8b       	std	Y+16, r25	; 0x10
    1f42:	8f 87       	std	Y+15, r24	; 0x0f
    1f44:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f46:	98 89       	ldd	r25, Y+16	; 0x10
    1f48:	01 97       	sbiw	r24, 0x01	; 1
    1f4a:	f1 f7       	brne	.-4      	; 0x1f48 <main+0x638>
    1f4c:	98 8b       	std	Y+16, r25	; 0x10
    1f4e:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(1000);
			CLCD_voidInit();
    1f50:	0e 94 84 07 	call	0xf08	; 0xf08 <CLCD_voidInit>
			CLCD_voidSendString("It's Time!!");
    1f54:	89 e6       	ldi	r24, 0x69	; 105
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	0e 94 12 08 	call	0x1024	; 0x1024 <CLCD_voidSendString>
			CLCD_voidWriteSpecialCharacter(Local_u8HamokshaUp,0,0,13);
    1f5c:	ce 01       	movw	r24, r28
    1f5e:	8e 5b       	subi	r24, 0xBE	; 190
    1f60:	9f 4f       	sbci	r25, 0xFF	; 255
    1f62:	60 e0       	ldi	r22, 0x00	; 0
    1f64:	40 e0       	ldi	r20, 0x00	; 0
    1f66:	2d e0       	ldi	r18, 0x0D	; 13
    1f68:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <CLCD_voidWriteSpecialCharacter>
    1f6c:	80 e0       	ldi	r24, 0x00	; 0
    1f6e:	90 e0       	ldi	r25, 0x00	; 0
    1f70:	aa e7       	ldi	r26, 0x7A	; 122
    1f72:	b4 e4       	ldi	r27, 0x44	; 68
    1f74:	8b 87       	std	Y+11, r24	; 0x0b
    1f76:	9c 87       	std	Y+12, r25	; 0x0c
    1f78:	ad 87       	std	Y+13, r26	; 0x0d
    1f7a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f7c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f7e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f80:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f82:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f84:	20 e0       	ldi	r18, 0x00	; 0
    1f86:	30 e0       	ldi	r19, 0x00	; 0
    1f88:	4a ef       	ldi	r20, 0xFA	; 250
    1f8a:	54 e4       	ldi	r21, 0x44	; 68
    1f8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f90:	dc 01       	movw	r26, r24
    1f92:	cb 01       	movw	r24, r22
    1f94:	8f 83       	std	Y+7, r24	; 0x07
    1f96:	98 87       	std	Y+8, r25	; 0x08
    1f98:	a9 87       	std	Y+9, r26	; 0x09
    1f9a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f9c:	6f 81       	ldd	r22, Y+7	; 0x07
    1f9e:	78 85       	ldd	r23, Y+8	; 0x08
    1fa0:	89 85       	ldd	r24, Y+9	; 0x09
    1fa2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fa4:	20 e0       	ldi	r18, 0x00	; 0
    1fa6:	30 e0       	ldi	r19, 0x00	; 0
    1fa8:	40 e8       	ldi	r20, 0x80	; 128
    1faa:	5f e3       	ldi	r21, 0x3F	; 63
    1fac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fb0:	88 23       	and	r24, r24
    1fb2:	2c f4       	brge	.+10     	; 0x1fbe <main+0x6ae>
		__ticks = 1;
    1fb4:	81 e0       	ldi	r24, 0x01	; 1
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	9e 83       	std	Y+6, r25	; 0x06
    1fba:	8d 83       	std	Y+5, r24	; 0x05
    1fbc:	3f c0       	rjmp	.+126    	; 0x203c <main+0x72c>
	else if (__tmp > 65535)
    1fbe:	6f 81       	ldd	r22, Y+7	; 0x07
    1fc0:	78 85       	ldd	r23, Y+8	; 0x08
    1fc2:	89 85       	ldd	r24, Y+9	; 0x09
    1fc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	3f ef       	ldi	r19, 0xFF	; 255
    1fca:	4f e7       	ldi	r20, 0x7F	; 127
    1fcc:	57 e4       	ldi	r21, 0x47	; 71
    1fce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fd2:	18 16       	cp	r1, r24
    1fd4:	4c f5       	brge	.+82     	; 0x2028 <main+0x718>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fd6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fd8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fda:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fdc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fde:	20 e0       	ldi	r18, 0x00	; 0
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	40 e2       	ldi	r20, 0x20	; 32
    1fe4:	51 e4       	ldi	r21, 0x41	; 65
    1fe6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fea:	dc 01       	movw	r26, r24
    1fec:	cb 01       	movw	r24, r22
    1fee:	bc 01       	movw	r22, r24
    1ff0:	cd 01       	movw	r24, r26
    1ff2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ff6:	dc 01       	movw	r26, r24
    1ff8:	cb 01       	movw	r24, r22
    1ffa:	9e 83       	std	Y+6, r25	; 0x06
    1ffc:	8d 83       	std	Y+5, r24	; 0x05
    1ffe:	0f c0       	rjmp	.+30     	; 0x201e <main+0x70e>
    2000:	88 ec       	ldi	r24, 0xC8	; 200
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	9c 83       	std	Y+4, r25	; 0x04
    2006:	8b 83       	std	Y+3, r24	; 0x03
    2008:	8b 81       	ldd	r24, Y+3	; 0x03
    200a:	9c 81       	ldd	r25, Y+4	; 0x04
    200c:	01 97       	sbiw	r24, 0x01	; 1
    200e:	f1 f7       	brne	.-4      	; 0x200c <main+0x6fc>
    2010:	9c 83       	std	Y+4, r25	; 0x04
    2012:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2014:	8d 81       	ldd	r24, Y+5	; 0x05
    2016:	9e 81       	ldd	r25, Y+6	; 0x06
    2018:	01 97       	sbiw	r24, 0x01	; 1
    201a:	9e 83       	std	Y+6, r25	; 0x06
    201c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    201e:	8d 81       	ldd	r24, Y+5	; 0x05
    2020:	9e 81       	ldd	r25, Y+6	; 0x06
    2022:	00 97       	sbiw	r24, 0x00	; 0
    2024:	69 f7       	brne	.-38     	; 0x2000 <main+0x6f0>
    2026:	10 cd       	rjmp	.-1504   	; 0x1a48 <main+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2028:	6f 81       	ldd	r22, Y+7	; 0x07
    202a:	78 85       	ldd	r23, Y+8	; 0x08
    202c:	89 85       	ldd	r24, Y+9	; 0x09
    202e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2030:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2034:	dc 01       	movw	r26, r24
    2036:	cb 01       	movw	r24, r22
    2038:	9e 83       	std	Y+6, r25	; 0x06
    203a:	8d 83       	std	Y+5, r24	; 0x05
    203c:	8d 81       	ldd	r24, Y+5	; 0x05
    203e:	9e 81       	ldd	r25, Y+6	; 0x06
    2040:	9a 83       	std	Y+2, r25	; 0x02
    2042:	89 83       	std	Y+1, r24	; 0x01
    2044:	89 81       	ldd	r24, Y+1	; 0x01
    2046:	9a 81       	ldd	r25, Y+2	; 0x02
    2048:	01 97       	sbiw	r24, 0x01	; 1
    204a:	f1 f7       	brne	.-4      	; 0x2048 <main+0x738>
    204c:	9a 83       	std	Y+2, r25	; 0x02
    204e:	89 83       	std	Y+1, r24	; 0x01
    2050:	fb cc       	rjmp	.-1546   	; 0x1a48 <main+0x138>
			_delay_ms(1000);
			break;

		case KPD_ENTER:
			switch(Local_u8Col){
    2052:	fe 01       	movw	r30, r28
    2054:	e0 5c       	subi	r30, 0xC0	; 192
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	80 81       	ld	r24, Z
    205a:	e8 2f       	mov	r30, r24
    205c:	ff 27       	eor	r31, r31
    205e:	e7 fd       	sbrc	r30, 7
    2060:	f0 95       	com	r31
    2062:	64 96       	adiw	r28, 0x14	; 20
    2064:	ff af       	std	Y+63, r31	; 0x3f
    2066:	ee af       	std	Y+62, r30	; 0x3e
    2068:	64 97       	sbiw	r28, 0x14	; 20
    206a:	64 96       	adiw	r28, 0x14	; 20
    206c:	2e ad       	ldd	r18, Y+62	; 0x3e
    206e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2070:	64 97       	sbiw	r28, 0x14	; 20
    2072:	23 30       	cpi	r18, 0x03	; 3
    2074:	31 05       	cpc	r19, r1
    2076:	89 f1       	breq	.+98     	; 0x20da <main+0x7ca>
    2078:	64 96       	adiw	r28, 0x14	; 20
    207a:	8e ad       	ldd	r24, Y+62	; 0x3e
    207c:	9f ad       	ldd	r25, Y+63	; 0x3f
    207e:	64 97       	sbiw	r28, 0x14	; 20
    2080:	84 30       	cpi	r24, 0x04	; 4
    2082:	91 05       	cpc	r25, r1
    2084:	74 f4       	brge	.+28     	; 0x20a2 <main+0x792>
    2086:	64 96       	adiw	r28, 0x14	; 20
    2088:	ee ad       	ldd	r30, Y+62	; 0x3e
    208a:	ff ad       	ldd	r31, Y+63	; 0x3f
    208c:	64 97       	sbiw	r28, 0x14	; 20
    208e:	30 97       	sbiw	r30, 0x00	; 0
    2090:	f1 f0       	breq	.+60     	; 0x20ce <main+0x7be>
    2092:	64 96       	adiw	r28, 0x14	; 20
    2094:	2e ad       	ldd	r18, Y+62	; 0x3e
    2096:	3f ad       	ldd	r19, Y+63	; 0x3f
    2098:	64 97       	sbiw	r28, 0x14	; 20
    209a:	21 30       	cpi	r18, 0x01	; 1
    209c:	31 05       	cpc	r19, r1
    209e:	d1 f0       	breq	.+52     	; 0x20d4 <main+0x7c4>
    20a0:	27 c0       	rjmp	.+78     	; 0x20f0 <main+0x7e0>
    20a2:	64 96       	adiw	r28, 0x14	; 20
    20a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    20a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    20a8:	64 97       	sbiw	r28, 0x14	; 20
    20aa:	86 30       	cpi	r24, 0x06	; 6
    20ac:	91 05       	cpc	r25, r1
    20ae:	d9 f0       	breq	.+54     	; 0x20e6 <main+0x7d6>
    20b0:	64 96       	adiw	r28, 0x14	; 20
    20b2:	ee ad       	ldd	r30, Y+62	; 0x3e
    20b4:	ff ad       	ldd	r31, Y+63	; 0x3f
    20b6:	64 97       	sbiw	r28, 0x14	; 20
    20b8:	e7 30       	cpi	r30, 0x07	; 7
    20ba:	f1 05       	cpc	r31, r1
    20bc:	b9 f0       	breq	.+46     	; 0x20ec <main+0x7dc>
    20be:	64 96       	adiw	r28, 0x14	; 20
    20c0:	2e ad       	ldd	r18, Y+62	; 0x3e
    20c2:	3f ad       	ldd	r19, Y+63	; 0x3f
    20c4:	64 97       	sbiw	r28, 0x14	; 20
    20c6:	24 30       	cpi	r18, 0x04	; 4
    20c8:	31 05       	cpc	r19, r1
    20ca:	51 f0       	breq	.+20     	; 0x20e0 <main+0x7d0>
    20cc:	11 c0       	rjmp	.+34     	; 0x20f0 <main+0x7e0>
			case 0:
				Local_u8Hour1=Local_u8LastNum;
    20ce:	89 ad       	ldd	r24, Y+57	; 0x39
    20d0:	8f af       	std	Y+63, r24	; 0x3f
    20d2:	0e c0       	rjmp	.+28     	; 0x20f0 <main+0x7e0>
				break;
			case 1:
				Local_u8Hour2=Local_u8LastNum;
    20d4:	89 ad       	ldd	r24, Y+57	; 0x39
    20d6:	8e af       	std	Y+62, r24	; 0x3e
    20d8:	0b c0       	rjmp	.+22     	; 0x20f0 <main+0x7e0>
				break;

			case 3:
				Local_u8Min1=Local_u8LastNum;
    20da:	89 ad       	ldd	r24, Y+57	; 0x39
    20dc:	8d af       	std	Y+61, r24	; 0x3d
    20de:	08 c0       	rjmp	.+16     	; 0x20f0 <main+0x7e0>
				break;
			case 4:
				Local_u8Min2=Local_u8LastNum;
    20e0:	89 ad       	ldd	r24, Y+57	; 0x39
    20e2:	8a af       	std	Y+58, r24	; 0x3a
    20e4:	05 c0       	rjmp	.+10     	; 0x20f0 <main+0x7e0>
				break;

			case 6:
				Local_u8Sec1=Local_u8LastNum;
    20e6:	89 ad       	ldd	r24, Y+57	; 0x39
    20e8:	8c af       	std	Y+60, r24	; 0x3c
    20ea:	02 c0       	rjmp	.+4      	; 0x20f0 <main+0x7e0>
				break;
			case 7:
				Local_u8Sec2=Local_u8LastNum;
    20ec:	89 ad       	ldd	r24, Y+57	; 0x39
    20ee:	8b af       	std	Y+59, r24	; 0x3b
				break;
			}
			if(Local_u8Col==0 || Local_u8Col==3 ||Local_u8Col==6){
    20f0:	fe 01       	movw	r30, r28
    20f2:	e0 5c       	subi	r30, 0xC0	; 192
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	80 81       	ld	r24, Z
    20f8:	88 23       	and	r24, r24
    20fa:	61 f0       	breq	.+24     	; 0x2114 <main+0x804>
    20fc:	fe 01       	movw	r30, r28
    20fe:	e0 5c       	subi	r30, 0xC0	; 192
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	80 81       	ld	r24, Z
    2104:	83 30       	cpi	r24, 0x03	; 3
    2106:	31 f0       	breq	.+12     	; 0x2114 <main+0x804>
    2108:	fe 01       	movw	r30, r28
    210a:	e0 5c       	subi	r30, 0xC0	; 192
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	80 81       	ld	r24, Z
    2110:	86 30       	cpi	r24, 0x06	; 6
    2112:	51 f4       	brne	.+20     	; 0x2128 <main+0x818>
				Local_u8Col++;
    2114:	fe 01       	movw	r30, r28
    2116:	e0 5c       	subi	r30, 0xC0	; 192
    2118:	ff 4f       	sbci	r31, 0xFF	; 255
    211a:	80 81       	ld	r24, Z
    211c:	8f 5f       	subi	r24, 0xFF	; 255
    211e:	fe 01       	movw	r30, r28
    2120:	e0 5c       	subi	r30, 0xC0	; 192
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	80 83       	st	Z, r24
    2126:	15 c0       	rjmp	.+42     	; 0x2152 <main+0x842>
			}
			else if(Local_u8Col==1 || Local_u8Col==4){
    2128:	fe 01       	movw	r30, r28
    212a:	e0 5c       	subi	r30, 0xC0	; 192
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	80 81       	ld	r24, Z
    2130:	81 30       	cpi	r24, 0x01	; 1
    2132:	31 f0       	breq	.+12     	; 0x2140 <main+0x830>
    2134:	fe 01       	movw	r30, r28
    2136:	e0 5c       	subi	r30, 0xC0	; 192
    2138:	ff 4f       	sbci	r31, 0xFF	; 255
    213a:	80 81       	ld	r24, Z
    213c:	84 30       	cpi	r24, 0x04	; 4
    213e:	49 f4       	brne	.+18     	; 0x2152 <main+0x842>
				Local_u8Col+=2;
    2140:	fe 01       	movw	r30, r28
    2142:	e0 5c       	subi	r30, 0xC0	; 192
    2144:	ff 4f       	sbci	r31, 0xFF	; 255
    2146:	80 81       	ld	r24, Z
    2148:	8e 5f       	subi	r24, 0xFE	; 254
    214a:	fe 01       	movw	r30, r28
    214c:	e0 5c       	subi	r30, 0xC0	; 192
    214e:	ff 4f       	sbci	r31, 0xFF	; 255
    2150:	80 83       	st	Z, r24
			}
			if(Local_u8Col>=7){
    2152:	fe 01       	movw	r30, r28
    2154:	e0 5c       	subi	r30, 0xC0	; 192
    2156:	ff 4f       	sbci	r31, 0xFF	; 255
    2158:	80 81       	ld	r24, Z
    215a:	87 30       	cpi	r24, 0x07	; 7
    215c:	2c f0       	brlt	.+10     	; 0x2168 <main+0x858>
				Local_u8Col=7;
    215e:	87 e0       	ldi	r24, 0x07	; 7
    2160:	fe 01       	movw	r30, r28
    2162:	e0 5c       	subi	r30, 0xC0	; 192
    2164:	ff 4f       	sbci	r31, 0xFF	; 255
    2166:	80 83       	st	Z, r24
			}
			CLCD_voidGoToXY(0,Local_u8Col);
    2168:	fe 01       	movw	r30, r28
    216a:	e0 5c       	subi	r30, 0xC0	; 192
    216c:	ff 4f       	sbci	r31, 0xFF	; 255
    216e:	90 81       	ld	r25, Z
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	69 2f       	mov	r22, r25
    2174:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
    2178:	67 cc       	rjmp	.-1842   	; 0x1a48 <main+0x138>
			break;

			case KPD_RIGHT:
				if(Local_u8Col==0 || Local_u8Col==3 ||Local_u8Col==6){
    217a:	fe 01       	movw	r30, r28
    217c:	e0 5c       	subi	r30, 0xC0	; 192
    217e:	ff 4f       	sbci	r31, 0xFF	; 255
    2180:	80 81       	ld	r24, Z
    2182:	88 23       	and	r24, r24
    2184:	61 f0       	breq	.+24     	; 0x219e <main+0x88e>
    2186:	fe 01       	movw	r30, r28
    2188:	e0 5c       	subi	r30, 0xC0	; 192
    218a:	ff 4f       	sbci	r31, 0xFF	; 255
    218c:	80 81       	ld	r24, Z
    218e:	83 30       	cpi	r24, 0x03	; 3
    2190:	31 f0       	breq	.+12     	; 0x219e <main+0x88e>
    2192:	fe 01       	movw	r30, r28
    2194:	e0 5c       	subi	r30, 0xC0	; 192
    2196:	ff 4f       	sbci	r31, 0xFF	; 255
    2198:	80 81       	ld	r24, Z
    219a:	86 30       	cpi	r24, 0x06	; 6
    219c:	51 f4       	brne	.+20     	; 0x21b2 <main+0x8a2>
					Local_u8Col++;
    219e:	fe 01       	movw	r30, r28
    21a0:	e0 5c       	subi	r30, 0xC0	; 192
    21a2:	ff 4f       	sbci	r31, 0xFF	; 255
    21a4:	80 81       	ld	r24, Z
    21a6:	8f 5f       	subi	r24, 0xFF	; 255
    21a8:	fe 01       	movw	r30, r28
    21aa:	e0 5c       	subi	r30, 0xC0	; 192
    21ac:	ff 4f       	sbci	r31, 0xFF	; 255
    21ae:	80 83       	st	Z, r24
    21b0:	15 c0       	rjmp	.+42     	; 0x21dc <main+0x8cc>
				}
				else if(Local_u8Col==1 || Local_u8Col==4){
    21b2:	fe 01       	movw	r30, r28
    21b4:	e0 5c       	subi	r30, 0xC0	; 192
    21b6:	ff 4f       	sbci	r31, 0xFF	; 255
    21b8:	80 81       	ld	r24, Z
    21ba:	81 30       	cpi	r24, 0x01	; 1
    21bc:	31 f0       	breq	.+12     	; 0x21ca <main+0x8ba>
    21be:	fe 01       	movw	r30, r28
    21c0:	e0 5c       	subi	r30, 0xC0	; 192
    21c2:	ff 4f       	sbci	r31, 0xFF	; 255
    21c4:	80 81       	ld	r24, Z
    21c6:	84 30       	cpi	r24, 0x04	; 4
    21c8:	49 f4       	brne	.+18     	; 0x21dc <main+0x8cc>
					Local_u8Col+=2;
    21ca:	fe 01       	movw	r30, r28
    21cc:	e0 5c       	subi	r30, 0xC0	; 192
    21ce:	ff 4f       	sbci	r31, 0xFF	; 255
    21d0:	80 81       	ld	r24, Z
    21d2:	8e 5f       	subi	r24, 0xFE	; 254
    21d4:	fe 01       	movw	r30, r28
    21d6:	e0 5c       	subi	r30, 0xC0	; 192
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	80 83       	st	Z, r24
				}
				if(Local_u8Col>=7){
    21dc:	fe 01       	movw	r30, r28
    21de:	e0 5c       	subi	r30, 0xC0	; 192
    21e0:	ff 4f       	sbci	r31, 0xFF	; 255
    21e2:	80 81       	ld	r24, Z
    21e4:	87 30       	cpi	r24, 0x07	; 7
    21e6:	2c f0       	brlt	.+10     	; 0x21f2 <main+0x8e2>
					Local_u8Col=7;
    21e8:	87 e0       	ldi	r24, 0x07	; 7
    21ea:	fe 01       	movw	r30, r28
    21ec:	e0 5c       	subi	r30, 0xC0	; 192
    21ee:	ff 4f       	sbci	r31, 0xFF	; 255
    21f0:	80 83       	st	Z, r24
				}
				CLCD_voidGoToXY(0,Local_u8Col);
    21f2:	fe 01       	movw	r30, r28
    21f4:	e0 5c       	subi	r30, 0xC0	; 192
    21f6:	ff 4f       	sbci	r31, 0xFF	; 255
    21f8:	90 81       	ld	r25, Z
    21fa:	80 e0       	ldi	r24, 0x00	; 0
    21fc:	69 2f       	mov	r22, r25
    21fe:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
    2202:	22 cc       	rjmp	.-1980   	; 0x1a48 <main+0x138>
				break;

			case KPD_LEFT:
				if(Local_u8Col==7 || Local_u8Col==4||Local_u8Col==1){
    2204:	fe 01       	movw	r30, r28
    2206:	e0 5c       	subi	r30, 0xC0	; 192
    2208:	ff 4f       	sbci	r31, 0xFF	; 255
    220a:	80 81       	ld	r24, Z
    220c:	87 30       	cpi	r24, 0x07	; 7
    220e:	61 f0       	breq	.+24     	; 0x2228 <main+0x918>
    2210:	fe 01       	movw	r30, r28
    2212:	e0 5c       	subi	r30, 0xC0	; 192
    2214:	ff 4f       	sbci	r31, 0xFF	; 255
    2216:	80 81       	ld	r24, Z
    2218:	84 30       	cpi	r24, 0x04	; 4
    221a:	31 f0       	breq	.+12     	; 0x2228 <main+0x918>
    221c:	fe 01       	movw	r30, r28
    221e:	e0 5c       	subi	r30, 0xC0	; 192
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 81       	ld	r24, Z
    2224:	81 30       	cpi	r24, 0x01	; 1
    2226:	51 f4       	brne	.+20     	; 0x223c <main+0x92c>
					Local_u8Col--;
    2228:	fe 01       	movw	r30, r28
    222a:	e0 5c       	subi	r30, 0xC0	; 192
    222c:	ff 4f       	sbci	r31, 0xFF	; 255
    222e:	80 81       	ld	r24, Z
    2230:	81 50       	subi	r24, 0x01	; 1
    2232:	fe 01       	movw	r30, r28
    2234:	e0 5c       	subi	r30, 0xC0	; 192
    2236:	ff 4f       	sbci	r31, 0xFF	; 255
    2238:	80 83       	st	Z, r24
    223a:	15 c0       	rjmp	.+42     	; 0x2266 <main+0x956>
				}
				else if(Local_u8Col==6 || Local_u8Col==3){
    223c:	fe 01       	movw	r30, r28
    223e:	e0 5c       	subi	r30, 0xC0	; 192
    2240:	ff 4f       	sbci	r31, 0xFF	; 255
    2242:	80 81       	ld	r24, Z
    2244:	86 30       	cpi	r24, 0x06	; 6
    2246:	31 f0       	breq	.+12     	; 0x2254 <main+0x944>
    2248:	fe 01       	movw	r30, r28
    224a:	e0 5c       	subi	r30, 0xC0	; 192
    224c:	ff 4f       	sbci	r31, 0xFF	; 255
    224e:	80 81       	ld	r24, Z
    2250:	83 30       	cpi	r24, 0x03	; 3
    2252:	49 f4       	brne	.+18     	; 0x2266 <main+0x956>
					Local_u8Col=Local_u8Col-2;
    2254:	fe 01       	movw	r30, r28
    2256:	e0 5c       	subi	r30, 0xC0	; 192
    2258:	ff 4f       	sbci	r31, 0xFF	; 255
    225a:	80 81       	ld	r24, Z
    225c:	82 50       	subi	r24, 0x02	; 2
    225e:	fe 01       	movw	r30, r28
    2260:	e0 5c       	subi	r30, 0xC0	; 192
    2262:	ff 4f       	sbci	r31, 0xFF	; 255
    2264:	80 83       	st	Z, r24
				}
				if(Local_u8Col<=0){
    2266:	fe 01       	movw	r30, r28
    2268:	e0 5c       	subi	r30, 0xC0	; 192
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	80 81       	ld	r24, Z
    226e:	18 16       	cp	r1, r24
    2270:	24 f0       	brlt	.+8      	; 0x227a <main+0x96a>
					Local_u8Col=0;
    2272:	fe 01       	movw	r30, r28
    2274:	e0 5c       	subi	r30, 0xC0	; 192
    2276:	ff 4f       	sbci	r31, 0xFF	; 255
    2278:	10 82       	st	Z, r1
				}
				CLCD_voidGoToXY(0,Local_u8Col);
    227a:	fe 01       	movw	r30, r28
    227c:	e0 5c       	subi	r30, 0xC0	; 192
    227e:	ff 4f       	sbci	r31, 0xFF	; 255
    2280:	90 81       	ld	r25, Z
    2282:	80 e0       	ldi	r24, 0x00	; 0
    2284:	69 2f       	mov	r22, r25
    2286:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
    228a:	de cb       	rjmp	.-2116   	; 0x1a48 <main+0x138>
				break;

			case 0 ... 9:
			CLCD_voidGoToXY(0,Local_u8Col);
    228c:	fe 01       	movw	r30, r28
    228e:	e0 5c       	subi	r30, 0xC0	; 192
    2290:	ff 4f       	sbci	r31, 0xFF	; 255
    2292:	90 81       	ld	r25, Z
    2294:	80 e0       	ldi	r24, 0x00	; 0
    2296:	69 2f       	mov	r22, r25
    2298:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_u8PressedVal);
    229c:	fe 01       	movw	r30, r28
    229e:	ef 5b       	subi	r30, 0xBF	; 191
    22a0:	ff 4f       	sbci	r31, 0xFF	; 255
    22a2:	80 81       	ld	r24, Z
    22a4:	99 27       	eor	r25, r25
    22a6:	87 fd       	sbrc	r24, 7
    22a8:	90 95       	com	r25
    22aa:	a9 2f       	mov	r26, r25
    22ac:	b9 2f       	mov	r27, r25
    22ae:	bc 01       	movw	r22, r24
    22b0:	cd 01       	movw	r24, r26
    22b2:	0e 94 9b 08 	call	0x1136	; 0x1136 <CLCD_voidWriteNumber>
			Local_u8LastNum=Local_u8PressedVal;
    22b6:	fe 01       	movw	r30, r28
    22b8:	ef 5b       	subi	r30, 0xBF	; 191
    22ba:	ff 4f       	sbci	r31, 0xFF	; 255
    22bc:	80 81       	ld	r24, Z
    22be:	89 af       	std	Y+57, r24	; 0x39
    22c0:	c3 cb       	rjmp	.-2170   	; 0x1a48 <main+0x138>
			break;
			case KPD_RESET:
				CLCD_voidInit();
    22c2:	0e 94 84 07 	call	0xf08	; 0xf08 <CLCD_voidInit>
				CLCD_voidSendString("00:00:00");
    22c6:	80 e6       	ldi	r24, 0x60	; 96
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	0e 94 12 08 	call	0x1024	; 0x1024 <CLCD_voidSendString>
				CLCD_voidGoToXY(0,0);
    22ce:	80 e0       	ldi	r24, 0x00	; 0
    22d0:	60 e0       	ldi	r22, 0x00	; 0
    22d2:	0e 94 3b 08 	call	0x1076	; 0x1076 <CLCD_voidGoToXY>
				Local_u8Col=0;
    22d6:	fe 01       	movw	r30, r28
    22d8:	e0 5c       	subi	r30, 0xC0	; 192
    22da:	ff 4f       	sbci	r31, 0xFF	; 255
    22dc:	10 82       	st	Z, r1
				Local_u8Sec1=0;
    22de:	1c ae       	std	Y+60, r1	; 0x3c
				Local_u8Sec2=0;
    22e0:	1b ae       	std	Y+59, r1	; 0x3b
				Local_u8Min2=0;
    22e2:	1a ae       	std	Y+58, r1	; 0x3a
				Local_u8Min1=0;
    22e4:	1d ae       	std	Y+61, r1	; 0x3d
				Local_u8Hour2=0;
    22e6:	1e ae       	std	Y+62, r1	; 0x3e
				Local_u8Hour1=0;
    22e8:	1f ae       	std	Y+63, r1	; 0x3f
    22ea:	ae cb       	rjmp	.-2212   	; 0x1a48 <main+0x138>

000022ec <__mulsi3>:
    22ec:	62 9f       	mul	r22, r18
    22ee:	d0 01       	movw	r26, r0
    22f0:	73 9f       	mul	r23, r19
    22f2:	f0 01       	movw	r30, r0
    22f4:	82 9f       	mul	r24, r18
    22f6:	e0 0d       	add	r30, r0
    22f8:	f1 1d       	adc	r31, r1
    22fa:	64 9f       	mul	r22, r20
    22fc:	e0 0d       	add	r30, r0
    22fe:	f1 1d       	adc	r31, r1
    2300:	92 9f       	mul	r25, r18
    2302:	f0 0d       	add	r31, r0
    2304:	83 9f       	mul	r24, r19
    2306:	f0 0d       	add	r31, r0
    2308:	74 9f       	mul	r23, r20
    230a:	f0 0d       	add	r31, r0
    230c:	65 9f       	mul	r22, r21
    230e:	f0 0d       	add	r31, r0
    2310:	99 27       	eor	r25, r25
    2312:	72 9f       	mul	r23, r18
    2314:	b0 0d       	add	r27, r0
    2316:	e1 1d       	adc	r30, r1
    2318:	f9 1f       	adc	r31, r25
    231a:	63 9f       	mul	r22, r19
    231c:	b0 0d       	add	r27, r0
    231e:	e1 1d       	adc	r30, r1
    2320:	f9 1f       	adc	r31, r25
    2322:	bd 01       	movw	r22, r26
    2324:	cf 01       	movw	r24, r30
    2326:	11 24       	eor	r1, r1
    2328:	08 95       	ret

0000232a <__udivmodsi4>:
    232a:	a1 e2       	ldi	r26, 0x21	; 33
    232c:	1a 2e       	mov	r1, r26
    232e:	aa 1b       	sub	r26, r26
    2330:	bb 1b       	sub	r27, r27
    2332:	fd 01       	movw	r30, r26
    2334:	0d c0       	rjmp	.+26     	; 0x2350 <__udivmodsi4_ep>

00002336 <__udivmodsi4_loop>:
    2336:	aa 1f       	adc	r26, r26
    2338:	bb 1f       	adc	r27, r27
    233a:	ee 1f       	adc	r30, r30
    233c:	ff 1f       	adc	r31, r31
    233e:	a2 17       	cp	r26, r18
    2340:	b3 07       	cpc	r27, r19
    2342:	e4 07       	cpc	r30, r20
    2344:	f5 07       	cpc	r31, r21
    2346:	20 f0       	brcs	.+8      	; 0x2350 <__udivmodsi4_ep>
    2348:	a2 1b       	sub	r26, r18
    234a:	b3 0b       	sbc	r27, r19
    234c:	e4 0b       	sbc	r30, r20
    234e:	f5 0b       	sbc	r31, r21

00002350 <__udivmodsi4_ep>:
    2350:	66 1f       	adc	r22, r22
    2352:	77 1f       	adc	r23, r23
    2354:	88 1f       	adc	r24, r24
    2356:	99 1f       	adc	r25, r25
    2358:	1a 94       	dec	r1
    235a:	69 f7       	brne	.-38     	; 0x2336 <__udivmodsi4_loop>
    235c:	60 95       	com	r22
    235e:	70 95       	com	r23
    2360:	80 95       	com	r24
    2362:	90 95       	com	r25
    2364:	9b 01       	movw	r18, r22
    2366:	ac 01       	movw	r20, r24
    2368:	bd 01       	movw	r22, r26
    236a:	cf 01       	movw	r24, r30
    236c:	08 95       	ret

0000236e <__prologue_saves__>:
    236e:	2f 92       	push	r2
    2370:	3f 92       	push	r3
    2372:	4f 92       	push	r4
    2374:	5f 92       	push	r5
    2376:	6f 92       	push	r6
    2378:	7f 92       	push	r7
    237a:	8f 92       	push	r8
    237c:	9f 92       	push	r9
    237e:	af 92       	push	r10
    2380:	bf 92       	push	r11
    2382:	cf 92       	push	r12
    2384:	df 92       	push	r13
    2386:	ef 92       	push	r14
    2388:	ff 92       	push	r15
    238a:	0f 93       	push	r16
    238c:	1f 93       	push	r17
    238e:	cf 93       	push	r28
    2390:	df 93       	push	r29
    2392:	cd b7       	in	r28, 0x3d	; 61
    2394:	de b7       	in	r29, 0x3e	; 62
    2396:	ca 1b       	sub	r28, r26
    2398:	db 0b       	sbc	r29, r27
    239a:	0f b6       	in	r0, 0x3f	; 63
    239c:	f8 94       	cli
    239e:	de bf       	out	0x3e, r29	; 62
    23a0:	0f be       	out	0x3f, r0	; 63
    23a2:	cd bf       	out	0x3d, r28	; 61
    23a4:	09 94       	ijmp

000023a6 <__epilogue_restores__>:
    23a6:	2a 88       	ldd	r2, Y+18	; 0x12
    23a8:	39 88       	ldd	r3, Y+17	; 0x11
    23aa:	48 88       	ldd	r4, Y+16	; 0x10
    23ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    23ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    23b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    23b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    23b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    23b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    23b8:	b9 84       	ldd	r11, Y+9	; 0x09
    23ba:	c8 84       	ldd	r12, Y+8	; 0x08
    23bc:	df 80       	ldd	r13, Y+7	; 0x07
    23be:	ee 80       	ldd	r14, Y+6	; 0x06
    23c0:	fd 80       	ldd	r15, Y+5	; 0x05
    23c2:	0c 81       	ldd	r16, Y+4	; 0x04
    23c4:	1b 81       	ldd	r17, Y+3	; 0x03
    23c6:	aa 81       	ldd	r26, Y+2	; 0x02
    23c8:	b9 81       	ldd	r27, Y+1	; 0x01
    23ca:	ce 0f       	add	r28, r30
    23cc:	d1 1d       	adc	r29, r1
    23ce:	0f b6       	in	r0, 0x3f	; 63
    23d0:	f8 94       	cli
    23d2:	de bf       	out	0x3e, r29	; 62
    23d4:	0f be       	out	0x3f, r0	; 63
    23d6:	cd bf       	out	0x3d, r28	; 61
    23d8:	ed 01       	movw	r28, r26
    23da:	08 95       	ret

000023dc <_exit>:
    23dc:	f8 94       	cli

000023de <__stop_program>:
    23de:	ff cf       	rjmp	.-2      	; 0x23de <__stop_program>
